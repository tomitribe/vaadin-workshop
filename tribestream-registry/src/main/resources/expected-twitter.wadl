<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<application xmlns:ns1="http://dev.twitter.com/api" xmlns:ns2="http://www.tomitribe.com/schemas/2014/02/wadl/extension/group" xmlns:ns3="http://www.tomitribe.com/schemas/2014/02/wadl/extension/other" xmlns:ns4="http://www.tomitribe.com/schemas/2014/02/wadl/extension/rate" xmlns:ns5="http://www.tomitribe.com/schemas/2014/02/wadl/extension/security" xmlns="http://wadl.dev.java.net/2009/02">
    <grammars>
        <xs:schema xmlns:nsts="http://dev.twitter.com/api" xmlns:xs="http://www.w3.org/2001/XMLSchema" attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://dev.twitter.com/api">

  <xs:element name="entities" type="nsts:entitiesType"/>
  <xs:complexType name="entitiesType">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="hashtags" type="nsts:hashtagsType">
        <xs:annotation>
          <xs:documentation>Represents hashtags which have been parsed out of the Tweet text.
         
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;hashtags&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="br0"&gt;&amp;#91;&lt;/span&gt;&lt;span class="br0"&gt;&amp;#123;&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;indices&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="br0"&gt;&amp;#91;&lt;/span&gt;&lt;span class="nu0"&gt;32&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt;&lt;span class="nu0"&gt;36&lt;/span&gt;&lt;span class="br0"&gt;&amp;#93;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;text&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;lol&amp;quot;&lt;/span&gt;&lt;span class="br0"&gt;&amp;#125;&lt;/span&gt;&lt;span class="br0"&gt;&amp;#93;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
 &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element maxOccurs="unbounded" name="media" type="nsts:mediaType">
        <xs:annotation>
          <xs:documentation>Represents media elements uploaded with the Tweet.
 
         
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;media&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="br0"&gt;&amp;#91;&lt;/span&gt;&lt;span class="br0"&gt;&amp;#123;&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;type&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;photo&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;sizes&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="br0"&gt;&amp;#123;&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;thumb&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="br0"&gt;&amp;#123;&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;h&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="nu0"&gt;150&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;resize&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;crop&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;w&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="nu0"&gt;150&lt;/span&gt;&lt;span class="br0"&gt;&amp;#125;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;large&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="br0"&gt;&amp;#123;&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;h&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="nu0"&gt;238&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;resize&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;fit&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;w&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="nu0"&gt;226&lt;/span&gt;&lt;span class="br0"&gt;&amp;#125;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;medium&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="br0"&gt;&amp;#123;&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;h&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="nu0"&gt;238&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;resize&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;fit&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;w&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="nu0"&gt;226&lt;/span&gt;&lt;span class="br0"&gt;&amp;#125;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;small&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="br0"&gt;&amp;#123;&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;h&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="nu0"&gt;238&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;resize&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;fit&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;w&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="nu0"&gt;226&lt;/span&gt;&lt;span class="br0"&gt;&amp;#125;&lt;/span&gt;&lt;span class="br0"&gt;&amp;#125;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;indices&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="br0"&gt;&amp;#91;&lt;/span&gt;&lt;span class="nu0"&gt;15&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt;&lt;span class="nu0"&gt;35&lt;/span&gt;&lt;span class="br0"&gt;&amp;#93;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;url&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;http:&lt;span class="es0"&gt;\/&lt;/span&gt;&lt;span class="es0"&gt;\/&lt;/span&gt;t.co&lt;span class="es0"&gt;\/&lt;/span&gt;rJC5Pxsu&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;media_url&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;http:&lt;span class="es0"&gt;\/&lt;/span&gt;&lt;span class="es0"&gt;\/&lt;/span&gt;p.twimg.com&lt;span class="es0"&gt;\/&lt;/span&gt;AZVLmp-CIAAbkyy.jpg&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;display_url&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;pic.twitter.com&lt;span class="es0"&gt;\/&lt;/span&gt;rJC5Pxsu&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;id&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="nu0"&gt;114080493040967680&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;id_str&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;114080493040967680&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;expanded_url&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;http:&lt;span class="es0"&gt;\/&lt;/span&gt;&lt;span class="es0"&gt;\/&lt;/span&gt;twitter.com&lt;span class="es0"&gt;\/&lt;/span&gt;yunorno&lt;span class="es0"&gt;\/&lt;/span&gt;status&lt;span class="es0"&gt;\/&lt;/span&gt;114080493036773378&lt;span class="es0"&gt;\/&lt;/span&gt;photo&lt;span class="es0"&gt;\/&lt;/span&gt;1&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;media_url_https&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;https:&lt;span class="es0"&gt;\/&lt;/span&gt;&lt;span class="es0"&gt;\/&lt;/span&gt;p.twimg.com&lt;span class="es0"&gt;\/&lt;/span&gt;AZVLmp-CIAAbkyy.jpg&amp;quot;&lt;/span&gt;&lt;span class="br0"&gt;&amp;#125;&lt;/span&gt;&lt;span class="br0"&gt;&amp;#93;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
 &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element maxOccurs="unbounded" name="urls" type="nsts:urlsType">
        <xs:annotation>
          <xs:documentation>Represents URLs included in the text of a Tweet or within textual fields of a &lt;a href="https://dev.twitter.com/docs/platform-objects/users"&gt;user object&lt;/a&gt;.
 
         &lt;p&gt;Tweet Example:&lt;br/&gt;
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;urls&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="br0"&gt;&amp;#91;&lt;/span&gt;&lt;span class="br0"&gt;&amp;#123;&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;indices&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="br0"&gt;&amp;#91;&lt;/span&gt;&lt;span class="nu0"&gt;32&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt;&lt;span class="nu0"&gt;52&lt;/span&gt;&lt;span class="br0"&gt;&amp;#93;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;url&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;http:&lt;span class="es0"&gt;\/&lt;/span&gt;&lt;span class="es0"&gt;\/&lt;/span&gt;t.co&lt;span class="es0"&gt;\/&lt;/span&gt;IOwBrTZR&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;display_url&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;youtube.com&lt;span class="es0"&gt;\/&lt;/span&gt;watch?v=oHg5SJ&lt;span class="es0"&gt;\u&lt;/span&gt;2026&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;expanded_url&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;http:&lt;span class="es0"&gt;\/&lt;/span&gt;&lt;span class="es0"&gt;\/&lt;/span&gt;www.youtube.com&lt;span class="es0"&gt;\/&lt;/span&gt;watch?v=oHg5SJYRHA0&amp;quot;&lt;/span&gt;&lt;span class="br0"&gt;&amp;#125;&lt;/span&gt;&lt;span class="br0"&gt;&amp;#93;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
         &lt;/p&gt;
         &lt;p&gt;User Example:&lt;br/&gt;
           &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;          &lt;span class="st0"&gt;&amp;quot;urls&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="br0"&gt;&amp;#91;&lt;/span&gt;&lt;span class="br0"&gt;&amp;#123;&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;indices&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="br0"&gt;&amp;#91;&lt;/span&gt;&lt;span class="nu0"&gt;32&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt;&lt;span class="nu0"&gt;52&lt;/span&gt;&lt;span class="br0"&gt;&amp;#93;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;url&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;http:&lt;span class="es0"&gt;\/&lt;/span&gt;&lt;span class="es0"&gt;\/&lt;/span&gt;t.co&lt;span class="es0"&gt;\/&lt;/span&gt;IOwBrTZR&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;display_url&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;youtube.com&lt;span class="es0"&gt;\/&lt;/span&gt;watch?v=oHg5SJ&lt;span class="es0"&gt;\u&lt;/span&gt;2026&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;expanded_url&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;http:&lt;span class="es0"&gt;\/&lt;/span&gt;&lt;span class="es0"&gt;\/&lt;/span&gt;www.youtube.com&lt;span class="es0"&gt;\/&lt;/span&gt;watch?v=oHg5SJYRHA0&amp;quot;&lt;/span&gt;&lt;span class="br0"&gt;&amp;#125;&lt;/span&gt;&lt;span class="br0"&gt;&amp;#93;&lt;/span&gt;
 &amp;nbsp;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element maxOccurs="unbounded" name="user_mentions" type="nsts:usermentionType">
        <xs:annotation>
          <xs:documentation>Represents other Twitter users mentioned in the text of the Tweet.
 
         
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;user_mentions&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="br0"&gt;&amp;#91;&lt;/span&gt;&lt;span class="br0"&gt;&amp;#123;&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;Twitter API&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;indices&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="br0"&gt;&amp;#91;&lt;/span&gt;&lt;span class="nu0"&gt;4&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt;&lt;span class="nu0"&gt;15&lt;/span&gt;&lt;span class="br0"&gt;&amp;#93;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;screen_name&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;twitterapi&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;id&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="nu0"&gt;6253282&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;id_str&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;6253282&amp;quot;&lt;/span&gt;&lt;span class="br0"&gt;&amp;#125;&lt;/span&gt;&lt;span class="br0"&gt;&amp;#93;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
 &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="hashtags" type="nsts:hashtagsType"/>
  <xs:complexType name="hashtagsType">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="indices" type="xs:int">
        <xs:annotation>
          <xs:documentation>An array of integers indicating the offsets within the Tweet text where the hashtag begins and ends.  The first integer represents the location of the # character in the Tweet text string.  The second integer represents the location of the first character after the hashtag.  Therefore the difference between the two numbers will be the length of the hashtag name plus one (for the '#' character).
         
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;indices&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="br0"&gt;&amp;#91;&lt;/span&gt;&lt;span class="nu0"&gt;32&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt;&lt;span class="nu0"&gt;36&lt;/span&gt;&lt;span class="br0"&gt;&amp;#93;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
 &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="text" type="xs:string">
        <xs:annotation>
          <xs:documentation>Name of the hashtag, minus the leading '#' character.
         
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;text&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;lol&amp;quot;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
 &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="media" type="nsts:mediaType"/>
  <xs:complexType name="mediaType">
    <xs:sequence>
      <xs:element name="display_url" type="xs:string">
        <xs:annotation>
          <xs:documentation>URL of the media to display to clients.
         
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;display_url&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;pic.twitter.com&lt;span class="es0"&gt;\/&lt;/span&gt;rJC5Pxsu&amp;quot;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
 &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="expanded_url" type="xs:string">
        <xs:annotation>
          <xs:documentation>An expanded version of display_url.  Links to the media display page.
         
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;expanded_url&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;http:&lt;span class="es0"&gt;\/&lt;/span&gt;&lt;span class="es0"&gt;\/&lt;/span&gt;twitter.com&lt;span class="es0"&gt;\/&lt;/span&gt;yunorno&lt;span class="es0"&gt;\/&lt;/span&gt;status&lt;span class="es0"&gt;\/&lt;/span&gt;114080493036773378&lt;span class="es0"&gt;\/&lt;/span&gt;photo&lt;span class="es0"&gt;\/&lt;/span&gt;1&amp;quot;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
 &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="id" type="xs:long">
        <xs:annotation>
          <xs:documentation>ID of the media expressed as a 64-bit integer.
         
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;id&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="nu0"&gt;114080493040967680&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
 &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="id_str" type="xs:string">
        <xs:annotation>
          <xs:documentation>ID of the media expressed as a string.
         
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;id_str&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;114080493040967680&amp;quot;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
 &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element maxOccurs="unbounded" name="indices" type="xs:int">
        <xs:annotation>
          <xs:documentation>An array of integers indicating the offsets within the Tweet text where the URL begins and ends.  The first integer represents the location of the first character of the URL in the Tweet text.  The second integer represents the location of the first non-URL character occurring after the URL (or the end of the string if the URL is the last part of the Tweet text).
         
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;indices&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="br0"&gt;&amp;#91;&lt;/span&gt;&lt;span class="nu0"&gt;15&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt;&lt;span class="nu0"&gt;35&lt;/span&gt;&lt;span class="br0"&gt;&amp;#93;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
 &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="media_url" type="xs:string">
        <xs:annotation>
          <xs:documentation>An http:// URL pointing directly to the uploaded media file.
         
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;media_url&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;http:&lt;span class="es0"&gt;\/&lt;/span&gt;&lt;span class="es0"&gt;\/&lt;/span&gt;p.twimg.com&lt;span class="es0"&gt;\/&lt;/span&gt;AZVLmp-CIAAbkyy.jpg&amp;quot;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
 &lt;/p&gt;
 &lt;p&gt;For media in direct messages, &lt;tt&gt;media_url&lt;/tt&gt; is the same https URL as &lt;tt&gt;media_url_https&lt;/tt&gt; and must be accessed via an authenticated twitter.com session or by signing a request with the user's access token using OAuth 1.0A. You can see more details on the &lt;a href="https://dev.twitter.com/docs/entities#dms"&gt;entities in DMs description&lt;/a&gt;. It is not possible to directly embed these images in a web page.&lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="media_url_https" type="xs:string">
        <xs:annotation>
          <xs:documentation>An https:// URL pointing directly to the uploaded media file, for embedding on https pages.
         
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;media_url_https&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;https:&lt;span class="es0"&gt;\/&lt;/span&gt;&lt;span class="es0"&gt;\/&lt;/span&gt;p.twimg.com&lt;span class="es0"&gt;\/&lt;/span&gt;AZVLmp-CIAAbkyy.jpg&amp;quot;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
 &lt;/p&gt;
 &lt;p&gt;
 For media in direct messages, &lt;tt&gt;media_url_https&lt;/tt&gt; must be accessed via an authenticated twitter.com session or by signing a request with the user's access token using OAuth 1.0A. You can see more details on the &lt;a href="https://dev.twitter.com/docs/entities#dms"&gt;entities in DMs description&lt;/a&gt;. It is not possible to directly embed these images in a web page.
 &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="sizes" type="nsts:sizesType">
        <xs:annotation>
          <xs:documentation>An object showing available sizes for the media file.
         
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;sizes&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="br0"&gt;&amp;#123;&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;thumb&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="br0"&gt;&amp;#123;&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;h&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="nu0"&gt;150&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;resize&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;crop&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;w&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="nu0"&gt;150&lt;/span&gt;&lt;span class="br0"&gt;&amp;#125;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;large&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="br0"&gt;&amp;#123;&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;h&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="nu0"&gt;238&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;resize&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;fit&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;w&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="nu0"&gt;226&lt;/span&gt;&lt;span class="br0"&gt;&amp;#125;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;medium&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="br0"&gt;&amp;#123;&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;h&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="nu0"&gt;238&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;resize&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;fit&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;w&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="nu0"&gt;226&lt;/span&gt;&lt;span class="br0"&gt;&amp;#125;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;small&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="br0"&gt;&amp;#123;&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;h&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="nu0"&gt;238&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;resize&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;fit&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;w&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="nu0"&gt;226&lt;/span&gt;&lt;span class="br0"&gt;&amp;#125;&lt;/span&gt;&lt;span class="br0"&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
 &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="source_status_id" type="nsts:sizesType">
        <xs:annotation>
          <xs:documentation>For Tweets containing media that was originally associated with a different tweet, this ID points to the original Tweet.
         
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;source_status_id&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt; &lt;span class="nu0"&gt;205282515685081088&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
 &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="source_status_id_str" type="nsts:sizesType">
        <xs:annotation>
          <xs:documentation>For Tweets containing media that was originally associated with a different tweet, this string-based ID points to the original Tweet.
         
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;  &lt;span class="st0"&gt;&amp;quot;source_status_id_str&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;205282515685081088&amp;quot;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
 &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="type" type="xs:string">
        <xs:annotation>
          <xs:documentation>Type of uploaded media.
         
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;type&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;photo&amp;quot;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
 &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="url" type="xs:string">
        <xs:annotation>
          <xs:documentation>Wrapped URL for the media link.  This corresponds with the URL embedded directly into the raw Tweet text, and the values for the &lt;tt&gt;indices&lt;/tt&gt; parameter.
         
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;url&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;http:&lt;span class="es0"&gt;\/&lt;/span&gt;&lt;span class="es0"&gt;\/&lt;/span&gt;t.co&lt;span class="es0"&gt;\/&lt;/span&gt;rJC5Pxsu&amp;quot;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
 &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="size" type="nsts:sizeType"/>
  <xs:complexType name="sizeType">
    <xs:sequence>
      <xs:element name="h" type="xs:int">
        <xs:annotation>
          <xs:documentation>Height in pixels of this size.
         
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;h&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="nu0"&gt;150&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
 &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="resize" type="xs:string">
        <xs:annotation>
          <xs:documentation>Resizing method used to obtain this size.  A value of &lt;tt&gt;fit&lt;/tt&gt; means that the media was resized to fit one dimension, keeping its native aspect ratio.  A value of &lt;tt&gt;crop&lt;/tt&gt; means that the media was cropped in order to fit a specific resolution.
         
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;resize&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;crop&amp;quot;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
 &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="w" type="xs:int">
        <xs:annotation>
          <xs:documentation>Width in pixels of this size.
         
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;w&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="nu0"&gt;150&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
 &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="sizes" type="nsts:sizesType"/>
  <xs:complexType name="sizesType">
    <xs:sequence>
      <xs:element name="thumb" type="nsts:sizeType">
        <xs:annotation>
          <xs:documentation>Information for a thumbnail-sized version of the media.
         
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;thumb&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="br0"&gt;&amp;#123;&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;h&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="nu0"&gt;150&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;resize&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;crop&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;w&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="nu0"&gt;150&lt;/span&gt;&lt;span class="br0"&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
 &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="large" type="nsts:sizeType">
        <xs:annotation>
          <xs:documentation>Information for a large-sized version of the media.
         
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;large&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="br0"&gt;&amp;#123;&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;h&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="nu0"&gt;238&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;resize&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;fit&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;w&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="nu0"&gt;226&lt;/span&gt;&lt;span class="br0"&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
 &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="medium" type="nsts:sizeType">
        <xs:annotation>
          <xs:documentation>Information for a medium-sized version of the media.
         
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;medium&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="br0"&gt;&amp;#123;&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;h&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="nu0"&gt;238&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;resize&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;fit&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;w&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="nu0"&gt;226&lt;/span&gt;&lt;span class="br0"&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
 &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="small" type="nsts:sizeType">
        <xs:annotation>
          <xs:documentation>Information for a small-sized version of the media.
         
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;small&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="br0"&gt;&amp;#123;&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;h&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="nu0"&gt;238&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;resize&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;fit&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;w&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="nu0"&gt;226&lt;/span&gt;&lt;span class="br0"&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
 &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="urls" type="nsts:urlsType"/>
  <xs:complexType name="urlsType">
    <xs:sequence>
      <xs:element name="display_url" type="xs:string">
        <xs:annotation>
          <xs:documentation>Version of the URL to display to clients.
         
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;display_url&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;youtube.com&lt;span class="es0"&gt;\/&lt;/span&gt;watch?v=oHg5SJ&lt;span class="es0"&gt;\u&lt;/span&gt;2026&amp;quot;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
 &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="expanded_url" type="xs:string">
        <xs:annotation>
          <xs:documentation>Expanded version of &lt;tt&gt;display_url&lt;/tt&gt;.
         
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;expanded_url&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;http:&lt;span class="es0"&gt;\/&lt;/span&gt;&lt;span class="es0"&gt;\/&lt;/span&gt;www.youtube.com&lt;span class="es0"&gt;\/&lt;/span&gt;watch?v=oHg5SJYRHA0&amp;quot;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
 &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element maxOccurs="unbounded" name="indices" type="xs:int">
        <xs:annotation>
          <xs:documentation>An array of integers representing offsets within the Tweet text where the URL begins and ends.  The first integer represents the location of the first character of the URL in the Tweet text.  The second integer represents the location of the first non-URL character after the end of the URL.
         
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;indices&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="br0"&gt;&amp;#91;&lt;/span&gt;&lt;span class="nu0"&gt;32&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt;&lt;span class="nu0"&gt;52&lt;/span&gt;&lt;span class="br0"&gt;&amp;#93;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
 &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="url" type="xs:string">
        <xs:annotation>
          <xs:documentation>Wrapped URL, corresponding to the value embedded directly into the raw Tweet text, and the values for the
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;indices&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
  parameter.
         
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;url&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;http:&lt;span class="es0"&gt;\/&lt;/span&gt;&lt;span class="es0"&gt;\/&lt;/span&gt;t.co&lt;span class="es0"&gt;\/&lt;/span&gt;IOwBrTZR&amp;quot;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
 &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="usermention" type="nsts:usermentionType"/>
  <xs:complexType name="usermentionType">
    <xs:sequence>
      <xs:element name="id" type="xs:long">
        <xs:annotation>
          <xs:documentation>ID of the mentioned user, as an integer.
         
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;id&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="nu0"&gt;6253282&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
 &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="id_str" type="xs:string">
        <xs:annotation>
          <xs:documentation>If of the mentioned user, as a string.
         
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;id_str&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;6253282&amp;quot;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
 &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element maxOccurs="unbounded" name="indices" type="xs:int">
        <xs:annotation>
          <xs:documentation>An array of integers representing the offsets within the Tweet text where the user reference begins and ends.  The first integer represents the location of the '@' character of the user mention.  The second integer represents the location of the first non-screenname character following the user mention.
         
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;indices&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="br0"&gt;&amp;#91;&lt;/span&gt;&lt;span class="nu0"&gt;4&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt;&lt;span class="nu0"&gt;15&lt;/span&gt;&lt;span class="br0"&gt;&amp;#93;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
 &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="name" type="xs:string">
        <xs:annotation>
          <xs:documentation>Display name of the referenced user.
         
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;Twitter API&amp;quot;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
 &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="screen_name" type="xs:string">
        <xs:annotation>
          <xs:documentation>Screen name of the referenced user.
         
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;screen_name&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;twitterapi&amp;quot;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
 &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="places" type="nsts:placesType"/>
  <xs:complexType name="placesType">
    <xs:sequence>
      <xs:element name="attributes" type="xs:string">
        <xs:annotation>
          <xs:documentation>Contains a hash of variant information about the place. See &lt;a href="https://dev.twitter.com/docs/about-geo-place-attributes"&gt;About Geo Place Attributes&lt;/a&gt;.
         
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;attributes&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt; &lt;span class="br0"&gt;&amp;#123;&lt;/span&gt;
     &lt;span class="st0"&gt;&amp;quot;street_address&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;795 Folsom St&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt;
     &lt;span class="st0"&gt;&amp;quot;623:id&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;210176&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt;
     &lt;span class="st0"&gt;&amp;quot;twitter&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;twitter&amp;quot;&lt;/span&gt;
 &lt;span class="br0"&gt;&amp;#125;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="bounding_box" type="nsts:boundingboxType">
        <xs:annotation>
          <xs:documentation>A bounding box of coordinates which encloses this place.
         
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;bounding_box&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="br0"&gt;&amp;#123;&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;coordinates&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="br0"&gt;&amp;#91;&lt;/span&gt; &lt;span class="br0"&gt;&amp;#91;&lt;/span&gt; &lt;span class="br0"&gt;&amp;#91;&lt;/span&gt;&lt;span class="nu0"&gt;2.2241006&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt;&lt;span class="nu0"&gt;48.8155414&lt;/span&gt;&lt;span class="br0"&gt;&amp;#93;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="br0"&gt;&amp;#91;&lt;/span&gt;&lt;span class="nu0"&gt;2.4699099&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt;&lt;span class="nu0"&gt;48.8155414&lt;/span&gt;&lt;span class="br0"&gt;&amp;#93;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="br0"&gt;&amp;#91;&lt;/span&gt;&lt;span class="nu0"&gt;2.4699099&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt;&lt;span class="nu0"&gt;48.9021461&lt;/span&gt;&lt;span class="br0"&gt;&amp;#93;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="br0"&gt;&amp;#91;&lt;/span&gt;&lt;span class="nu0"&gt;2.2241006&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt;&lt;span class="nu0"&gt;48.9021461&lt;/span&gt;&lt;span class="br0"&gt;&amp;#93;&lt;/span&gt; &lt;span class="br0"&gt;&amp;#93;&lt;/span&gt; &lt;span class="br0"&gt;&amp;#93;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;type&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;Polygon&amp;quot;&lt;/span&gt;&lt;span class="br0"&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
 &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="country" type="xs:string">
        <xs:annotation>
          <xs:documentation>Name of the country containing this place.
         
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;country&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;France&amp;quot;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="country_code" type="xs:string">
        <xs:annotation>
          <xs:documentation>Shortened country code representing the country containing this place.
         
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;country_code&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;FR&amp;quot;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="full_name" type="xs:string">
        <xs:annotation>
          <xs:documentation>Full human-readable representation of the place's name.
         
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;full_name&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;Paris, Paris&amp;quot;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="id" type="xs:string">
        <xs:annotation>
          <xs:documentation>ID representing this place.  Note that this is represented as a string, not an integer.
         
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;id&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;7238f93a3e899af6&amp;quot;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="name" type="xs:string">
        <xs:annotation>
          <xs:documentation>Short human-readable representation of the place's name.
         
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;Paris&amp;quot;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="place_type" type="xs:string">
        <xs:annotation>
          <xs:documentation>The type of location represented by this place.
         
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;place_type&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;city&amp;quot;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
 &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="url" type="xs:string">
        <xs:annotation>
          <xs:documentation>URL representing the location of additional place metadata for this place.
         
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;url&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;http://api.twitter.com/1/geo/id/7238f93a3e899af6.json&amp;quot;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="boundingbox" type="nsts:boundingboxType"/>
  <xs:complexType name="boundingboxType">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="coordinates" type="xs:float">
        <xs:annotation>
          <xs:documentation>A series of longitude and latitude points, defining a box which will contain the Place entity this bounding box is related to. Each point is an array in the form of [longitude, latitude].  Points are grouped into an array per bounding box.  Bounding box arrays are wrapped in one additional array to be compatible with the polygon notation.
         
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;coordinates&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="br0"&gt;&amp;#91;&lt;/span&gt; &lt;span class="br0"&gt;&amp;#91;&lt;/span&gt; &lt;span class="br0"&gt;&amp;#91;&lt;/span&gt;&lt;span class="nu0"&gt;2.2241006&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt;&lt;span class="nu0"&gt;48.8155414&lt;/span&gt;&lt;span class="br0"&gt;&amp;#93;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="br0"&gt;&amp;#91;&lt;/span&gt;&lt;span class="nu0"&gt;2.4699099&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt;&lt;span class="nu0"&gt;48.8155414&lt;/span&gt;&lt;span class="br0"&gt;&amp;#93;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="br0"&gt;&amp;#91;&lt;/span&gt;&lt;span class="nu0"&gt;2.4699099&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt;&lt;span class="nu0"&gt;48.9021461&lt;/span&gt;&lt;span class="br0"&gt;&amp;#93;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="br0"&gt;&amp;#91;&lt;/span&gt;&lt;span class="nu0"&gt;2.2241006&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt;&lt;span class="nu0"&gt;48.9021461&lt;/span&gt;&lt;span class="br0"&gt;&amp;#93;&lt;/span&gt; &lt;span class="br0"&gt;&amp;#93;&lt;/span&gt; &lt;span class="br0"&gt;&amp;#93;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="type" type="xs:string">
        <xs:annotation>
          <xs:documentation>The type of data encoded in the coordinates property. This will be "Polygon" for bounding boxes.
         
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;type&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;Polygon&amp;quot;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="tweets" type="nsts:tweetsType"/>
  <xs:complexType name="tweetsType">
    <xs:sequence>
      <xs:element name="annotations" type="xs:string">
        <xs:annotation>
          <xs:documentation>&lt;i&gt;Unused&lt;/i&gt;. Future/beta home for status annotations.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="contributors" type="nsts:contributorsType">
        <xs:annotation>
          <xs:documentation>&lt;i&gt;Nullable&lt;/i&gt;. An collection of brief user objects (usually only one) indicating users who contributed to the authorship of the tweet, on behalf of the official tweet author. &lt;a href="http://groups.google.com/group/twitter-development-talk/browse_thread/thread/6a16efa375532182/"&gt;Discussion&lt;/a&gt;.
         &lt;p&gt;
           Example:&lt;br/&gt;
 
 
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;contributors&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;
 &lt;span class="br0"&gt;&amp;#91;&lt;/span&gt;
     &lt;span class="br0"&gt;&amp;#123;&lt;/span&gt;
         &lt;span class="st0"&gt;&amp;quot;id&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="nu0"&gt;819797&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt;
         &lt;span class="st0"&gt;&amp;quot;id_str&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;819797&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt;
         &lt;span class="st0"&gt;&amp;quot;screen_name&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;episod&amp;quot;&lt;/span&gt;
     &lt;span class="br0"&gt;&amp;#125;&lt;/span&gt;
 &lt;span class="br0"&gt;&amp;#93;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
         &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="coordinates" type="nsts:coordinatesType">
        <xs:annotation>
          <xs:documentation>&lt;i&gt;Nullable&lt;/i&gt;. Represents the geographic location of this Tweet as reported by the user or client application. The inner coordinates array is formatted as &lt;a href="http://www.geojson.org/"&gt;geoJSON&lt;/a&gt; (longitude first, then latitude).
         &lt;p&gt;
           Example:&lt;br/&gt;
 
 
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;coordinates&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;
 &lt;span class="br0"&gt;&amp;#123;&lt;/span&gt;
     &lt;span class="st0"&gt;&amp;quot;coordinates&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;
     &lt;span class="br0"&gt;&amp;#91;&lt;/span&gt;
         &lt;span class="sy0"&gt;-&lt;/span&gt;&lt;span class="nu0"&gt;75.14310264&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt;
         &lt;span class="nu0"&gt;40.05701649&lt;/span&gt;
     &lt;span class="br0"&gt;&amp;#93;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt;
     &lt;span class="st0"&gt;&amp;quot;type&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;Point&amp;quot;&lt;/span&gt;
 &lt;span class="br0"&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
         &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="created_at" type="xs:string">
        <xs:annotation>
          <xs:documentation>UTC time when this Tweet was created.
         &lt;p&gt;
           Example:&lt;br/&gt;
 
 
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;created_at&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;Wed Aug 27 13:08:45 +0000 2008&amp;quot;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
         &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="current_user_retweet" type="xs:string">
        <xs:annotation>
          <xs:documentation>&lt;em&gt;Perspectival&lt;/em&gt;. Only surfaces on methods supporting the &lt;tt&gt;include_my_retweet&lt;/tt&gt; parameter, when set to true. Details the Tweet ID of the user's own retweet (if existent) of this Tweet.
         &lt;p&gt;
           Example:&lt;br/&gt;
 
 
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;current_user_retweet&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt; &lt;span class="br0"&gt;&amp;#123;&lt;/span&gt;
   &lt;span class="st0"&gt;&amp;quot;id&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt; &lt;span class="nu0"&gt;26815871309&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt;
   &lt;span class="st0"&gt;&amp;quot;id_str&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;26815871309&amp;quot;&lt;/span&gt;
 &lt;span class="br0"&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
         &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="entities" type="nsts:entitiesType">
        <xs:annotation>
          <xs:documentation>Entities which have been parsed out of the text of the Tweet. Additionally see &lt;a href="https://dev.twitter.com/docs/entities"&gt;Entities in Twitter Objects&lt;/a&gt;.
         &lt;p&gt;
           Example:&lt;br/&gt;
 
 
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;entities&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;
 &lt;span class="br0"&gt;&amp;#123;&lt;/span&gt;
     &lt;span class="st0"&gt;&amp;quot;hashtags&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="br0"&gt;&amp;#91;&lt;/span&gt;&lt;span class="br0"&gt;&amp;#93;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt;
     &lt;span class="st0"&gt;&amp;quot;urls&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="br0"&gt;&amp;#91;&lt;/span&gt;&lt;span class="br0"&gt;&amp;#93;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt;
     &lt;span class="st0"&gt;&amp;quot;user_mentions&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="br0"&gt;&amp;#91;&lt;/span&gt;&lt;span class="br0"&gt;&amp;#93;&lt;/span&gt;
 &lt;span class="br0"&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
         &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="favorite_count" type="xs:integer">
        <xs:annotation>
          <xs:documentation>&lt;i&gt;Nullable&lt;/i&gt;. Indicates approximately how many times this Tweet has been "&lt;a href="https://dev.twitter.com/docs/api/1.1/post/favorites/create"&gt;favorited&lt;/a&gt;" by Twitter users.
         &lt;p&gt;
           Example:&lt;br/&gt;
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;favorite_count&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="nu0"&gt;1138&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
         &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="favorited" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>&lt;i&gt;Nullable&lt;/i&gt;. &lt;em&gt;Perspectival&lt;/em&gt;. Indicates whether this Tweet has been favorited by the authenticating user.
         &lt;p&gt;
           Example:&lt;br/&gt;
 
 
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;favorited&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="kw2"&gt;true&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
         &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="filter_level" type="xs:string">
        <xs:annotation>
          <xs:documentation>&lt;p&gt;Indicates the maximum value of the &lt;a href="https://dev.twitter.com/docs/streaming-apis/parameters#filter_level"&gt;filter_level&lt;/a&gt; parameter which may be used and still stream this Tweet.  So a value of &lt;tt&gt;medium&lt;/tt&gt; will be streamed on &lt;tt&gt;none&lt;/tt&gt;, &lt;tt&gt;low&lt;/tt&gt;, and &lt;tt&gt;medium&lt;/tt&gt; streams.  See &lt;a href="https://dev.twitter.com/blog/introducing-new-metadata-for-tweets"&gt;this announcement&lt;/a&gt; for more information.&lt;/p&gt;
         &lt;p&gt;
           Example:&lt;br/&gt;
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;filter_level&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;medium&amp;quot;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
         &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="geo" type="xs:string">
        <xs:annotation>
          <xs:documentation>&lt;i&gt;&lt;strong&gt;Deprecated&lt;/strong&gt;. Nullable.&lt;/i&gt; Use the "coordinates" field instead. &lt;a href="http://groups.google.com/group/twitter-development-talk/browse_thread/thread/9e4ea75178174908"&gt;Discussion&lt;/a&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="id" type="xs:long">
        <xs:annotation>
          <xs:documentation>The integer representation of the unique identifier for this Tweet. This number is greater than 53 bits and some programming languages may have difficulty/silent defects in interpreting it. Using a signed 64 bit integer for storing this identifier is safe. Use
 &lt;tt&gt;id_str&lt;/tt&gt; for fetching the identifier to stay on the safe side. See &lt;a href="https://dev.twitter.com/docs/twitter-ids-json-and-snowflake"&gt;Twitter IDs, JSON and Snowflake&lt;/a&gt;.
         &lt;p&gt;
           Example:&lt;br/&gt;
 
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;id&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="nu0"&gt;114749583439036416&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
         &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="id_str" type="xs:string">
        <xs:annotation>
          <xs:documentation>The string representation of the unique identifier for this Tweet. Implementations should use this rather than the large integer in
 &lt;tt&gt;id&lt;/tt&gt;. &lt;a href="http://groups.google.com/group/twitter-development-talk/browse_thread/thread/6a16efa375532182/"&gt;Discussion&lt;/a&gt;.
         &lt;p&gt;
           Example:&lt;br/&gt;
 
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;id_str&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;114749583439036416&amp;quot;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
         &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="in_reply_to_screen_name" type="xs:string">
        <xs:annotation>
          <xs:documentation>&lt;i&gt;Nullable.&lt;/i&gt; If the represented Tweet is a reply, this field will contain the screen name of the original Tweet's author.
         &lt;p&gt;
           Example:&lt;br/&gt;
 
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;in_reply_to_screen_name&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;twitterapi&amp;quot;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
         &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="in_reply_to_status_id" type="xs:long">
        <xs:annotation>
          <xs:documentation>&lt;i&gt;Nullable.&lt;/i&gt; If the represented Tweet is a reply, this field will contain the integer representation of the original Tweet's ID.
         &lt;p&gt;
           Example:&lt;br/&gt;
 
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;in_reply_to_status_id&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="nu0"&gt;114749583439036416&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
         &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="in_reply_to_status_id_str" type="xs:string">
        <xs:annotation>
          <xs:documentation>&lt;i&gt;Nullable.&lt;/i&gt; If the represented Tweet is a reply, this field will contain the string representation of the original Tweet's ID.
         &lt;p&gt;
           Example:&lt;br/&gt;
 
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;in_reply_to_status_id_str&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;114749583439036416&amp;quot;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
         &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="in_reply_to_user_id" type="xs:long">
        <xs:annotation>
          <xs:documentation>&lt;i&gt;Nullable.&lt;/i&gt; If the represented Tweet is a reply, this field will contain the integer representation of the original Tweet's author ID. This will not necessarily always be the user directly mentioned in the Tweet.
         &lt;p&gt;
           Example:&lt;br/&gt;
 
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;in_reply_to_user_id&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="nu0"&gt;819797&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
         &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="in_reply_to_user_id_str" type="xs:string">
        <xs:annotation>
          <xs:documentation>&lt;i&gt;Nullable.&lt;/i&gt; If the represented Tweet is a reply, this field will contain the string representation of the original Tweet's author ID. This will not necessarily always be the user directly mentioned in the Tweet.
         &lt;p&gt;
           Example:&lt;br/&gt;
 
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;in_reply_to_user_id_str&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;819797&amp;quot;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
         &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="lang" type="xs:string">
        <xs:annotation>
          <xs:documentation>&lt;i&gt;Nullable.&lt;/i&gt; When present, indicates a &lt;a href="http://tools.ietf.org/html/bcp47"&gt;BCP 47&lt;/a&gt; language identifier corresponding to the machine-detected language of the Tweet text, or "&lt;tt&gt;und&lt;/tt&gt;" if no language could be detected.
         
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;lang&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;en&amp;quot;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
           &lt;strong&gt;Note&lt;/strong&gt;: As of March 15, 2013, this field is available on REST but not Streaming.  Keep an eye on the &lt;a href="https://dev.twitter.com/calendar"&gt;Calendar of API changes&lt;/a&gt; for changes.  This documentation will be updated once the parameter is generally available.
         &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="place" type="nsts:placesType">
        <xs:annotation>
          <xs:documentation>&lt;i&gt;Nullable.&lt;/i&gt; When present, indicates that the tweet is associated (but not necessarily originating from) a &lt;a href="https://dev.twitter.com/docs/platform-objects/places"&gt;Place&lt;/a&gt;.
         &lt;p&gt;
           Example:&lt;br/&gt;
 
 
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;place&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;
 &lt;span class="br0"&gt;&amp;#123;&lt;/span&gt;
     &lt;span class="st0"&gt;&amp;quot;attributes&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="br0"&gt;&amp;#123;&lt;/span&gt;&lt;span class="br0"&gt;&amp;#125;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt;
      &lt;span class="st0"&gt;&amp;quot;bounding_box&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;
     &lt;span class="br0"&gt;&amp;#123;&lt;/span&gt;
         &lt;span class="st0"&gt;&amp;quot;coordinates&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;
         &lt;span class="br0"&gt;&amp;#91;&lt;/span&gt;&lt;span class="br0"&gt;&amp;#91;&lt;/span&gt;
                 &lt;span class="br0"&gt;&amp;#91;&lt;/span&gt;&lt;span class="sy0"&gt;-&lt;/span&gt;&lt;span class="nu0"&gt;77.119759&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt;&lt;span class="nu0"&gt;38.791645&lt;/span&gt;&lt;span class="br0"&gt;&amp;#93;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt;
                 &lt;span class="br0"&gt;&amp;#91;&lt;/span&gt;&lt;span class="sy0"&gt;-&lt;/span&gt;&lt;span class="nu0"&gt;76.909393&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt;&lt;span class="nu0"&gt;38.791645&lt;/span&gt;&lt;span class="br0"&gt;&amp;#93;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt;
                 &lt;span class="br0"&gt;&amp;#91;&lt;/span&gt;&lt;span class="sy0"&gt;-&lt;/span&gt;&lt;span class="nu0"&gt;76.909393&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt;&lt;span class="nu0"&gt;38.995548&lt;/span&gt;&lt;span class="br0"&gt;&amp;#93;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt;
                 &lt;span class="br0"&gt;&amp;#91;&lt;/span&gt;&lt;span class="sy0"&gt;-&lt;/span&gt;&lt;span class="nu0"&gt;77.119759&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt;&lt;span class="nu0"&gt;38.995548&lt;/span&gt;&lt;span class="br0"&gt;&amp;#93;&lt;/span&gt;
         &lt;span class="br0"&gt;&amp;#93;&lt;/span&gt;&lt;span class="br0"&gt;&amp;#93;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt;
         &lt;span class="st0"&gt;&amp;quot;type&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;Polygon&amp;quot;&lt;/span&gt;
     &lt;span class="br0"&gt;&amp;#125;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt;
      &lt;span class="st0"&gt;&amp;quot;country&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;United States&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt;
      &lt;span class="st0"&gt;&amp;quot;country_code&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;US&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt;
      &lt;span class="st0"&gt;&amp;quot;full_name&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;Washington, DC&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt;
      &lt;span class="st0"&gt;&amp;quot;id&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;01fbe706f872cb32&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt;
      &lt;span class="st0"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;Washington&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt;
      &lt;span class="st0"&gt;&amp;quot;place_type&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;city&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt;
      &lt;span class="st0"&gt;&amp;quot;url&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;http://api.twitter.com/1/geo/id/01fbe706f872cb32.json&amp;quot;&lt;/span&gt;
 &lt;span class="br0"&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
         &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="possibly_sensitive" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>&lt;em&gt;Nullable.&lt;/em&gt;  This field only surfaces when a tweet contains a link. The meaning of the field doesn't pertain to the tweet content itself, but instead it is an indicator that the URL contained in the tweet may contain content or media identified as sensitive content.
         &lt;p&gt;
           Example:&lt;br/&gt;
 
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;possibly_sensitive&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="kw2"&gt;true&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
         &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="scopes" type="xs:string">
        <xs:annotation>
          <xs:documentation>A set of key-value pairs indicating the intended contextual delivery of the containing Tweet. Currently used by Twitter's Promoted Products.
         &lt;p&gt;
           Example:&lt;br/&gt;
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;scopes&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="br0"&gt;&amp;#123;&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;followers&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="kw2"&gt;false&lt;/span&gt;&lt;span class="br0"&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
         &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="retweet_count" type="xs:int">
        <xs:annotation>
          <xs:documentation>Number of times this Tweet has been retweeted. This field is no longer capped at 99 and will &lt;strong&gt;not&lt;/strong&gt; turn into a String for "100+"
         &lt;p&gt;
           Example:&lt;br/&gt;
 
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;retweet_count&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="nu0"&gt;1585&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
         &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="retweeted" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>&lt;em&gt;Perspectival&lt;/em&gt;. Indicates whether this Tweet has been retweeted by the authenticating user.
         &lt;p&gt;
           Example:&lt;br/&gt;
 
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;retweeted&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="kw2"&gt;false&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
         &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="retweeted_status" type="nsts:tweetsType">
        <xs:annotation>
          <xs:documentation>Users can amplify the broadcast of tweets authored by other users by &lt;a href="https://dev.twitter.com/docs/api/1.1/post/statuses/retweet/%3Aid"&gt;retweeting&lt;/a&gt;. Retweets can be distinguished from typical Tweets by the existence of a &lt;tt&gt;retweeted_status&lt;/tt&gt; attribute. This attribute contains a representation of the &lt;i&gt;original&lt;/i&gt; Tweet that was retweeted. Note that retweets of retweets do not show representations of the intermediary retweet, but only the original tweet. (Users can also &lt;a href="https://dev.twitter.com/docs/api/1.1/post/statuses/destroy/%3Aid"&gt;unretweet&lt;/a&gt; a retweet they created by deleting their retweet.)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="source" type="xs:string">
        <xs:annotation>
          <xs:documentation>Utility used to post the Tweet, as an HTML-formatted string. Tweets from the Twitter website have a source value of &lt;tt&gt;web&lt;/tt&gt;.
         &lt;p&gt;
           Example:&lt;br/&gt;
 
 
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;source&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;&lt;span class="es0"&gt;\u&lt;/span&gt;003Ca href=&lt;span class="es0"&gt;\&amp;quot;&lt;/span&gt;http:&lt;span class="es0"&gt;\/&lt;/span&gt;&lt;span class="es0"&gt;\/&lt;/span&gt;itunes.apple.com&lt;span class="es0"&gt;\/&lt;/span&gt;us&lt;span class="es0"&gt;\/&lt;/span&gt;app&lt;span class="es0"&gt;\/&lt;/span&gt;twitter&lt;span class="es0"&gt;\/&lt;/span&gt;id409789998?mt=12&lt;span class="es0"&gt;\&amp;quot;&lt;/span&gt; rel=&lt;span class="es0"&gt;\&amp;quot;&lt;/span&gt;nofollow&lt;span class="es0"&gt;\&amp;quot;&lt;/span&gt;&lt;span class="es0"&gt;\u&lt;/span&gt;003ETwitter for Mac&lt;span class="es0"&gt;\u&lt;/span&gt;003C&lt;span class="es0"&gt;\/&lt;/span&gt;a&lt;span class="es0"&gt;\u&lt;/span&gt;003E&amp;quot;&lt;/span&gt;
 &amp;nbsp;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
         &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="text" type="xs:string">
        <xs:annotation>
          <xs:documentation>The actual UTF-8 text of the status update. See &lt;a href="https://github.com/twitter/twitter-text-rb/blob/master/lib/twitter-text/regex.rb"&gt;twitter-text&lt;/a&gt; for details on what is currently considered valid characters.
         &lt;p&gt;
           Example:&lt;br/&gt;
 
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;text&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;Tweet Button, Follow Button, and Web Intents javascript now support SSL http:&lt;span class="es0"&gt;\/&lt;/span&gt;&lt;span class="es0"&gt;\/&lt;/span&gt;t.co&lt;span class="es0"&gt;\/&lt;/span&gt;9fbA0oYy ^TS&amp;quot;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
         &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="truncated" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Indicates whether the value of the &lt;tt&gt;text&lt;/tt&gt; parameter was truncated, for example, as a result of a retweet exceeding the 140 character Tweet length. Truncated text will end in ellipsis, like this &lt;tt&gt;...&lt;/tt&gt; Since Twitter now rejects long Tweets vs truncating them, the large majority of Tweets will have this set to &lt;tt&gt;false&lt;/tt&gt;.&lt;br&gt; Note that while native retweets may have their toplevel &lt;tt&gt;text&lt;/tt&gt; property shortened, the original text will be available under the &lt;tt&gt;retweeted_status&lt;/tt&gt; object and the &lt;tt&gt;truncated&lt;/tt&gt; parameter will be set to the value of the original status (in most cases, &lt;tt&gt;false&lt;/tt&gt;).
         &lt;p&gt;
           Example:&lt;br/&gt;
 
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;truncated&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="kw2"&gt;true&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
         &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="user" type="nsts:usersType">
        <xs:annotation>
          <xs:documentation>The user who posted this Tweet. Perspectival attributes embedded within this object are unreliable. See &lt;a href="https://dev.twitter.com/docs/faq/#6981"&gt;Why are embedded objects stale or inaccurate?&lt;/a&gt;.
         &lt;p&gt;
           Example:&lt;br/&gt;
 
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;user&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="br0"&gt;&amp;#123;&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;statuses_count&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="nu0"&gt;3080&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;favourites_count&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="nu0"&gt;22&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;protected&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="kw2"&gt;false&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;profile_text_color&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;437792&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;profile_image_url&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;...&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;Twitter API&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;profile_sidebar_fill_color&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;a9d9f1&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;listed_count&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="nu0"&gt;9252&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;following&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="kw2"&gt;true&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;profile_background_tile&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="kw2"&gt;false&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;utc_offset&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:-&lt;/span&gt;&lt;span class="nu0"&gt;28800&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;description&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;The Real Twitter API. I tweet about API changes, service issues and happily answer questions about Twitter and our API. Don't get an answer? It's on my website.&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;location&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;San Francisco, CA&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;contributors_enabled&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="kw2"&gt;true&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;verified&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="kw2"&gt;true&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;profile_link_color&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;0094C2&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;followers_count&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="nu0"&gt;665829&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;url&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;http:&lt;span class="es0"&gt;\/&lt;/span&gt;&lt;span class="es0"&gt;\/&lt;/span&gt;dev.twitter.com&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;default_profile&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="kw2"&gt;false&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;profile_sidebar_border_color&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;0094C2&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;screen_name&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;twitterapi&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;default_profile_image&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="kw2"&gt;false&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;notifications&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="kw2"&gt;false&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;display_url&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="kw2"&gt;null&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;show_all_inline_media&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="kw2"&gt;false&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;geo_enabled&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="kw2"&gt;true&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;profile_use_background_image&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="kw2"&gt;true&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;friends_count&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="nu0"&gt;32&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;id_str&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;6253282&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;entities&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="br0"&gt;&amp;#123;&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;hashtags&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="br0"&gt;&amp;#91;&lt;/span&gt;&lt;span class="br0"&gt;&amp;#93;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;urls&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="br0"&gt;&amp;#91;&lt;/span&gt;&lt;span class="br0"&gt;&amp;#93;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;user_mentions&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="br0"&gt;&amp;#91;&lt;/span&gt;&lt;span class="br0"&gt;&amp;#93;&lt;/span&gt;&lt;span class="br0"&gt;&amp;#125;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;expanded_url&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="kw2"&gt;null&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;is_translator&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="kw2"&gt;false&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;lang&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;en&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;time_zone&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;Pacific Time (US &amp;amp;amp; Canada)&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;created_at&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;Wed May 23 06:01:13 +0000 2007&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;profile_background_color&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;e8f2f7&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;id&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="nu0"&gt;6253282&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;follow_request_sent&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="kw2"&gt;false&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;profile_background_image_url_https&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;...&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;profile_background_image_url&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;...&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;profile_image_url_https&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;...&amp;quot;&lt;/span&gt;&lt;span class="br0"&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
         &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="withheld_copyright" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>When present and set to "true", it indicates that this piece of content has been withheld due to a &lt;a href="http://en.wikipedia.org/wiki/Digital_Millennium_Copyright_Act"&gt;DMCA complaint&lt;/a&gt;.
         &lt;p&gt;
           Example:&lt;br/&gt;
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;withheld_copyright&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt; &lt;span class="kw2"&gt;true&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
         &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element maxOccurs="unbounded" name="withheld_in_countries" type="xs:string">
        <xs:annotation>
          <xs:documentation>When present, indicates a list of uppercase &lt;a href="http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2"&gt;two-letter country codes&lt;/a&gt; this content is withheld from. See &lt;a href="https://dev.twitter.com/blog/new-withheld-content-fields-api-responses"&gt;New Withheld Content Fields in API Responses&lt;/a&gt;. As announced in &lt;a href="https://dev.twitter.com/blog/more-changes-withheld-content-fields"&gt;More changes to withheld content fields&lt;/a&gt;, Twitter supports the following non-country values for this field:
         &lt;p&gt;
           &lt;ul&gt;&lt;li&gt;"XX" - Content is withheld in all countries&lt;/li&gt;&lt;li&gt;"XY" - Content is withheld due to a DMCA request.&lt;/li&gt;&lt;ul&gt;
         &lt;/p&gt;
         &lt;p&gt;
           Example:&lt;br/&gt;
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;withheld_in_countries&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt; &lt;span class="br0"&gt;&amp;#91;&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;GR&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;HK&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;MY&amp;quot;&lt;/span&gt;&lt;span class="br0"&gt;&amp;#93;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
         &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="withheld_scope" type="xs:string">
        <xs:annotation>
          <xs:documentation>When present, indicates whether the content being withheld is the "status" or a "user." See &lt;a href="https://dev.twitter.com/blog/new-withheld-content-fields-api-responses"&gt;New Withheld Content Fields in API Responses&lt;/a&gt;.
         &lt;p&gt;
           Example:&lt;br/&gt;
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;withheld_scope&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;status&amp;quot;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
         &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="contributors" type="nsts:contributorsType"/>
  <xs:complexType name="contributorsType">
    <xs:sequence>
      <xs:element name="id" type="xs:long">
        <xs:annotation>
          <xs:documentation>The integer representation of the ID of the user who contributed to this Tweet.
         &lt;p&gt;
           Example:&lt;br/&gt;
 
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;id&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="nu0"&gt;819797&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
         &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="id_str" type="xs:string">
        <xs:annotation>
          <xs:documentation>The string representation of the ID of the user who contributed to this Tweet.
         &lt;p&gt;
           Example:&lt;br/&gt;
 
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;id_str&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;819797&amp;quot;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
         &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="screen_name" type="xs:string">
        <xs:annotation>
          <xs:documentation>The screen name of the user who contributed to this Tweet.
         &lt;p&gt;
           Example:&lt;br/&gt;
 
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;screen_name&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;episod&amp;quot;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
         &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="coordinates" type="nsts:coordinatesType"/>
  <xs:complexType name="coordinatesType">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="coordinates" type="xs:float">
        <xs:annotation>
          <xs:documentation>The longitude and latitude of the Tweet's location, as an collection in the form of [longitude, latitude].
         &lt;p&gt;
           Example:&lt;br/&gt;
 
 
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;coordinates&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="br0"&gt;&amp;#91;&lt;/span&gt;&lt;span class="sy0"&gt;-&lt;/span&gt;&lt;span class="nu0"&gt;97.51087576&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt;&lt;span class="nu0"&gt;35.46500176&lt;/span&gt;&lt;span class="br0"&gt;&amp;#93;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
         &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="type" type="xs:string">
        <xs:annotation>
          <xs:documentation>The type of data encoded in the coordinates property. This will be "Point" for Tweet coordinates fields.
         &lt;p&gt;
           Example:&lt;br/&gt;
 
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;type&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;Point&amp;quot;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
         &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="users" type="nsts:usersType"/>
  <xs:complexType name="usersType">
    <xs:sequence>
      <xs:element name="contributors_enabled" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Indicates that the user has an account with "contributor mode" enabled, allowing for Tweets issued by the user to be co-authored by another account. Rarely &lt;tt&gt;true&lt;/tt&gt;.
         
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;contributors_enabled&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt; &lt;span class="kw2"&gt;false&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
 &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="created_at" type="xs:string">
        <xs:annotation>
          <xs:documentation>The UTC datetime that the user account was created on Twitter.
         
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;created_at&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;Mon Nov 29 21:18:15 +0000 2010&amp;quot;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
 &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="default_profile" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>When true, indicates that the user has not altered the theme or background of their user profile.
         
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;default_profile&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt; &lt;span class="kw2"&gt;false&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
 &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="default_profile_image" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>When true, indicates that the user has not uploaded their own avatar and a default egg avatar is used instead.
         
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;default_profile_image&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt; &lt;span class="kw2"&gt;false&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
 &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>&lt;em&gt;Nullable&lt;/em&gt;. The user-defined UTF-8 string describing their account.
         
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;description&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;The Real Twitter API.&amp;quot;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
 
 &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="entities" type="nsts:entitiesType">
        <xs:annotation>
          <xs:documentation>Entities which have been parsed out of the &lt;tt&gt;url&lt;/tt&gt; or &lt;tt&gt;description&lt;/tt&gt; fields defined by the user. Read more about &lt;a href="https://dev.twitter.com/docs/platform-objects/entities#user_entities"&gt;User Entities&lt;/a&gt;.
         
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;entities&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt; &lt;span class="br0"&gt;&amp;#123;&lt;/span&gt;
   &lt;span class="st0"&gt;&amp;quot;url&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt; &lt;span class="br0"&gt;&amp;#123;&lt;/span&gt;
     &lt;span class="st0"&gt;&amp;quot;urls&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt; &lt;span class="br0"&gt;&amp;#91;&lt;/span&gt;
       &lt;span class="br0"&gt;&amp;#123;&lt;/span&gt;
         &lt;span class="st0"&gt;&amp;quot;url&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;http:&lt;span class="es0"&gt;\/&lt;/span&gt;&lt;span class="es0"&gt;\/&lt;/span&gt;dev.twitter.com&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt;
         &lt;span class="st0"&gt;&amp;quot;expanded_url&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt; &lt;span class="kw2"&gt;null&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt;
         &lt;span class="st0"&gt;&amp;quot;indices&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt; &lt;span class="br0"&gt;&amp;#91;&lt;/span&gt;&lt;span class="nu0"&gt;0&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt; &lt;span class="nu0"&gt;22&lt;/span&gt;&lt;span class="br0"&gt;&amp;#93;&lt;/span&gt;
       &lt;span class="br0"&gt;&amp;#125;&lt;/span&gt;
     &lt;span class="br0"&gt;&amp;#93;&lt;/span&gt;
   &lt;span class="br0"&gt;&amp;#125;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt;
   &lt;span class="st0"&gt;&amp;quot;description&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt; &lt;span class="br0"&gt;&amp;#123;&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;urls&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="br0"&gt;&amp;#91;&lt;/span&gt;&lt;span class="br0"&gt;&amp;#93;&lt;/span&gt; &lt;span class="br0"&gt;&amp;#125;&lt;/span&gt;
 &lt;span class="br0"&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
         &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="favourites_count" type="xs:int">
        <xs:annotation>
          <xs:documentation>The number of tweets this user has favorited in the account's lifetime. British spelling used in the field name for historical reasons.
         
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;favourites_count&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt; &lt;span class="nu0"&gt;13&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
 &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="follow_request_sent" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>&lt;em&gt;Nullable&lt;/em&gt;. &lt;em&gt;Perspectival&lt;/em&gt;. When true, indicates that the authenticating user has issued a follow request to this protected user account.
         
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;follow_request_sent&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="kw2"&gt;false&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
 &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="following" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>&lt;em&gt;Nullable&lt;/em&gt;. &lt;em&gt;Perspectival&lt;/em&gt;. &lt;i&gt;Deprecated.&lt;/i&gt; When true, indicates that the authenticating user is following this user. Some false negatives are possible when set to "false," but these false negatives are increasingly being represented as "null" instead. See &lt;a href="http://groups.google.com/group/twitter-development-talk/browse_thread/thread/42ba883b9f8e3c6e?tvc=2"&gt;Discussion&lt;/a&gt;.
         
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;following&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="kw2"&gt;true&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
 &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="followers_count" type="xs:int">
        <xs:annotation>
          <xs:documentation>The number of followers this account currently has. Under certain conditions of duress, this field will temporarily indicate "0."
         
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;followers_count&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt; &lt;span class="nu0"&gt;21&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
 &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="friends_count" type="xs:int">
        <xs:annotation>
          <xs:documentation>The number of users this account is following (AKA their "followings"). Under certain conditions of duress, this field will temporarily indicate "0."
         
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;friends_count&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt; &lt;span class="nu0"&gt;32&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
 &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="geo_enabled" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>When true, indicates that the user has enabled the possibility of geotagging their Tweets. This field must be true for the current user to attach geographic data when using &lt;a href="https://dev.twitter.com/docs/api/1/post/statuses/update"&gt;POST statuses/update&lt;/a&gt;.
         
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;geo_enabled&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt; &lt;span class="kw2"&gt;true&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
 &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="id" type="xs:long">
        <xs:annotation>
          <xs:documentation>The integer representation of the unique identifier for this User. This number is greater than 53 bits and some programming languages may have difficulty/silent defects in interpreting it. Using a signed 64 bit integer for storing this identifier is safe. Use
 &lt;tt&gt;id_str&lt;/tt&gt; for fetching the identifier to stay on the safe side. See &lt;a href="https://dev.twitter.com/docs/twitter-ids-json-and-snowflake"&gt;Twitter IDs, JSON and Snowflake&lt;/a&gt;.
         
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;id&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="nu0"&gt;6253282&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
 &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="id_str" type="xs:string">
        <xs:annotation>
          <xs:documentation>The string representation of the unique identifier for this User. Implementations should use this rather than the large, possibly un-consumable integer in &lt;tt&gt;id&lt;/tt&gt;.
         
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;id_str&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;6253282&amp;quot;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
 &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="is_translator" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>When true, indicates that the user is a participant in Twitter's &lt;a href="http://translate.twttr.com"&gt;translator community&lt;/a&gt;.
         
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;is_translator&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt; &lt;span class="kw2"&gt;false&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
 &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="lang" type="xs:string">
        <xs:annotation>
          <xs:documentation>The &lt;a href="http://tools.ietf.org/html/bcp47"&gt;BCP 47&lt;/a&gt; code for the user's self-declared user interface language. May or may not have anything to do with the content of their Tweets.
         
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;lang&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;en&amp;quot;&lt;/span&gt;
 &lt;span class="st0"&gt;&amp;quot;lang&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;msa&amp;quot;&lt;/span&gt;
 &lt;span class="st0"&gt;&amp;quot;lang&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;zh-cn&amp;quot;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
 &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="listed_count" type="xs:int">
        <xs:annotation>
          <xs:documentation>The number of public lists that this user is a member of.
         
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;listed_count&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="nu0"&gt;9274&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
 &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="location" type="xs:string">
        <xs:annotation>
          <xs:documentation>&lt;em&gt;Nullable&lt;/em&gt;. The user-defined location for this account's profile. Not necessarily a location nor parseable. This field will occasionally be fuzzily interpreted by the Search service.
         
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;location&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;San Francisco, CA&amp;quot;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
 &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="name" type="xs:string">
        <xs:annotation>
          <xs:documentation>The name of the user, as they've defined it. Not necessarily a person's name. Typically capped at 20 characters, but subject to change.
         
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;Twitter API&amp;quot;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
 &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="notifications" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>&lt;em&gt;Nullable&lt;/em&gt;. &lt;i&gt;Deprecated.&lt;/i&gt; May incorrectly report "false" at times. Indicates whether the authenticated user has chosen to receive this user's tweets by SMS. &lt;a href="http://groups.google.com/group/twitter-development-talk/browse_thread/thread/42ba883b9f8e3c6e?tvc=2"&gt;Discussion&lt;/a&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="profile_background_color" type="xs:string">
        <xs:annotation>
          <xs:documentation>The hexadecimal color chosen by the user for their background.
         
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;profile_background_color&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;e8f2f7&amp;quot;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
 &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="profile_background_image_url" type="xs:string">
        <xs:annotation>
          <xs:documentation>A HTTP-based URL pointing to the background image the user has uploaded for their profile.
         
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;profile_background_image_url&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;
 &lt;span class="st0"&gt;&amp;quot;http:&lt;span class="es0"&gt;\/&lt;/span&gt;&lt;span class="es0"&gt;\/&lt;/span&gt;a2.twimg.com&lt;span class="es0"&gt;\/&lt;/span&gt;profile_background_images&lt;span class="es0"&gt;\&lt;/span&gt;
 /229557229&lt;span class="es0"&gt;\/&lt;/span&gt;twitterapi-bg.png&amp;quot;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
 
 &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="profile_background_image_url_https" type="xs:string">
        <xs:annotation>
          <xs:documentation>A HTTPS-based URL pointing to the background image the user has uploaded for their profile.
         
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;profile_background_image_url_https&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;
 &lt;span class="st0"&gt;&amp;quot;https:&lt;span class="es0"&gt;\/&lt;/span&gt;&lt;span class="es0"&gt;\/&lt;/span&gt;si0.twimg.com&lt;span class="es0"&gt;\/&lt;/span&gt;profile_background_images&lt;span class="es0"&gt;\&lt;/span&gt;
 /229557229&lt;span class="es0"&gt;\/&lt;/span&gt;twitterapi-bg.png&amp;quot;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
 &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="profile_background_tile" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>When true, indicates that the user's &lt;tt&gt;profile_background_image_url&lt;/tt&gt; should be tiled when displayed.
         
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;profile_background_tile&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="kw2"&gt;false&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
 &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="profile_banner_url" type="xs:string">
        <xs:annotation>
          <xs:documentation>The HTTPS-based URL pointing to the standard web representation of the user's uploaded profile banner. By adding a final path element of the URL, you can obtain different image sizes optimized for specific displays. In the future, an API method will be provided to serve these URLs so that you need not modify the original URL. For size variations, please see &lt;a href="https://dev.twitter.com/docs/user-profile-images-and-banners"&gt;User Profile Images and Banners&lt;/a&gt;.
 
         
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;profile_banner_url&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;https://si0.twimg.com/profile_banners/819797/1348102824&amp;quot;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
         &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="profile_image_url" type="xs:string">
        <xs:annotation>
          <xs:documentation>A HTTP-based URL pointing to the user's avatar image. See &lt;a href="https://dev.twitter.com/docs/user-profile-images-and-banners"&gt;User Profile Images and Banners&lt;/a&gt;.
         
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;profile_image_url&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;
 &lt;span class="st0"&gt;&amp;quot;http:&lt;span class="es0"&gt;\/&lt;/span&gt;&lt;span class="es0"&gt;\/&lt;/span&gt;a2.twimg.com&lt;span class="es0"&gt;\/&lt;/span&gt;profile_images&lt;span class="es0"&gt;\/&lt;/span&gt;1438634086&lt;span class="es0"&gt;\&lt;/span&gt;
 /avatar_normal.png&amp;quot;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
 &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="profile_image_url_https" type="xs:string">
        <xs:annotation>
          <xs:documentation>A HTTPS-based URL pointing to the user's avatar image.
         
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;profile_image_url_https&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;
 &lt;span class="st0"&gt;&amp;quot;https:&lt;span class="es0"&gt;\/&lt;/span&gt;&lt;span class="es0"&gt;\/&lt;/span&gt;si0.twimg.com&lt;span class="es0"&gt;\/&lt;/span&gt;profile_images&lt;span class="es0"&gt;\/&lt;/span&gt;1438634086&lt;span class="es0"&gt;\&lt;/span&gt;
 /avatar_normal.png&amp;quot;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
 &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="profile_link_color" type="xs:string">
        <xs:annotation>
          <xs:documentation>The hexadecimal color the user has chosen to display links with in their Twitter UI.
         
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;profile_link_color&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;0094C2&amp;quot;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
 &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="profile_sidebar_border_color" type="xs:string">
        <xs:annotation>
          <xs:documentation>The hexadecimal color the user has chosen to display sidebar borders with in their Twitter UI.
         
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;profile_sidebar_border_color&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;0094C2&amp;quot;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
 &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="profile_sidebar_fill_color" type="xs:string">
        <xs:annotation>
          <xs:documentation>The hexadecimal color the user has chosen to display sidebar backgrounds with in their Twitter UI.
         
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;profile_sidebar_fill_color&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;a9d9f1&amp;quot;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
 &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="profile_text_color" type="xs:string">
        <xs:annotation>
          <xs:documentation>The hexadecimal color the user has chosen to display text with in their Twitter UI.
         
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;profile_text_color&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;437792&amp;quot;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
 &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="profile_use_background_image" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>When true, indicates the user wants their uploaded background image to be used.
         
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;profile_use_background_image&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="kw2"&gt;true&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
 &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="protected" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>When true, indicates that this user has chosen to protect their Tweets. See &lt;a href="https://support.twitter.com/articles/14016"&gt;About Public and Protected Tweets&lt;/a&gt;.
         
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;protected&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt; &lt;span class="kw2"&gt;true&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
 &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="screen_name" type="xs:string">
        <xs:annotation>
          <xs:documentation>The screen name, handle, or alias that this user identifies themselves with. screen_names are unique but subject to change. Use &lt;tt&gt;id_str&lt;/tt&gt; as a user identifier whenever possible. Typically a maximum of 15 characters long, but some historical accounts may exist with longer names.
         
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;screen_name&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;twitterapi&amp;quot;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
 &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="show_all_inline_media" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Indicates that the user would like to see media inline. Somewhat disused.
         
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;show_all_inline_media&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt; &lt;span class="kw2"&gt;false&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
 &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="status" type="nsts:tweetsType">
        <xs:annotation>
          <xs:documentation>&lt;em&gt;Nullable&lt;/em&gt;. If possible, the user's most recent tweet or retweet. In some circumstances, this data cannot be provided and this field will be omitted, null, or empty. Perspectival attributes within tweets embedded within users cannot always be relied upon. See &lt;a href="https://dev.twitter.com/docs/faq/#6981"&gt;Why are embedded objects stale or inaccurate?&lt;/a&gt;.
         
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;status&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt; &lt;span class="br0"&gt;&amp;#123;&lt;/span&gt;
     &lt;span class="st0"&gt;&amp;quot;coordinates&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt; &lt;span class="kw2"&gt;null&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt;
     &lt;span class="st0"&gt;&amp;quot;favorited&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt; &lt;span class="kw2"&gt;false&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt;
     &lt;span class="st0"&gt;&amp;quot;truncated&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt; &lt;span class="kw2"&gt;false&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt;
     &lt;span class="st0"&gt;&amp;quot;created_at&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;Tue Apr 17 16:38:18 +0000 2012&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt;
     &lt;span class="st0"&gt;&amp;quot;id_str&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;192290904646754304&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt;
     &lt;span class="st0"&gt;&amp;quot;entities&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt; &lt;span class="br0"&gt;&amp;#123;&lt;/span&gt;
       &lt;span class="st0"&gt;&amp;quot;urls&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt; &lt;span class="br0"&gt;&amp;#91;&lt;/span&gt;
 &amp;nbsp;
       &lt;span class="br0"&gt;&amp;#93;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt;
       &lt;span class="st0"&gt;&amp;quot;hashtags&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt; &lt;span class="br0"&gt;&amp;#91;&lt;/span&gt;
 &amp;nbsp;
       &lt;span class="br0"&gt;&amp;#93;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt;
       &lt;span class="st0"&gt;&amp;quot;user_mentions&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt; &lt;span class="br0"&gt;&amp;#91;&lt;/span&gt;
         &lt;span class="br0"&gt;&amp;#123;&lt;/span&gt;
           &lt;span class="st0"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;Micah McVicker&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt;
           &lt;span class="st0"&gt;&amp;quot;id_str&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;166661446&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt;
           &lt;span class="st0"&gt;&amp;quot;id&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt; &lt;span class="nu0"&gt;166661446&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt;
           &lt;span class="st0"&gt;&amp;quot;indices&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt; &lt;span class="br0"&gt;&amp;#91;&lt;/span&gt;
             &lt;span class="nu0"&gt;0&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt;
             &lt;span class="nu0"&gt;14&lt;/span&gt;
           &lt;span class="br0"&gt;&amp;#93;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt;
           &lt;span class="st0"&gt;&amp;quot;screen_name&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;MicahMcVicker&amp;quot;&lt;/span&gt;
         &lt;span class="br0"&gt;&amp;#125;&lt;/span&gt;
       &lt;span class="br0"&gt;&amp;#93;&lt;/span&gt;
     &lt;span class="br0"&gt;&amp;#125;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt;
     &lt;span class="st0"&gt;&amp;quot;in_reply_to_user_id_str&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;166661446&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt;
     &lt;span class="st0"&gt;&amp;quot;contributors&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt; &lt;span class="kw2"&gt;null&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt;
     &lt;span class="st0"&gt;&amp;quot;text&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;@MicahMcVicker make sure you're using include_rts=true and no other filters, then walking your timeline by since_id and max_id&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt;
     &lt;span class="st0"&gt;&amp;quot;retweet_count&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt; &lt;span class="nu0"&gt;0&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt;
     &lt;span class="st0"&gt;&amp;quot;in_reply_to_status_id_str&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;192290470427246594&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt;
     &lt;span class="st0"&gt;&amp;quot;id&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt; &lt;span class="nu0"&gt;192290904646754304&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt;
     &lt;span class="st0"&gt;&amp;quot;geo&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt; &lt;span class="kw2"&gt;null&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt;
     &lt;span class="st0"&gt;&amp;quot;retweeted&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt; &lt;span class="kw2"&gt;false&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt;
     &lt;span class="st0"&gt;&amp;quot;in_reply_to_user_id&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt; &lt;span class="nu0"&gt;166661446&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt;
     &lt;span class="st0"&gt;&amp;quot;place&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt; &lt;span class="kw2"&gt;null&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt;
     &lt;span class="st0"&gt;&amp;quot;in_reply_to_screen_name&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;MicahMcVicker&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt;
     &lt;span class="st0"&gt;&amp;quot;source&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;&amp;lt;a href=&lt;span class="es0"&gt;\&amp;quot;&lt;/span&gt;http://sites.google.com/site/yorufukurou/&lt;span class="es0"&gt;\&amp;quot;&lt;/span&gt; rel=&lt;span class="es0"&gt;\&amp;quot;&lt;/span&gt;nofollow&lt;span class="es0"&gt;\&amp;quot;&lt;/span&gt;&amp;gt;YoruFukurou&amp;lt;/a&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt;
     &lt;span class="st0"&gt;&amp;quot;in_reply_to_status_id&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt; &lt;span class="nu0"&gt;192290470427246594&lt;/span&gt;
   &lt;span class="br0"&gt;&amp;#125;&lt;/span&gt;&lt;span class="sy0"&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
 
         &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="statuses_count" type="xs:int">
        <xs:annotation>
          <xs:documentation>The number of tweets (including retweets) issued by the user.
         
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;statuses_count&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt; &lt;span class="nu0"&gt;42&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
 &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="time_zone" type="xs:string">
        <xs:annotation>
          <xs:documentation>&lt;em&gt;Nullable&lt;/em&gt;. A string describing the Time Zone this user declares themselves within.
         
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;time_zone&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;Pacific Time (US &amp;amp; Canada)&amp;quot;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
 &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="url" type="xs:string">
        <xs:annotation>
          <xs:documentation>&lt;em&gt;Nullable&lt;/em&gt;. A URL provided by the user in association with their profile.
         
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;url&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt;&lt;span class="st0"&gt;&amp;quot;http:&lt;span class="es0"&gt;\/&lt;/span&gt;&lt;span class="es0"&gt;\/&lt;/span&gt;dev.twitter.com&amp;quot;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
 &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="utc_offset" type="xs:int">
        <xs:annotation>
          <xs:documentation>&lt;em&gt;Nullable&lt;/em&gt;. The offset from GMT/UTC in seconds.
         
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;utc_offset&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt; &lt;span class="sy0"&gt;-&lt;/span&gt;&lt;span class="nu0"&gt;18000&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
 &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="verified" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>When true, indicates that the user has a verified account. See &lt;a href="https://support.twitter.com/articles/119135"&gt;Verified Accounts&lt;/a&gt;.
         
 &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;verified&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt; &lt;span class="kw2"&gt;false&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
 &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="withheld_in_countries" type="xs:string">
        <xs:annotation>
          <xs:documentation>When present, indicates a textual representation of the two-letter country codes this user is withheld from. See &lt;a href="https://dev.twitter.com/blog/new-withheld-content-fields-api-responses"&gt;New Withheld Content Fields in API Responses&lt;/a&gt;.
         &lt;p&gt;
           Example:&lt;br/&gt;
           &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;withheld_in_countries&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;GR, HK, MY&amp;quot;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
 
         &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="withheld_scope" type="xs:string">
        <xs:annotation>
          <xs:documentation>When present, indicates whether the content being withheld is the "status" or a "user." See &lt;a href="https://dev.twitter.com/blog/new-withheld-content-fields-api-responses"&gt;New Withheld Content Fields in API Responses&lt;/a&gt;.
         &lt;p&gt;
           Example:&lt;br/&gt;
           &lt;div class="geshifilter"&gt;&lt;div class="javascript geshifilter-javascript"&gt;&lt;pre class="de1"&gt;&lt;span class="st0"&gt;&amp;quot;withheld_scope&amp;quot;&lt;/span&gt;&lt;span class="sy0"&gt;:&lt;/span&gt; &lt;span class="st0"&gt;&amp;quot;user&amp;quot;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
 
         &lt;/p&gt;</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
</xs:schema>
    </grammars>
    <resources base="https://api.twitter.com/1.1/">
        <resource path="/oauth2">
            <resource path="/invalidate_token">
                <method name="POST">
                    <doc>Allows a registered application to revoke an issued OAuth 2 Bearer Token by presenting its client credentials. Once a Bearer Token has been invalidated, new creation attempts will yield a different Bearer Token and usage of the invalidated token will no longer be allowed.  As with all API v1.1 methods, HTTPS is always required.</doc>
                    <request>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="access_token" required="false" style="template" type="xs:string">
                            <doc>The value of the bearer token to revoke.</doc>
                        </param>
                    </request>
                    <response>
                        <representation mediaType="application/json"/>
                    </response>
                    <ns3:api-versions>
                        <ns3:api-version>1.1</ns3:api-version>
                    </ns3:api-versions>
                    <ns3:see-also>
                        <ns3:see href="/docs/auth/application-only-auth">Application-only authentication</ns3:see>
                        <ns3:see href="/docs/api/1.1/post/oauth2/token">POST oauth2/token</ns3:see>
                    </ns3:see-also>
                </method>
            </resource>
            <resource path="/token">
                <method name="POST">
                    <doc>Allows a registered application to obtain an OAuth 2 Bearer Token, which can be used to make API requests on an application&amp;#039;s own behalf, without a user context. This is called Application-only authentication.  A Bearer Token may be invalidated using oauth2/invalidate_token.</doc>
                    <request>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="grant_type" required="false" style="template" type="xs:string">
                            <doc>Specifies the type of grant being requested by the application. At this time, only &lt;tt&gt;client_credentials&lt;/tt&gt; is allowed. See &lt;a href="https://dev.twitter.com/docs/auth/application-only-auth"&gt;Application-only authentication&lt;/a&gt; for more information.</doc>
                        </param>
                    </request>
                    <response>
                        <representation mediaType="application/json"/>
                    </response>
                    <ns3:api-versions>
                        <ns3:api-version>1.1</ns3:api-version>
                    </ns3:api-versions>
                    <ns3:see-also>
                        <ns3:see href="/docs/auth/application-only-auth">Application-only authentication</ns3:see>
                        <ns3:see href="/docs/rate-limiting/1.1">REST API Rate Limiting in v1.1</ns3:see>
                        <ns3:see href="/docs/api/1.1/post/oauth2/invalidate_token">POST oauth2/invalidate_token</ns3:see>
                    </ns3:see-also>
                    <ns3:tags>
                        <ns3:tag>OAuth</ns3:tag>
                    </ns3:tags>
                </method>
            </resource>
        </resource>
        <resource path="/followers">
            <resource path="/ids">
                <method name="GET">
                    <doc>Returns a cursored collection of user IDs for every user following the specified user.</doc>
                    <request>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="user_id" required="false" style="query" type="xs:int">
                            <doc>The ID of the user for whom to return results for.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="screen_name" required="false" style="query" type="xs:string">
                            <doc>The screen name of the user for whom to return results for.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="cursor" style="query" type="xs:string">
                            <doc>Causes the list of connections to be broken into pages of no more than 5000 IDs at a time. The number of IDs returned is not guaranteed to be 5000 as suspended users are filtered out after connections are queried. If no cursor is provided, a value of &lt;tt&gt;-1&lt;/tt&gt; will be assumed, which is the first "page."&lt;br /&gt;&lt;br /&gt; &#13;
The response from the API will include a &lt;tt&gt;previous_cursor&lt;/tt&gt; and &lt;tt&gt;next_cursor&lt;/tt&gt; to allow paging back and forth. See &lt;a href="https://dev.twitter.com/docs/misc/cursoring"&gt;Using cursors to navigate collections&lt;/a&gt; for more information.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="stringify_ids" required="false" style="query" type="xs:boolean">
                            <doc>Many programming environments will not consume our Tweet ids due to their size. Provide this option to have ids returned as strings instead. More about &lt;a href="https://dev.twitter.com/docs/twitter-ids-json-and-snowflake"&gt;Twitter IDs, JSON and Snowflake&lt;/a&gt;.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="count" required="false" style="query" type="xs:int">
                            <doc>Specifies the number of IDs attempt retrieval of, up to a maximum of 5,000 per distinct request. The value of &lt;tt&gt;count&lt;/tt&gt; is best thought of as a limit to the number of results to return. When using the count parameter with this method, it is wise to use a consistent count value across all requests to the same user's collection. Usage of this parameter is encouraged in environments where all 5,000 IDs constitutes too large of a response.</doc>
                        </param>
                    </request>
                    <response>
                        <representation element="ns1:users" mediaType="application/json"/>
                    </response>
                    <ns4:rates>
                        <ns4:rate limit="15" scope="USER" unit="MINUTES" window="15"/>
                        <ns4:rate limit="15" scope="APPLICATION" unit="MINUTES" window="15"/>
                    </ns4:rates>
                    <ns2:categories>
                        <ns2:category>followers</ns2:category>
                    </ns2:categories>
                    <ns3:api-versions>
                        <ns3:api-version>1.1</ns3:api-version>
                    </ns3:api-versions>
                    <ns3:see-also>
                        <ns3:see href="/docs/api/1.1/get/friends/ids">GET friends/ids</ns3:see>
                        <ns3:see href="/docs/api/1.1/get/followers/list">GET followers/list</ns3:see>
                        <ns3:see href="/docs/api/1.1/get/friends/list">GET friends/list</ns3:see>
                        <ns3:see href="/docs/misc/cursoring">Using cursors to navigate collections</ns3:see>
                    </ns3:see-also>
                    <ns3:tags>
                        <ns3:tag>Bulk Operations</ns3:tag>
                        <ns3:tag>finding users</ns3:tag>
                    </ns3:tags>
                </method>
            </resource>
            <resource path="/list">
                <method name="GET">
                    <doc>Returns a cursored collection of user objects for users following the specified user.</doc>
                    <request>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="user_id" required="false" style="query" type="xs:int">
                            <doc>The ID of the user for whom to return results for.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="screen_name" required="false" style="query" type="xs:string">
                            <doc>The screen name of the user for whom to return results for.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="cursor" style="query" type="xs:string">
                            <doc>Causes the results to be broken into pages. If no cursor is provided, a value of &lt;tt&gt;-1&lt;/tt&gt; will be assumed, which is the first "page."&lt;br /&gt;&lt;br /&gt; &#13;
The response from the API will include a &lt;tt&gt;previous_cursor&lt;/tt&gt; and &lt;tt&gt;next_cursor&lt;/tt&gt; to allow paging back and forth. See &lt;a href="https://dev.twitter.com/docs/misc/cursoring"&gt;Using cursors to navigate collections&lt;/a&gt; for more information.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="count" required="false" style="query" type="xs:int">
                            <doc>The number of users to return per page, up to a maximum of 200. Defaults to 20.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="skip_status" required="false" style="query" type="xs:boolean">
                            <doc>When set to either &lt;tt&gt;true&lt;/tt&gt;, &lt;tt&gt;t&lt;/tt&gt; or &lt;tt&gt;1&lt;/tt&gt; statuses will not be included in the returned user objects.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="include_user_entities" required="false" style="query" type="xs:boolean">
                            <doc>The user object &lt;tt&gt;entities&lt;/tt&gt; node will be disincluded when set to &lt;tt&gt;false&lt;/tt&gt;.</doc>
                        </param>
                    </request>
                    <response>
                        <representation element="ns1:users" mediaType="application/json"/>
                    </response>
                    <ns4:rates>
                        <ns4:rate limit="15" scope="USER" unit="MINUTES" window="15"/>
                        <ns4:rate limit="30" scope="APPLICATION" unit="MINUTES" window="15"/>
                    </ns4:rates>
                    <ns2:categories>
                        <ns2:category>followers</ns2:category>
                    </ns2:categories>
                    <ns3:api-versions>
                        <ns3:api-version>1.1</ns3:api-version>
                    </ns3:api-versions>
                    <ns3:see-also>
                        <ns3:see href="/docs/api/1.1/get/friends/ids">GET friends/ids</ns3:see>
                        <ns3:see href="/docs/api/1.1/get/followers/ids">GET followers/ids</ns3:see>
                        <ns3:see href="/docs/api/1.1/get/friends/list">GET friends/list</ns3:see>
                    </ns3:see-also>
                    <ns3:tags>
                        <ns3:tag>Bulk Operations</ns3:tag>
                        <ns3:tag>finding users</ns3:tag>
                    </ns3:tags>
                </method>
            </resource>
        </resource>
        <resource path="/friendships">
            <resource path="/incoming">
                <method name="GET">
                    <doc>Returns a collection of numeric IDs for every user who has a pending request to follow the authenticating user.</doc>
                    <request>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="cursor" style="query" type="xs:string">
                            <doc>Causes the list of connections to be broken into pages of no more than 5000 IDs at a time. The number of IDs returned is not guaranteed to be 5000 as suspended users are filtered out after connections are queried. If no cursor is provided, a value of &lt;tt&gt;-1&lt;/tt&gt; will be assumed, which is the first "page."&lt;br /&gt;&lt;br /&gt; &#13;
The response from the API will include a &lt;tt&gt;previous_cursor&lt;/tt&gt; and &lt;tt&gt;next_cursor&lt;/tt&gt; to allow paging back and forth. See &lt;a href="https://dev.twitter.com/docs/misc/cursoring"&gt;Using cursors to navigate collections&lt;/a&gt; for more information.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="stringify_ids" required="false" style="query" type="xs:boolean">
                            <doc>Many programming environments will not consume our Tweet ids due to their size. Provide this option to have ids returned as strings instead. More about &lt;a href="https://dev.twitter.com/docs/twitter-ids-json-and-snowflake"&gt;Twitter IDs, JSON and Snowflake&lt;/a&gt;.</doc>
                        </param>
                    </request>
                    <response>
                        <representation mediaType="application/json"/>
                    </response>
                    <ns4:rates>
                        <ns4:rate limit="15" scope="USER" unit="MINUTES" window="15"/>
                    </ns4:rates>
                    <ns2:categories>
                        <ns2:category>friendships</ns2:category>
                    </ns2:categories>
                    <ns3:api-versions>
                        <ns3:api-version>1.1</ns3:api-version>
                    </ns3:api-versions>
                    <ns3:see-also>
                        <ns3:see href="/docs/api/1.1/get/friendships/outgoing">GET friendships/outgoing</ns3:see>
                    </ns3:see-also>
                    <ns3:tags>
                        <ns3:tag>follower management</ns3:tag>
                    </ns3:tags>
                </method>
            </resource>
            <resource path="/lookup">
                <method name="GET">
                    <doc>Returns the relationships of the authenticating user to the comma-separated list of up to 100 screen_names or user_ids provided. Values for connections can be: following, following_requested, followed_by, none, blocking.</doc>
                    <request>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="screen_name" required="false" style="query" type="xs:string">
                            <doc>A comma separated list of screen names, up to 100 are allowed in a single request.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="user_id" required="false" style="query" type="xs:string">
                            <doc>A comma separated list of user IDs, up to 100 are allowed in a single request.</doc>
                        </param>
                    </request>
                    <response>
                        <representation mediaType="application/json"/>
                    </response>
                    <ns4:rates>
                        <ns4:rate limit="15" scope="USER" unit="MINUTES" window="15"/>
                    </ns4:rates>
                    <ns2:categories>
                        <ns2:category>friendships</ns2:category>
                    </ns2:categories>
                    <ns3:api-versions>
                        <ns3:api-version>1.1</ns3:api-version>
                    </ns3:api-versions>
                    <ns3:see-also>
                        <ns3:see href="/docs/api/1.1/get/users/lookup">GET users/lookup</ns3:see>
                    </ns3:see-also>
                    <ns3:tags>
                        <ns3:tag>Bulk Operations</ns3:tag>
                        <ns3:tag>finding users</ns3:tag>
                        <ns3:tag>follower management</ns3:tag>
                    </ns3:tags>
                </method>
            </resource>
            <resource path="/no_retweets">
                <resource path="/ids">
                    <method name="GET">
                        <doc>Returns a collection of user_ids that the currently authenticated user does not want to receive retweets from. Use POST friendships/update to set the &amp;quot;no retweets&amp;quot; status for a given user account on behalf of the current user.</doc>
                        <request>
                            <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="stringify_ids" required="false" style="query" type="xs:boolean">
<doc>Many programming environments will not consume our ids due to their size. Provide this option to have ids returned as strings instead. Read more about &lt;a href="https://dev.twitter.com/docs/twitter-ids-json-and-snowflake"&gt;Twitter IDs, JSON and Snowflake&lt;/a&gt;. This parameter is especially important to use in Javascript environments.</doc>
                            </param>
                        </request>
                        <response>
                            <representation element="ns1:users" mediaType="application/json"/>
                        </response>
                        <ns4:rates>
                            <ns4:rate limit="15" scope="USER" unit="MINUTES" window="15"/>
                        </ns4:rates>
                        <ns2:categories>
                            <ns2:category>friendships</ns2:category>
                        </ns2:categories>
                        <ns3:api-versions>
                            <ns3:api-version>1.1</ns3:api-version>
                        </ns3:api-versions>
                        <ns3:see-also>
                            <ns3:see href="/docs/api/1.1/post/friendships/update">POST friendships/update</ns3:see>
                            <ns3:see href="/docs/api/1.1/get/friendships/lookup">GET friendships/lookup</ns3:see>
                            <ns3:see href="/docs/api/1.1/get/user">GET user</ns3:see>
                        </ns3:see-also>
                        <ns3:tags>
                            <ns3:tag>Retweets</ns3:tag>
                        </ns3:tags>
                    </method>
                </resource>
            </resource>
            <resource path="/outgoing">
                <method name="GET">
                    <doc>Returns a collection of numeric IDs for every protected user for whom the authenticating user has a pending follow request.</doc>
                    <request>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="cursor" style="query" type="xs:string">
                            <doc>Causes the list of connections to be broken into pages of no more than 5000 IDs at a time. The number of IDs returned is not guaranteed to be 5000 as suspended users are filtered out after connections are queried. If no cursor is provided, a value of &lt;tt&gt;-1&lt;/tt&gt; will be assumed, which is the first "page."&lt;br /&gt;&lt;br /&gt; &#13;
The response from the API will include a &lt;tt&gt;previous_cursor&lt;/tt&gt; and &lt;tt&gt;next_cursor&lt;/tt&gt; to allow paging back and forth. See &lt;a href="https://dev.twitter.com/docs/misc/cursoring"&gt;Using cursors to navigate collections&lt;/a&gt; for more information.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="stringify_ids" required="false" style="query" type="xs:boolean">
                            <doc>Many programming environments will not consume our Tweet ids due to their size. Provide this option to have ids returned as strings instead. More about &lt;a href="https://dev.twitter.com/docs/twitter-ids-json-and-snowflake"&gt;Twitter IDs, JSON and Snowflake&lt;/a&gt;.</doc>
                        </param>
                    </request>
                    <response>
                        <representation mediaType="application/json"/>
                    </response>
                    <ns4:rates>
                        <ns4:rate limit="15" scope="USER" unit="MINUTES" window="15"/>
                    </ns4:rates>
                    <ns2:categories>
                        <ns2:category>friendships</ns2:category>
                    </ns2:categories>
                    <ns3:api-versions>
                        <ns3:api-version>1.1</ns3:api-version>
                    </ns3:api-versions>
                    <ns3:see-also>
                        <ns3:see href="/docs/api/1.1/get/friendships/incoming">GET friendships/incoming</ns3:see>
                    </ns3:see-also>
                    <ns3:tags>
                        <ns3:tag>follower management</ns3:tag>
                    </ns3:tags>
                </method>
            </resource>
            <resource path="/show">
                <method name="GET">
                    <doc>Returns detailed information about the relationship between two arbitrary users.</doc>
                    <request>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="source_id" required="false" style="query" type="xs:int">
                            <doc>The user_id of the subject user.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="source_screen_name" required="false" style="query" type="xs:string">
                            <doc>The screen_name of the subject user.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="target_id" required="false" style="query" type="xs:int">
                            <doc>The user_id of the target user.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="target_screen_name" required="false" style="query" type="xs:string">
                            <doc>The screen_name of the target user.</doc>
                        </param>
                    </request>
                    <response>
                        <representation mediaType="application/json"/>
                    </response>
                    <ns4:rates>
                        <ns4:rate limit="180" scope="USER" unit="MINUTES" window="15"/>
                        <ns4:rate limit="15" scope="APPLICATION" unit="MINUTES" window="15"/>
                    </ns4:rates>
                    <ns2:categories>
                        <ns2:category>friendships</ns2:category>
                    </ns2:categories>
                    <ns3:api-versions>
                        <ns3:api-version>1.1</ns3:api-version>
                    </ns3:api-versions>
                    <ns3:see-also>
                        <ns3:see href="/docs/api/1.1/get/friendships/lookup">GET friendships/lookup</ns3:see>
                    </ns3:see-also>
                    <ns3:tags>
                        <ns3:tag>follower management</ns3:tag>
                    </ns3:tags>
                </method>
            </resource>
            <resource path="/create">
                <method name="POST">
                    <doc>Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful. Returns a string describing the failure condition when unsuccessful.</doc>
                    <request>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="screen_name" required="false" style="query" type="xs:string">
                            <doc>The screen name of the user for whom to befriend.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="user_id" required="false" style="query" type="xs:int">
                            <doc>The ID of the user for whom to befriend.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="follow" required="false" style="query" type="xs:boolean">
                            <doc>Enable notifications for the target user.</doc>
                        </param>
                    </request>
                    <response>
                        <representation element="ns1:users" mediaType="application/json"/>
                    </response>
                    <ns2:categories>
                        <ns2:category>friendships</ns2:category>
                    </ns2:categories>
                    <ns3:api-versions>
                        <ns3:api-version>1.1</ns3:api-version>
                    </ns3:api-versions>
                    <ns3:tags>
                        <ns3:tag>follower management</ns3:tag>
                        <ns3:tag>following</ns3:tag>
                    </ns3:tags>
                </method>
            </resource>
            <resource path="/destroy">
                <method name="POST">
                    <doc>Allows the authenticating user to unfollow the user specified in the ID parameter. Returns the unfollowed user in the requested format when successful. Returns a string describing the failure condition when unsuccessful. Actions taken in this method are asynchronous and changes will be eventually consistent.</doc>
                    <request>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="screen_name" required="false" style="query" type="xs:string">
                            <doc>The screen name of the user for whom to unfollow.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="user_id" required="false" style="query" type="xs:int">
                            <doc>The ID of the user for whom to unfollow.</doc>
                        </param>
                    </request>
                    <response>
                        <representation element="ns1:users" mediaType="application/json"/>
                    </response>
                    <ns2:categories>
                        <ns2:category>friendships</ns2:category>
                    </ns2:categories>
                    <ns3:api-versions>
                        <ns3:api-version>1.1</ns3:api-version>
                    </ns3:api-versions>
                    <ns3:see-also>
                        <ns3:see href="/docs/api/1.1/post/friendships/create">POST friendships/create</ns3:see>
                        <ns3:see href="/docs/api/1.1/get/friendships/lookup">GET friendships/lookup</ns3:see>
                    </ns3:see-also>
                    <ns3:tags>
                        <ns3:tag>follower management</ns3:tag>
                        <ns3:tag>unfollowing</ns3:tag>
                    </ns3:tags>
                </method>
            </resource>
            <resource path="/update">
                <method name="POST">
                    <doc>Allows one to enable or disable retweets and device notifications from the specified user.</doc>
                    <request>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="screen_name" required="false" style="query" type="xs:string">
                            <doc>The screen name of the user for whom to befriend.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="user_id" required="false" style="query" type="xs:int">
                            <doc>The ID of the user for whom to befriend.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="device" required="false" style="query" type="xs:string">
                            <doc>Enable/disable device notifications from the target user.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="retweets" required="false" style="query" type="xs:string">
                            <doc>Enable/disable retweets from the target user.</doc>
                        </param>
                    </request>
                    <response>
                        <representation mediaType="application/json"/>
                    </response>
                    <ns2:categories>
                        <ns2:category>friendships</ns2:category>
                    </ns2:categories>
                    <ns3:api-versions>
                        <ns3:api-version>1.1</ns3:api-version>
                    </ns3:api-versions>
                    <ns3:tags>
                        <ns3:tag>notifications</ns3:tag>
                    </ns3:tags>
                </method>
            </resource>
        </resource>
        <resource path="/statuses">
            <resource path="/firehose">
                <method name="GET">
                    <doc>This endpoint requires special permission to access. Returns all public statuses. Few applications require this level of access. Creative use of a combination of other resources and various access levels can satisfy nearly every application use case.</doc>
                    <request>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="count" required="false" style="query" type="xs:int">
                            <doc>The number of messages to backfill.  See &lt;a href="https://dev.twitter.com/docs/streaming-apis/parameters#count"&gt;the count parameter documentation&lt;/a&gt; for more information.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="delimited" required="false" style="query" type="xs:string">
                            <doc>Specifies whether messages should be length-delimited. See &lt;a href="https://dev.twitter.com/docs/streaming-apis/parameters#delimited"&gt;the delimited parameter documentation&lt;/a&gt; for more information.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="stall_warnings" required="false" style="query" type="xs:string">
                            <doc>Specifies whether stall warnings should be delivered. See &lt;a href="https://dev.twitter.com/docs/streaming-apis/parameters#stall_warnings"&gt;the stall_warnings parameter documentation&lt;/a&gt; for more information.</doc>
                        </param>
                    </request>
                    <response>
                        <representation element="ns1:tweets" mediaType="application/json"/>
                    </response>
                    <ns3:api-versions>
                        <ns3:api-version>1.1</ns3:api-version>
                    </ns3:api-versions>
                    <ns3:see-also>
                        <ns3:see href="/docs/streaming-apis/streams/public">Public streams</ns3:see>
                        <ns3:see href="/docs/api/streaming">The Streaming APIs</ns3:see>
                    </ns3:see-also>
                </method>
            </resource>
            <resource path="/home_timeline">
                <method name="GET">
                    <doc>Returns a collection of the most recent Tweets and retweets posted by the authenticating user and the users they follow. The home timeline is central to how most users interact with the Twitter service.</doc>
                    <request>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="count" required="false" style="query" type="xs:int">
                            <doc>Specifies the number of records to retrieve. Must be less than or equal to 200.  Defaults to 20.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="since_id" required="false" style="query" type="xs:int">
                            <doc>Returns results with an ID greater than (that is, more recent than) the specified ID. There are limits to the number of Tweets which can be accessed through the API. If the limit of Tweets has occured since the since_id, the since_id will be forced to the oldest ID available.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="max_id" required="false" style="query" type="xs:int">
                            <doc>Returns results with an ID less than (that is, older than) or equal to the specified ID.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="trim_user" required="false" style="query" type="xs:boolean">
                            <doc>When set to either &lt;tt&gt;true&lt;/tt&gt;, &lt;tt&gt;t&lt;/tt&gt; or &lt;tt&gt;1&lt;/tt&gt;, each tweet returned in a timeline will include a user object including only the status authors numerical ID. Omit this parameter to receive the complete user object.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="exclude_replies" required="false" style="query" type="xs:boolean">
                            <doc>This parameter will prevent replies from appearing in the returned timeline. Using &lt;tt&gt;exclude_replies&lt;/tt&gt; with the &lt;tt&gt;count&lt;/tt&gt; parameter will mean you will receive up-to count tweets &amp;mdash; this is because the &lt;tt&gt;count&lt;/tt&gt; parameter retrieves that many tweets before filtering out retweets and replies.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="contributor_details" required="false" style="query" type="xs:boolean">
                            <doc>This parameter enhances the contributors element of the status response to include the screen_name of the contributor. By default only the user_id of the contributor is included.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="include_entities" required="false" style="query" type="xs:boolean">
                            <doc>The &lt;tt&gt;entities&lt;/tt&gt; node will be disincluded when set to &lt;tt&gt;false&lt;/tt&gt;.</doc>
                        </param>
                    </request>
                    <response>
                        <representation element="ns1:tweets" mediaType="application/json"/>
                    </response>
                    <ns4:rates>
                        <ns4:rate limit="15" scope="USER" unit="MINUTES" window="15"/>
                    </ns4:rates>
                    <ns2:categories>
                        <ns2:category>statuses</ns2:category>
                    </ns2:categories>
                    <ns3:api-versions>
                        <ns3:api-version>1.1</ns3:api-version>
                    </ns3:api-versions>
                    <ns3:see-also>
                        <ns3:see href="/docs/api/1.1/get/statuses/user_timeline">GET statuses/user_timeline</ns3:see>
                    </ns3:see-also>
                    <ns3:tags>
                        <ns3:tag>finding tweets</ns3:tag>
                    </ns3:tags>
                </method>
            </resource>
            <resource path="/mentions_timeline">
                <method name="GET">
                    <doc>Returns the 20 most recent mentions (tweets containing a users&amp;#039;s @screen_name) for the authenticating user.  The timeline returned is the equivalent of the one seen when you view your mentions on twitter.com.  This method can only return up to 800 tweets.  See Working with Timelines for instructions on traversing timelines.</doc>
                    <request>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="count" required="false" style="query" type="xs:int">
                            <doc>Specifies the number of tweets to try and retrieve, up to a maximum of 200. The value of &lt;tt&gt;count&lt;/tt&gt; is best thought of as a limit to the number of tweets to return because suspended or deleted content is removed after the count has been applied. We include retweets in the count, even if &lt;tt&gt;include_rts&lt;/tt&gt; is not supplied. It is recommended you always send &lt;tt&gt;include_rts=1&lt;/tt&gt; when using this API method.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="since_id" required="false" style="query" type="xs:int">
                            <doc>Returns results with an ID greater than (that is, more recent than) the specified ID. There are limits to the number of Tweets which can be accessed through the API. If the limit of Tweets has occured since the since_id, the since_id will be forced to the oldest ID available.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="max_id" required="false" style="query" type="xs:int">
                            <doc>Returns results with an ID less than (that is, older than) or equal to the specified ID.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="trim_user" required="false" style="query" type="xs:boolean">
                            <doc>When set to either &lt;tt&gt;true&lt;/tt&gt;, &lt;tt&gt;t&lt;/tt&gt; or &lt;tt&gt;1&lt;/tt&gt;, each tweet returned in a timeline will include a user object including only the status authors numerical ID. Omit this parameter to receive the complete user object.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="contributor_details" required="false" style="query" type="xs:boolean">
                            <doc>This parameter enhances the contributors element of the status response to include the screen_name of the contributor. By default only the user_id of the contributor is included.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="include_entities" required="false" style="query" type="xs:boolean">
                            <doc>The &lt;tt&gt;entities&lt;/tt&gt; node will be disincluded when set to &lt;tt&gt;false&lt;/tt&gt;.</doc>
                        </param>
                    </request>
                    <response>
                        <representation element="ns1:tweets" mediaType="application/json"/>
                    </response>
                    <ns4:rates>
                        <ns4:rate limit="15" scope="USER" unit="MINUTES" window="15"/>
                    </ns4:rates>
                    <ns2:categories>
                        <ns2:category>statuses</ns2:category>
                    </ns2:categories>
                    <ns3:api-versions>
                        <ns3:api-version>1.1</ns3:api-version>
                    </ns3:api-versions>
                    <ns3:see-also>
                        <ns3:see href="/docs/api/1.1/get/statuses/home_timeline">GET statuses/home_timeline</ns3:see>
                        <ns3:see href="/docs/api/1.1/get/statuses/user_timeline">GET statuses/user_timeline</ns3:see>
                    </ns3:see-also>
                    <ns3:tags>
                        <ns3:tag>Mentions</ns3:tag>
                    </ns3:tags>
                </method>
            </resource>
            <resource path="/oembed">
                <method name="GET">
                    <doc>Returns information allowing the creation of an embedded representation of a Tweet on third party sites.  See the oEmbed specification for information about the response format.</doc>
                    <request>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="id" required="false" style="template" type="xs:string">
                            <doc>The Tweet/status ID to return embed code for.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="url" required="false" style="template" type="xs:string">
                            <doc>The URL of the Tweet/status to be embedded.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="maxwidth" style="query" type="xs:int">
                            <doc>The maximum width in pixels that the embed should be rendered at.  This value is constrained to be between &lt;strong&gt;250&lt;/strong&gt; and &lt;strong&gt;550&lt;/strong&gt; pixels.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="hide_media" style="query" type="xs:boolean">
                            <doc>Specifies whether the embedded Tweet should automatically expand images which were uploaded via &lt;a href="https://dev.twitter.com/docs/api/1.1/post/statuses/update_with_media"&gt;POST statuses/update_with_media&lt;/a&gt;.  When set to either &lt;tt&gt;true&lt;/tt&gt;, &lt;tt&gt;t&lt;/tt&gt; or &lt;tt&gt;1&lt;/tt&gt; images will not be expanded.  Defaults to false.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="hide_thread" style="query" type="xs:boolean">
                            <doc>Specifies whether the embedded Tweet should automatically show the original message in the case that the embedded Tweet is a reply.   When set to either &lt;tt&gt;true&lt;/tt&gt;, &lt;tt&gt;t&lt;/tt&gt; or &lt;tt&gt;1&lt;/tt&gt; the original Tweet will not be shown.  Defaults to false.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="omit_script" style="query" type="xs:boolean">
                            <doc>Specifies whether the embedded Tweet HTML should include a &amp;lt;script&amp;gt; element pointing to &lt;tt&gt;widgets.js&lt;/tt&gt;.  In cases where a page already includes &lt;tt&gt;widgets.js&lt;/tt&gt;, setting this value to true will prevent a redundant script element from being included.   When set to either &lt;tt&gt;true&lt;/tt&gt;, &lt;tt&gt;t&lt;/tt&gt; or &lt;tt&gt;1&lt;/tt&gt; the &amp;lt;script&amp;gt; element will not be included in the embed HTML, meaning that pages must include a reference to  &lt;tt&gt;widgets.js&lt;/tt&gt; manually.  Defaults to false.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="align" style="query" type="xs:string">
                            <doc>Specifies whether the embedded Tweet should be left aligned, right aligned, or centered in the page.  Valid values are &lt;tt&gt;left&lt;/tt&gt;, &lt;tt&gt;right&lt;/tt&gt;, &lt;tt&gt;center&lt;/tt&gt;, and &lt;tt&gt;none&lt;/tt&gt;. Defaults to &lt;tt&gt;none&lt;/tt&gt;, meaning no alignment styles are specified for the Tweet.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="related" style="query" type="xs:string">
                            <doc>A value for the TWT &lt;tt&gt;related&lt;/tt&gt; parameter, as described in &lt;a href="https://dev.twitter.com/docs/intents"&gt;Web Intents&lt;/a&gt;.  This value will be forwarded to all Web Intents calls.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="lang" style="query" type="xs:string">
                            <doc>Language code for the rendered embed.  This will affect the text and localization of the rendered HTML.</doc>
                        </param>
                    </request>
                    <response>
                        <representation element="ns1:tweets" mediaType="application/json"/>
                    </response>
                    <ns4:rates>
                        <ns4:rate limit="180" scope="USER" unit="MINUTES" window="15"/>
                        <ns4:rate limit="180" scope="APPLICATION" unit="MINUTES" window="15"/>
                    </ns4:rates>
                    <ns2:categories>
                        <ns2:category>statuses</ns2:category>
                    </ns2:categories>
                    <ns3:api-versions>
                        <ns3:api-version>1.1</ns3:api-version>
                    </ns3:api-versions>
                    <ns3:see-also>
                        <ns3:see href="/docs/embedded-tweets">Embedded Tweets</ns3:see>
                    </ns3:see-also>
                    <ns3:tags>
                        <ns3:tag>oEmbed</ns3:tag>
                    </ns3:tags>
                </method>
            </resource>
            <resource path="/retweeters">
                <resource path="/ids">
                    <method name="GET">
                        <doc>Returns a collection of up to 100 user IDs belonging to users who have retweeted the tweet specified by the id parameter. This method offers similar data to GET statuses/retweets/:id and replaces API v1&amp;#039;s GET statuses/:id/retweeted_by/ids method.</doc>
                        <request>
                            <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="id" required="false" style="template" type="xs:string">
<doc>The numerical ID of the desired status.</doc>
                            </param>
                            <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="cursor" style="query" type="xs:string">
<doc>Causes the list of IDs to be broken into pages of no more than 100 IDs at a time. The number of IDs returned is not guaranteed to be 100 as suspended users are filtered out after connections are queried. If no cursor is provided, a value of &lt;tt&gt;-1&lt;/tt&gt; will be assumed, which is the first "page."&lt;br /&gt;&lt;br /&gt; &#13;
The response from the API will include a &lt;tt&gt;previous_cursor&lt;/tt&gt; and &lt;tt&gt;next_cursor&lt;/tt&gt; to allow paging back and forth. See &lt;a href="https://dev.twitter.com/docs/misc/cursoring"&gt;Using cursors to navigate collections&lt;/a&gt; for more information.&lt;br/&gt;&lt;br/&gt;&#13;
While this method supports the cursor parameter, the entire result set can be returned in a single cursored collection. Using the &lt;tt&gt;count&lt;/tt&gt; parameter with this method will not provide segmented cursors for use with this parameter.</doc>
                            </param>
                            <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="stringify_ids" required="false" style="query" type="xs:boolean">
<doc>Many programming environments will not consume our ids due to their size. Provide this option to have ids returned as strings instead. Read more about &lt;a href="https://dev.twitter.com/docs/twitter-ids-json-and-snowflake"&gt;Twitter IDs, JSON and Snowflake&lt;/a&gt;.</doc>
                            </param>
                        </request>
                        <response>
                            <representation element="ns1:users" mediaType="application/json"/>
                        </response>
                        <ns4:rates>
                            <ns4:rate limit="15" scope="USER" unit="MINUTES" window="15"/>
                            <ns4:rate limit="60" scope="APPLICATION" unit="MINUTES" window="15"/>
                        </ns4:rates>
                        <ns2:categories>
                            <ns2:category>statuses</ns2:category>
                        </ns2:categories>
                        <ns3:api-versions>
                            <ns3:api-version>1.1</ns3:api-version>
                        </ns3:api-versions>
                        <ns3:see-also>
                            <ns3:see href="/docs/api/1.1/get/statuses/retweets/%3Aid">GET statuses/retweets/:id</ns3:see>
                        </ns3:see-also>
                        <ns3:tags>
                            <ns3:tag>Retweets</ns3:tag>
                        </ns3:tags>
                    </method>
                </resource>
            </resource>
            <resource path="/retweets">
                <resource path="/{id}">
                    <method name="GET">
                        <doc>Returns a collection of the 100 most recent retweets of the tweet specified by the id parameter.</doc>
                        <request>
                            <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="id" required="false" style="template" type="xs:int">
<doc>The numerical ID of the desired status.</doc>
                            </param>
                            <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="count" required="false" style="query" type="xs:int">
<doc>Specifies the number of records to retrieve. Must be less than or equal to 100.</doc>
                            </param>
                            <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="trim_user" required="false" style="query" type="xs:boolean">
<doc>When set to either &lt;tt&gt;true&lt;/tt&gt;, &lt;tt&gt;t&lt;/tt&gt; or &lt;tt&gt;1&lt;/tt&gt;, each tweet returned in a timeline will include a user object including only the status authors numerical ID. Omit this parameter to receive the complete user object.</doc>
                            </param>
                        </request>
                        <response>
                            <representation element="ns1:tweets" mediaType="application/json"/>
                        </response>
                        <ns4:rates>
                            <ns4:rate limit="15" scope="USER" unit="MINUTES" window="15"/>
                            <ns4:rate limit="60" scope="APPLICATION" unit="MINUTES" window="15"/>
                        </ns4:rates>
                        <ns2:categories>
                            <ns2:category>statuses</ns2:category>
                        </ns2:categories>
                        <ns3:api-versions>
                            <ns3:api-version>1.1</ns3:api-version>
                        </ns3:api-versions>
                        <ns3:tags>
                            <ns3:tag>Retweets</ns3:tag>
                        </ns3:tags>
                    </method>
                </resource>
            </resource>
            <resource path="/retweets_of_me">
                <method name="GET">
                    <doc>Returns the most recent tweets authored by the authenticating user that have been retweeted by others. This timeline is a subset of the user&amp;#039;s GET statuses/user_timeline.  See Working with Timelines for instructions on traversing timelines.</doc>
                    <request>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="count" required="false" style="query" type="xs:int">
                            <doc>Specifies the number of records to retrieve. Must be less than or equal to 100. If omitted, 20 will be assumed.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="since_id" required="false" style="query" type="xs:int">
                            <doc>Returns results with an ID greater than (that is, more recent than) the specified ID. There are limits to the number of Tweets which can be accessed through the API. If the limit of Tweets has occured since the since_id, the since_id will be forced to the oldest ID available.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="max_id" required="false" style="query" type="xs:int">
                            <doc>Returns results with an ID less than (that is, older than) or equal to the specified ID.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="trim_user" required="false" style="query" type="xs:boolean">
                            <doc>When set to either &lt;tt&gt;true&lt;/tt&gt;, &lt;tt&gt;t&lt;/tt&gt; or &lt;tt&gt;1&lt;/tt&gt;, each tweet returned in a timeline will include a user object including only the status authors numerical ID. Omit this parameter to receive the complete user object.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="include_entities" required="false" style="query" type="xs:boolean">
                            <doc>The tweet &lt;tt&gt;entities&lt;/tt&gt; node will be disincluded when set to &lt;tt&gt;false&lt;/tt&gt;.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="include_user_entities" required="false" style="query" type="xs:boolean">
                            <doc>The user &lt;tt&gt;entities&lt;/tt&gt; node will be disincluded when set to &lt;tt&gt;false&lt;/tt&gt;.</doc>
                        </param>
                    </request>
                    <response>
                        <representation element="ns1:tweets" mediaType="application/json"/>
                    </response>
                    <ns4:rates>
                        <ns4:rate limit="15" scope="USER" unit="MINUTES" window="15"/>
                    </ns4:rates>
                    <ns2:categories>
                        <ns2:category>statuses</ns2:category>
                    </ns2:categories>
                    <ns3:api-versions>
                        <ns3:api-version>1.1</ns3:api-version>
                    </ns3:api-versions>
                    <ns3:see-also>
                        <ns3:see href="/docs/api/1.1/get/statuses/mentions_timeline">GET statuses/mentions_timeline</ns3:see>
                        <ns3:see href="/docs/api/1.1/get/statuses/user_timeline">GET statuses/user_timeline</ns3:see>
                        <ns3:see href="/docs/working-with-timelines">Working with Timelines</ns3:see>
                    </ns3:see-also>
                    <ns3:tags>
                        <ns3:tag>Retweets</ns3:tag>
                    </ns3:tags>
                </method>
            </resource>
            <resource path="/sample">
                <method name="GET">
                    <doc>Returns a small random sample of all public statuses.  The Tweets returned by the default access level are the same, so if two different clients connect to this endpoint, they will see the same Tweets.</doc>
                    <request>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="delimited" required="false" style="query" type="xs:string">
                            <doc>Specifies whether messages should be length-delimited. See &lt;a href="https://dev.twitter.com/docs/streaming-apis/parameters#delimited"&gt;the delimited parameter documentation&lt;/a&gt; for more information.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="stall_warnings" required="false" style="query" type="xs:string">
                            <doc>Specifies whether stall warnings should be delivered. See &lt;a href="https://dev.twitter.com/docs/streaming-apis/parameters#stall_warnings"&gt;the stall_warnings parameter documentation&lt;/a&gt; for more information.</doc>
                        </param>
                    </request>
                    <response>
                        <representation element="ns1:tweets" mediaType="application/json"/>
                    </response>
                    <ns3:api-versions>
                        <ns3:api-version>1.1</ns3:api-version>
                    </ns3:api-versions>
                    <ns3:see-also>
                        <ns3:see href="/docs/streaming-apis/streams/public">Public streams</ns3:see>
                        <ns3:see href="/docs/api/streaming">The Streaming APIs</ns3:see>
                    </ns3:see-also>
                </method>
            </resource>
            <resource path="/show">
                <resource path="/{id}">
                    <method name="GET">
                        <doc>Returns a single Tweet, specified by the id parameter. The Tweet&amp;#039;s author will also be embedded within the tweet.  See Embeddable Timelines, Embeddable Tweets, and GET statuses/oembed for tools to render Tweets according to Display Requirements.</doc>
                        <request>
                            <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="id" required="false" style="template" type="xs:int">
<doc>The numerical ID of the desired Tweet.</doc>
                            </param>
                            <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="trim_user" required="false" style="query" type="xs:boolean">
<doc>When set to either &lt;tt&gt;true&lt;/tt&gt;, &lt;tt&gt;t&lt;/tt&gt; or &lt;tt&gt;1&lt;/tt&gt;, each tweet returned in a timeline will include a user object including only the status authors numerical ID. Omit this parameter to receive the complete user object.</doc>
                            </param>
                            <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="include_my_retweet" required="false" style="query" type="xs:boolean">
<doc>When set to either &lt;tt&gt;true&lt;/tt&gt;, &lt;tt&gt;t&lt;/tt&gt; or &lt;tt&gt;1&lt;/tt&gt;, any Tweets returned that have been retweeted by the authenticating user will include an additional &lt;tt&gt;current_user_retweet&lt;/tt&gt; node, containing the ID of the source status for the retweet.</doc>
                            </param>
                            <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="include_entities" required="false" style="query" type="xs:boolean">
<doc>The &lt;tt&gt;entities&lt;/tt&gt; node will be disincluded when set to &lt;tt&gt;false&lt;/tt&gt;.</doc>
                            </param>
                        </request>
                        <response>
                            <representation element="ns1:tweets" mediaType="application/json"/>
                        </response>
                        <ns4:rates>
                            <ns4:rate limit="180" scope="USER" unit="MINUTES" window="15"/>
                            <ns4:rate limit="180" scope="APPLICATION" unit="MINUTES" window="15"/>
                        </ns4:rates>
                        <ns2:categories>
                            <ns2:category>statuses</ns2:category>
                        </ns2:categories>
                        <ns3:api-versions>
                            <ns3:api-version>1.1</ns3:api-version>
                        </ns3:api-versions>
                        <ns3:tags>
                            <ns3:tag>finding tweets</ns3:tag>
                        </ns3:tags>
                    </method>
                </resource>
            </resource>
            <resource path="/user_timeline">
                <method name="GET">
                    <doc>Returns a collection of the most recent Tweets posted by the user indicated by the screen_name or user_id parameters.</doc>
                    <request>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="user_id" required="false" style="query" type="xs:int">
                            <doc>The ID of the user for whom to return results for.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="screen_name" required="false" style="query" type="xs:string">
                            <doc>The screen name of the user for whom to return results for.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="since_id" required="false" style="query" type="xs:int">
                            <doc>Returns results with an ID greater than (that is, more recent than) the specified ID. There are limits to the number of Tweets which can be accessed through the API. If the limit of Tweets has occured since the since_id, the since_id will be forced to the oldest ID available.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="count" required="false" style="query" type="xs:int">
                            <doc>Specifies the number of tweets to try and retrieve, up to a maximum of 200 per distinct request. The value of &lt;tt&gt;count&lt;/tt&gt; is best thought of as a limit to the number of tweets to return because suspended or deleted content is removed after the count has been applied. We include retweets in the count, even if &lt;tt&gt;include_rts&lt;/tt&gt; is not supplied. It is recommended you always send &lt;tt&gt;include_rts=1&lt;/tt&gt; when using this API method.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="max_id" required="false" style="query" type="xs:int">
                            <doc>Returns results with an ID less than (that is, older than) or equal to the specified ID.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="trim_user" required="false" style="query" type="xs:boolean">
                            <doc>When set to either &lt;tt&gt;true&lt;/tt&gt;, &lt;tt&gt;t&lt;/tt&gt; or &lt;tt&gt;1&lt;/tt&gt;, each tweet returned in a timeline will include a user object including only the status authors numerical ID. Omit this parameter to receive the complete user object.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="exclude_replies" required="false" style="query" type="xs:boolean">
                            <doc>This parameter will prevent replies from appearing in the returned timeline. Using &lt;tt&gt;exclude_replies&lt;/tt&gt; with the &lt;tt&gt;count&lt;/tt&gt; parameter will mean you will receive up-to count tweets &amp;mdash; this is because the &lt;tt&gt;count&lt;/tt&gt; parameter retrieves that many tweets before filtering out retweets and replies. This parameter is only supported for JSON and XML responses.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="contributor_details" required="false" style="query" type="xs:boolean">
                            <doc>This parameter enhances the contributors element of the status response to include the screen_name of the contributor. By default only the user_id of the contributor is included.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="include_rts" required="false" style="query" type="xs:boolean">
                            <doc>When set to &lt;tt&gt;false&lt;/tt&gt;, the timeline will strip any native retweets (though they will still count toward both the maximal length of the timeline and the slice selected by the count parameter). Note: If you're using the trim_user parameter in conjunction with include_rts, the retweets will still contain a full user object.</doc>
                        </param>
                    </request>
                    <response>
                        <representation element="ns1:tweets" mediaType="application/json"/>
                    </response>
                    <ns4:rates>
                        <ns4:rate limit="180" scope="USER" unit="MINUTES" window="15"/>
                        <ns4:rate limit="300" scope="APPLICATION" unit="MINUTES" window="15"/>
                    </ns4:rates>
                    <ns2:categories>
                        <ns2:category>statuses</ns2:category>
                    </ns2:categories>
                    <ns3:api-versions>
                        <ns3:api-version>1.1</ns3:api-version>
                    </ns3:api-versions>
                    <ns3:see-also>
                        <ns3:see href="/docs/api/1.1/get/statuses/home_timeline">GET statuses/home_timeline</ns3:see>
                        <ns3:see href="/docs/api/1.1/get/lists/statuses">GET lists/statuses</ns3:see>
                        <ns3:see href="/docs/working-with-timelines">Working with Timelines</ns3:see>
                        <ns3:see href="/docs/embedded-timelines">Embedded Timelines</ns3:see>
                        <ns3:see href="/docs/embedded-tweets">Embedded Tweets</ns3:see>
                    </ns3:see-also>
                </method>
            </resource>
            <resource path="/destroy">
                <resource path="/{id}">
                    <method name="POST">
                        <doc>Destroys the status specified by the required ID parameter. The authenticating user must be the author of the specified status. Returns the destroyed status if successful.</doc>
                        <request>
                            <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="id" required="false" style="template" type="xs:int">
<doc>The numerical ID of the desired status.</doc>
                            </param>
                            <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="trim_user" required="false" style="query" type="xs:boolean">
<doc>When set to either &lt;tt&gt;true&lt;/tt&gt;, &lt;tt&gt;t&lt;/tt&gt; or &lt;tt&gt;1&lt;/tt&gt;, each tweet returned in a timeline will include a user object including only the status authors numerical ID. Omit this parameter to receive the complete user object.</doc>
                            </param>
                        </request>
                        <response>
                            <representation element="ns1:tweets" mediaType="application/json"/>
                        </response>
                        <ns2:categories>
                            <ns2:category>statuses</ns2:category>
                        </ns2:categories>
                        <ns3:api-versions>
                            <ns3:api-version>1.1</ns3:api-version>
                        </ns3:api-versions>
                        <ns3:tags>
                            <ns3:tag>Tweets</ns3:tag>
                        </ns3:tags>
                    </method>
                </resource>
            </resource>
            <resource path="/filter">
                <method name="POST">
                    <doc>Returns public statuses that match one or more filter predicates. Multiple parameters may be specified which allows most clients to use a single connection to the Streaming API.  Both GET and POST requests are supported, but GET requests with too many parameters may cause the request to be rejected for excessive URL length.</doc>
                    <request>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="follow" style="query" type="xs:string">
                            <doc>A comma separated list of user IDs, indicating the users to return statuses for in the stream. See &lt;a href="https://dev.twitter.com/docs/streaming-apis/parameters#follow"&gt;the follow parameter documentation&lt;/a&gt; for more information.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="track" style="query" type="xs:string">
                            <doc>Keywords to track. Phrases of keywords are specified by a comma-separated list.  See &lt;a href="https://dev.twitter.com/docs/streaming-apis/parameters#track"&gt;the track parameter documentation&lt;/a&gt; for more information.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="locations" style="query" type="xs:string">
                            <doc>Specifies a set of bounding boxes to track. See &lt;a href="https://dev.twitter.com/docs/streaming-apis/parameters#locations"&gt;the locations parameter documentation&lt;/a&gt; for more information.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="delimited" required="false" style="query" type="xs:string">
                            <doc>Specifies whether messages should be length-delimited. See &lt;a href="https://dev.twitter.com/docs/streaming-apis/parameters#delimited"&gt;the delimited parameter documentation&lt;/a&gt; for more information.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="stall_warnings" required="false" style="query" type="xs:string">
                            <doc>Specifies whether stall warnings should be delivered. See &lt;a href="https://dev.twitter.com/docs/streaming-apis/parameters#stall_warnings"&gt;the stall_warnings parameter documentation&lt;/a&gt; for more information.</doc>
                        </param>
                    </request>
                    <response>
                        <representation element="ns1:tweets" mediaType="application/json"/>
                    </response>
                    <ns3:api-versions>
                        <ns3:api-version>1.1</ns3:api-version>
                    </ns3:api-versions>
                    <ns3:see-also>
                        <ns3:see href="/docs/streaming-apis/streams/public">Public streams</ns3:see>
                        <ns3:see href="/docs/api/streaming">The Streaming APIs</ns3:see>
                    </ns3:see-also>
                </method>
            </resource>
            <resource path="/retweet">
                <resource path="/{id}">
                    <method name="POST">
                        <doc>Retweets a tweet. Returns the original tweet with retweet details embedded.</doc>
                        <request>
                            <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="id" required="false" style="template" type="xs:int">
<doc>The numerical ID of the desired status.</doc>
                            </param>
                            <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="trim_user" required="false" style="query" type="xs:boolean">
<doc>When set to either &lt;tt&gt;true&lt;/tt&gt;, &lt;tt&gt;t&lt;/tt&gt; or &lt;tt&gt;1&lt;/tt&gt;, each tweet returned in a timeline will include a user object including only the status authors numerical ID. Omit this parameter to receive the complete user object.</doc>
                            </param>
                        </request>
                        <response>
                            <representation element="ns1:tweets" mediaType="application/json"/>
                        </response>
                        <ns2:categories>
                            <ns2:category>statuses</ns2:category>
                        </ns2:categories>
                        <ns3:api-versions>
                            <ns3:api-version>1.1</ns3:api-version>
                        </ns3:api-versions>
                        <ns3:tags>
                            <ns3:tag>Retweets</ns3:tag>
                            <ns3:tag>Sharing</ns3:tag>
                        </ns3:tags>
                    </method>
                </resource>
            </resource>
            <resource path="/update">
                <method name="POST">
                    <doc>Updates the authenticating user&amp;#039;s current status, also known as tweeting. To upload an image to accompany the tweet, use POST statuses/update_with_media.  For each update attempt, the update text is compared with the authenticating user&amp;#039;s recent tweets. Any attempt that would result in duplication will be blocked, resulting in a 403 error.</doc>
                    <request>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="status" required="false" style="template" type="xs:string">
                            <doc>The text of your status update, typically up to 140 characters. URL encode as necessary. &lt;a href="https://dev.twitter.com/docs/tco-link-wrapper/faq"&gt;t.co link wrapping&lt;/a&gt; may effect character counts.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="in_reply_to_status_id" required="false" style="query" type="xs:string">
                            <doc>The ID of an existing status that the update is in reply to.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="lat" required="false" style="query" type="xs:string">
                            <doc>The latitude of the location this tweet refers to. This parameter will be ignored unless it is inside the range -90.0 to +90.0 (North is positive) inclusive. It will also be ignored if there isn't a corresponding &lt;tt&gt;long&lt;/tt&gt; parameter.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="long" required="false" style="query" type="xs:string">
                            <doc>The longitude of the location this tweet refers to. The valid ranges for longitude is -180.0 to +180.0 (East is positive) inclusive. This parameter will be ignored if outside that range, if it is not a number, if &lt;tt&gt;geo_enabled&lt;/tt&gt; is disabled, or if there not a corresponding &lt;tt&gt;lat&lt;/tt&gt; parameter.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="place_id" required="false" style="query" type="xs:string">
                            <doc>A place in the world. These IDs can be retrieved from &lt;a href="https://dev.twitter.com/docs/api/1/get/geo/reverse_geocode"&gt;GET geo/reverse_geocode&lt;/a&gt;.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="display_coordinates" required="false" style="query" type="xs:boolean">
                            <doc>Whether or not to put a pin on the exact coordinates a tweet has been sent from.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="trim_user" required="false" style="query" type="xs:boolean">
                            <doc>When set to either &lt;tt&gt;true&lt;/tt&gt;, &lt;tt&gt;t&lt;/tt&gt; or &lt;tt&gt;1&lt;/tt&gt;, each tweet returned in a timeline will include a user object including only the status authors numerical ID. Omit this parameter to receive the complete user object.</doc>
                        </param>
                    </request>
                    <response>
                        <representation element="ns1:tweets" mediaType="application/json"/>
                    </response>
                    <ns2:categories>
                        <ns2:category>statuses</ns2:category>
                    </ns2:categories>
                    <ns3:api-versions>
                        <ns3:api-version>1.1</ns3:api-version>
                    </ns3:api-versions>
                    <ns3:tags>
                        <ns3:tag>tweeting</ns3:tag>
                    </ns3:tags>
                </method>
            </resource>
            <resource path="/update_with_media">
                <method name="POST">
                    <doc>Updates the authenticating user&amp;#039;s current status and attaches media for upload. In other words, it creates a Tweet with a picture attached.  Unlike POST statuses/update, this method expects raw multipart data. Your POST request&amp;#039;s Content-Type should be set to multipart/form-data with the media[] parameter .</doc>
                    <request>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="status" required="false" style="template" type="xs:string">
                            <doc>The text of your status update. URL encode as necessary.  &lt;a href="https://dev.twitter.com/docs/tco-link-wrapper/faq"&gt;t.co link wrapping&lt;/a&gt; may affect character counts if the post contains URLs. You must additionally account for the &lt;tt&gt;characters_reserved_per_media&lt;/tt&gt; per uploaded media, additionally accounting for space characters in between finalized URLs.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="media[]" required="false" style="template" type="xs:string">
                            <doc>Up to &lt;tt&gt;max_media_per_upload&lt;/tt&gt; files may be specified in the request, each named &lt;tt&gt;media[]&lt;/tt&gt;. Supported image formats are PNG, JPG and GIF. Animated GIFs are not supported. This data must be either the raw image bytes or encoded as base64.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="possibly_sensitive" required="false" style="query" type="xs:string">
                            <doc>Set to &lt;tt&gt;true&lt;/tt&gt; for content which may not be suitable for every audience.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="in_reply_to_status_id" required="false" style="query" type="xs:string">
                            <doc>The ID of an existing status that the update is in reply to.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="lat" required="false" style="query" type="xs:string">
                            <doc>The latitude of the location this tweet refers to. This parameter will be ignored unless it is inside the range -90.0 to +90.0 (North is positive) inclusive. It will also be ignored if there isn't a corresponding &lt;tt&gt;long&lt;/tt&gt; parameter.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="long" required="false" style="query" type="xs:string">
                            <doc>The longitude of the location this tweet refers to. The valid ranges for longitude is -180.0 to +180.0 (East is positive) inclusive. This parameter will be ignored if outside that range, not a number, &lt;tt&gt;geo_enabled&lt;/tt&gt; is disabled, or if there not a corresponding &lt;tt&gt;lat&lt;/tt&gt; parameter.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="place_id" required="false" style="query" type="xs:string">
                            <doc>A place in the world identified by a Twitter place ID. Place IDs can be retrieved from geo/reverse_geocode.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="display_coordinates" required="false" style="query" type="xs:boolean">
                            <doc>Whether or not to put a pin on the exact coordinates a tweet has been sent from.</doc>
                        </param>
                    </request>
                    <response>
                        <representation element="ns1:tweets" mediaType="application/json"/>
                    </response>
                    <ns2:categories>
                        <ns2:category>statuses</ns2:category>
                    </ns2:categories>
                    <ns3:api-versions>
                        <ns3:api-version>1.1</ns3:api-version>
                    </ns3:api-versions>
                    <ns3:see-also>
                        <ns3:see href="/docs/uploading-media">Uploading Media</ns3:see>
                        <ns3:see href="/docs/api/1.1/post/statuses/update">POST statuses/update</ns3:see>
                    </ns3:see-also>
                    <ns3:tags>
                        <ns3:tag>Uploading</ns3:tag>
                    </ns3:tags>
                </method>
            </resource>
        </resource>
        <resource path="/trends">
            <resource path="/available">
                <method name="GET">
                    <doc>Returns the locations that Twitter has trending topic information for. The response is an array of &amp;quot;locations&amp;quot; that encode the location&amp;#039;s WOEID and some other human-readable information such as a canonical name and country the location belongs in. A WOEID is a Yahoo! Where On Earth ID.</doc>
                    <request/>
                    <response>
                        <representation mediaType="application/json"/>
                    </response>
                    <ns4:rates>
                        <ns4:rate limit="15" scope="USER" unit="MINUTES" window="15"/>
                        <ns4:rate limit="15" scope="APPLICATION" unit="MINUTES" window="15"/>
                    </ns4:rates>
                    <ns2:categories>
                        <ns2:category>trends</ns2:category>
                    </ns2:categories>
                    <ns3:api-versions>
                        <ns3:api-version>1.1</ns3:api-version>
                    </ns3:api-versions>
                    <ns3:see-also>
                        <ns3:see href="/docs/api/1.1/get/trends/place">GET trends/place</ns3:see>
                        <ns3:see href="/docs/api/1.1/get/trends/closest">GET trends/closest</ns3:see>
                    </ns3:see-also>
                </method>
            </resource>
            <resource path="/closest">
                <method name="GET">
                    <doc>Returns the locations that Twitter has trending topic information for, closest to a specified location. The response is an array of &amp;quot;locations&amp;quot; that encode the location&amp;#039;s WOEID and some other human-readable information such as a canonical name and country the location belongs in. A WOEID is a Yahoo! Where On Earth ID.</doc>
                    <request>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="lat" required="false" style="template" type="xs:string">
                            <doc>If provided with a &lt;tt&gt;long&lt;/tt&gt; parameter the available trend locations will be sorted by distance, nearest to furthest, to the co-ordinate pair. The valid ranges for longitude is -180.0 to +180.0 (West is negative, East is positive) inclusive.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="long" required="false" style="template" type="xs:string">
                            <doc>If provided with a &lt;tt&gt;lat&lt;/tt&gt; parameter the available trend locations will be sorted by distance, nearest to furthest, to the co-ordinate pair. The valid ranges for longitude is -180.0 to +180.0 (West is negative, East is positive) inclusive.</doc>
                        </param>
                    </request>
                    <response>
                        <representation mediaType="application/json"/>
                    </response>
                    <ns4:rates>
                        <ns4:rate limit="15" scope="USER" unit="MINUTES" window="15"/>
                        <ns4:rate limit="15" scope="APPLICATION" unit="MINUTES" window="15"/>
                    </ns4:rates>
                    <ns2:categories>
                        <ns2:category>trends</ns2:category>
                    </ns2:categories>
                    <ns3:api-versions>
                        <ns3:api-version>1.1</ns3:api-version>
                    </ns3:api-versions>
                    <ns3:see-also>
                        <ns3:see href="/docs/api/1.1/get/trends/available">GET trends/available</ns3:see>
                        <ns3:see href="/docs/api/1.1/get/trends/closest">GET trends/closest</ns3:see>
                    </ns3:see-also>
                </method>
            </resource>
            <resource path="/place">
                <method name="GET">
                    <doc>Returns the top 10 trending topics for a specific WOEID, if trending information is available for it. The response is an array of &amp;quot;trend&amp;quot; objects that encode the name of the trending topic, the query parameter that can be used to search for the topic on Twitter Search, and the Twitter Search URL. This information is cached for 5 minutes.</doc>
                    <request>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="id" required="false" style="template" type="xs:int">
                            <doc>The &lt;a href="http://developer.yahoo.com/geo/geoplanet/" rel="external"&gt;Yahoo! Where On Earth ID&lt;/a&gt; of the location to return trending information for. Global information is available by using &lt;tt&gt;1&lt;/tt&gt; as the &lt;tt&gt;WOEID&lt;/tt&gt;.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="exclude" required="false" style="query" type="xs:string">
                            <doc>Setting this equal to &lt;tt&gt;hashtags&lt;/tt&gt; will remove all hashtags from the trends list.</doc>
                        </param>
                    </request>
                    <response>
                        <representation mediaType="application/json"/>
                    </response>
                    <ns4:rates>
                        <ns4:rate limit="15" scope="USER" unit="MINUTES" window="15"/>
                        <ns4:rate limit="15" scope="APPLICATION" unit="MINUTES" window="15"/>
                    </ns4:rates>
                    <ns2:categories>
                        <ns2:category>trends</ns2:category>
                    </ns2:categories>
                    <ns3:api-versions>
                        <ns3:api-version>1.1</ns3:api-version>
                    </ns3:api-versions>
                    <ns3:see-also>
                        <ns3:see href="/docs/api/1.1/get/trends/available">GET trends/available</ns3:see>
                        <ns3:see href="/docs/api/1.1/get/trends/closest">GET trends/closest</ns3:see>
                    </ns3:see-also>
                </method>
            </resource>
        </resource>
        <resource path="/saved_searches">
            <resource path="/list">
                <method name="GET">
                    <doc>Returns the authenticated user&amp;#039;s saved search queries.</doc>
                    <request/>
                    <response>
                        <representation mediaType="application/json"/>
                    </response>
                    <ns4:rates>
                        <ns4:rate limit="15" scope="USER" unit="MINUTES" window="15"/>
                    </ns4:rates>
                    <ns2:categories>
                        <ns2:category>saved_searches</ns2:category>
                    </ns2:categories>
                    <ns3:api-versions>
                        <ns3:api-version>1.1</ns3:api-version>
                    </ns3:api-versions>
                    <ns3:see-also>
                        <ns3:see href="/docs/api/1.1/get/saved_searches/show/%3Aid">GET saved_searches/show/:id</ns3:see>
                        <ns3:see href="/docs/api/1.1/post/saved_searches/create">POST saved_searches/create</ns3:see>
                        <ns3:see href="/docs/api/1.1/post/saved_searches/destroy/%3Aid">POST saved_searches/destroy/:id</ns3:see>
                        <ns3:see href="/docs/api/1.1/get/search/tweets">GET search/tweets</ns3:see>
                    </ns3:see-also>
                </method>
            </resource>
            <resource path="/show">
                <resource path="/{id}">
                    <method name="GET">
                        <doc>Retrieve the information for the saved search represented by the given id. The authenticating user must be the owner of saved search ID being requested.</doc>
                        <request>
                            <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="id" required="false" style="template" type="xs:int">
<doc>The ID of the saved search.</doc>
                            </param>
                        </request>
                        <response>
                            <representation mediaType="application/json"/>
                        </response>
                        <ns4:rates>
                            <ns4:rate limit="15" scope="USER" unit="MINUTES" window="15"/>
                        </ns4:rates>
                        <ns2:categories>
                            <ns2:category>saved_searches</ns2:category>
                        </ns2:categories>
                        <ns3:api-versions>
                            <ns3:api-version>1.1</ns3:api-version>
                        </ns3:api-versions>
                        <ns3:see-also>
                            <ns3:see href="/docs/api/1.1/get/saved_searches/list">GET saved_searches/list</ns3:see>
                            <ns3:see href="/docs/api/1.1/post/saved_searches/destroy/%3Aid">POST saved_searches/destroy/:id</ns3:see>
                            <ns3:see href="/docs/api/1.1/post/saved_searches/create">POST saved_searches/create</ns3:see>
                            <ns3:see href="/docs/api/1.1/get/search/tweets">GET search/tweets</ns3:see>
                        </ns3:see-also>
                    </method>
                </resource>
            </resource>
            <resource path="/create">
                <method name="POST">
                    <doc>Create a new saved search for the authenticated user. A user may only have 25 saved searches.</doc>
                    <request>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="query" required="false" style="template" type="xs:string">
                            <doc>The query of the search the user would like to save.</doc>
                        </param>
                    </request>
                    <response>
                        <representation mediaType="application/json"/>
                    </response>
                    <ns2:categories>
                        <ns2:category>saved_searches</ns2:category>
                    </ns2:categories>
                    <ns3:api-versions>
                        <ns3:api-version>1.1</ns3:api-version>
                    </ns3:api-versions>
                    <ns3:see-also>
                        <ns3:see href="/docs/api/1.1/get/saved_searches/list">GET saved_searches/list</ns3:see>
                        <ns3:see href="/docs/api/1.1/get/saved_searches/show/%3Aid">GET saved_searches/show/:id</ns3:see>
                        <ns3:see href="/docs/api/1.1/post/saved_searches/destroy/%3Aid">POST saved_searches/destroy/:id</ns3:see>
                        <ns3:see href="/docs/api/1.1/get/search/tweets">GET search/tweets</ns3:see>
                    </ns3:see-also>
                </method>
            </resource>
            <resource path="/destroy">
                <resource path="/{id}">
                    <method name="POST">
                        <doc>Destroys a saved search for the authenticating user. The authenticating user must be the owner of saved search id being destroyed.</doc>
                        <request>
                            <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="id" required="false" style="template" type="xs:int">
<doc>The ID of the saved search.</doc>
                            </param>
                        </request>
                        <response>
                            <representation mediaType="application/json"/>
                        </response>
                        <ns2:categories>
                            <ns2:category>saved_searches</ns2:category>
                        </ns2:categories>
                        <ns3:api-versions>
                            <ns3:api-version>1.1</ns3:api-version>
                        </ns3:api-versions>
                        <ns3:see-also>
                            <ns3:see href="/docs/api/1.1/get/saved_searches/list">GET saved_searches/list</ns3:see>
                            <ns3:see href="/docs/api/1.1/get/saved_searches/show/%3Aid">GET saved_searches/show/:id</ns3:see>
                            <ns3:see href="/docs/api/1.1/post/saved_searches/create">POST saved_searches/create</ns3:see>
                        </ns3:see-also>
                    </method>
                </resource>
            </resource>
        </resource>
        <resource path="/oauth">
            <resource path="/authenticate">
                <method name="GET">
                    <doc>Allows a Consumer application to use an OAuth request_token to request user authorization.  This method is a replacement of Section 6.2 of the OAuth 1.0 authentication flow for applications using the callback authentication flow.</doc>
                    <request>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="force_login" required="false" style="query" type="xs:boolean">
                            <doc>Forces the user to enter their credentials to ensure the correct users account is authorized.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="screen_name" required="false" style="query" type="xs:string">
                            <doc>Prefills the username input box of the OAuth login screen with the given value.</doc>
                        </param>
                    </request>
                    <response/>
                    <ns3:api-versions>
                        <ns3:api-version>1</ns3:api-version>
                        <ns3:api-version>1.1</ns3:api-version>
                    </ns3:api-versions>
                    <ns3:see-also>
                        <ns3:see href="/docs/auth/oauth">OAuth</ns3:see>
                        <ns3:see href="/docs/auth">Authentication &amp;amp; Authorization</ns3:see>
                        <ns3:see href="/docs/api/1/get/oauth/authorize">GET oauth/authorize</ns3:see>
                        <ns3:see href="/docs/application-permission-model">The Application Permission Model</ns3:see>
                        <ns3:see href="/docs/api/1/post/oauth/request_token">POST oauth/request_token</ns3:see>
                    </ns3:see-also>
                </method>
            </resource>
            <resource path="/authorize">
                <method name="GET">
                    <doc>Allows a Consumer application to use an OAuth Request Token to request user authorization. This method fulfills Section 6.2 of the OAuth 1.0 authentication flow. Desktop applications must use this method (and cannot use GET oauth/authenticate). Please use HTTPS for this method, and all other OAuth token negotiation steps.</doc>
                    <request>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="force_login" required="false" style="query" type="xs:string">
                            <doc>Forces the user to enter their credentials to ensure the correct users account is authorized.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="screen_name" required="false" style="query" type="xs:string">
                            <doc>Prefills the username input box of the OAuth login screen with the given value.</doc>
                        </param>
                    </request>
                    <response/>
                    <ns3:api-versions>
                        <ns3:api-version>1</ns3:api-version>
                        <ns3:api-version>1.1</ns3:api-version>
                    </ns3:api-versions>
                    <ns3:see-also>
                        <ns3:see href="/docs/api/1/post/oauth/request_token">POST oauth/request_token</ns3:see>
                        <ns3:see href="/docs/api/1/post/oauth/access_token">POST oauth/access_token</ns3:see>
                        <ns3:see href="/docs/api/1/get/oauth/authenticate">GET oauth/authenticate</ns3:see>
                        <ns3:see href="/docs/auth">Authentication &amp;amp; Authorization</ns3:see>
                        <ns3:see href="/docs/auth/authorizing-request">Authorizing a request</ns3:see>
                    </ns3:see-also>
                </method>
            </resource>
            <resource path="/access_token">
                <method name="POST">
                    <doc>Allows a Consumer application to exchange the OAuth Request Token for an OAuth Access Token. This method fulfills Section 6.3 of the OAuth 1.0 authentication flow. The OAuth access token may also be used for xAuth operations. Please use HTTPS for this method, and all other OAuth token negotiation steps.</doc>
                    <request>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="x_auth_password" required="false" style="query" type="xs:string">
                            <doc>The password of the user for which to obtain a token for. &lt;strong&gt;Required when using xAuth&lt;/strong&gt;</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="x_auth_username" required="false" style="query" type="xs:string">
                            <doc>The username of the user to obtain a token for. &lt;strong&gt;Required when using xAuth&lt;/strong&gt;</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="x_auth_mode" required="false" style="query" type="xs:string">
                            <doc>Set this value to &lt;tt&gt;client_auth&lt;/tt&gt;, without the quotes. &lt;strong&gt;Required when using xAuth&lt;/strong&gt;</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="oauth_verifier" required="false" style="query" type="xs:string">
                            <doc>If using the OAuth web-flow, set this parameter to the value of the &lt;tt&gt;oauth_verifier&lt;/tt&gt; returned in the callback URL. If you are using out-of-band OAuth, set this value to the pin-code. When using xAuth, this value should not be included.</doc>
                        </param>
                    </request>
                    <response/>
                    <ns3:api-versions>
                        <ns3:api-version>1</ns3:api-version>
                        <ns3:api-version>1.1</ns3:api-version>
                    </ns3:api-versions>
                    <ns3:see-also>
                        <ns3:see href="/docs/auth">Authentication &amp;amp; Authorization</ns3:see>
                        <ns3:see href="/docs/api/1/post/oauth/request_token">POST oauth/request_token</ns3:see>
                        <ns3:see href="/docs/api/1/get/oauth/authorize">GET oauth/authorize</ns3:see>
                        <ns3:see href="/docs/oauth/xauth">xAuth</ns3:see>
                        <ns3:see href="/docs/api/1/get/oauth/authenticate">GET oauth/authenticate</ns3:see>
                        <ns3:see href="/docs/security/best-practices">Security Best Practices</ns3:see>
                        <ns3:see href="/docs/auth/obtaining-access-tokens">Obtaining access tokens</ns3:see>
                    </ns3:see-also>
                    <ns3:tags>
                        <ns3:tag>OAuth</ns3:tag>
                    </ns3:tags>
                </method>
            </resource>
            <resource path="/request_token">
                <method name="POST">
                    <doc>Allows a Consumer application to obtain an OAuth Request Token to request user authorization. This method fulfills Section 6.1 of the OAuth 1.0 authentication flow. It is strongly recommended you use HTTPS for all OAuth authorization steps. Usage Note: Only ASCII values are accepted for the oauth_nonce</doc>
                    <request>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="oauth_callback" required="false" style="template" type="xs:string">
                            <doc>For OAuth 1.0a compliance this parameter is &lt;strong&gt;required&lt;/strong&gt;. The value you specify here will be used as the URL a user is redirected to should they approve your application's access to their account. Set this to &lt;tt&gt;oob&lt;/tt&gt; for out-of-band pin mode. This is also how you specify custom callbacks for use in desktop/mobile applications.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="x_auth_access_type" required="false" style="query" type="xs:string">
                            <doc>Overrides the access level an application requests to a users account. Supported values are &lt;tt&gt;read&lt;/tt&gt; or &lt;tt&gt;write&lt;/tt&gt;. This parameter is intended to allow a developer to register a read/write application but also request read only access when appropriate.</doc>
                        </param>
                    </request>
                    <response/>
                    <ns3:api-versions>
                        <ns3:api-version>1</ns3:api-version>
                        <ns3:api-version>1.1</ns3:api-version>
                    </ns3:api-versions>
                    <ns3:see-also>
                        <ns3:see href="/docs/api/1/post/oauth/access_token">POST oauth/access_token</ns3:see>
                        <ns3:see href="/docs/api/1/get/oauth/authorize">GET oauth/authorize</ns3:see>
                        <ns3:see href="/docs/api/1/get/oauth/authenticate">GET oauth/authenticate</ns3:see>
                        <ns3:see href="/docs/auth/oauth">OAuth</ns3:see>
                        <ns3:see href="/docs/security/best-practices">Security Best Practices</ns3:see>
                        <ns3:see href="/docs/auth">Authentication &amp;amp; Authorization</ns3:see>
                    </ns3:see-also>
                    <ns3:tags>
                        <ns3:tag>OAuth</ns3:tag>
                    </ns3:tags>
                </method>
            </resource>
        </resource>
        <resource path="/user"/>
        <resource path="/search">
            <resource path="/tweets">
                <method name="GET">
                    <doc>Returns relevant tweets that match a specified query.</doc>
                    <request>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="q" required="false" style="template" type="xs:string">
                            <doc>A UTF-8, URL-encoded search query of 1,000 characters maximum, including operators.  Queries may additionally be limited by complexity.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="geocode" required="false" style="query" type="xs:string">
                            <doc>Returns tweets by users located within a given radius of the given latitude/longitude. The location is preferentially taking from the Geotagging API, but will fall back to their Twitter profile. The parameter value is specified by "&lt;tt&gt;latitude,longitude,radius&lt;/tt&gt;", where radius units must be specified as either "&lt;tt&gt;mi&lt;/tt&gt;" (miles) or "&lt;tt&gt;km&lt;/tt&gt;" (kilometers). Note that you cannot use the near operator via the API to geocode arbitrary locations; however you can use this &lt;tt&gt;geocode&lt;/tt&gt; parameter to search near geocodes directly. A maximum of 1,000 distinct "sub-regions" will be considered when using the radius modifier.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="lang" required="false" style="query" type="xs:string">
                            <doc>Restricts tweets to the given language, given by an &lt;a href="http://en.wikipedia.org/wiki/List_of_ISO_639-1_codes"&gt;ISO 639-1&lt;/a&gt; code. Language detection is best-effort.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="locale" required="false" style="query" type="xs:string">
                            <doc>Specify the language of the query you are sending (only &lt;tt&gt;ja&lt;/tt&gt; is currently effective). This is intended for language-specific consumers and the default should work in the majority of cases.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="result_type" required="false" style="query" type="xs:string">
                            <doc>Optional. Specifies what type of search results you would prefer to receive. The current default is "mixed." Valid values include:&lt;br/&gt;&#13;
&amp;nbsp;&amp;nbsp;* &lt;tt&gt;mixed&lt;/tt&gt;: Include both popular and real time results in the response.&lt;br/&gt;&#13;
&amp;nbsp;&amp;nbsp;* &lt;tt&gt;recent&lt;/tt&gt;: return only the most recent results in the response&lt;br/&gt;&#13;
&amp;nbsp;&amp;nbsp;* &lt;tt&gt;popular&lt;/tt&gt;: return only the most popular results in the response.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="count" required="false" style="query" type="xs:int">
                            <doc>The number of tweets to return per page, up to a maximum of 100. Defaults to 15. This was formerly the "rpp" parameter in the old Search API.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="until" required="false" style="query" type="xs:string">
                            <doc>Returns tweets generated before the given date. Date should be formatted as YYYY-MM-DD. Keep in mind that the search index may not go back as far as the date you specify here.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="since_id" required="false" style="query" type="xs:int">
                            <doc>Returns results with an ID greater than (that is, more recent than) the specified ID. There are limits to the number of Tweets which can be accessed through the API. If the limit of Tweets has occured since the since_id, the since_id will be forced to the oldest ID available.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="max_id" required="false" style="query" type="xs:int">
                            <doc>Returns results with an ID less than (that is, older than) or equal to the specified ID.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="include_entities" required="false" style="query" type="xs:boolean">
                            <doc>The &lt;tt&gt;entities&lt;/tt&gt; node will be disincluded when set to &lt;tt&gt;false&lt;/tt&gt;.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="callback" required="false" style="query" type="xs:string">
                            <doc>If supplied, the response will use the JSONP format with a callback of the given name. The usefulness of this parameter is somewhat diminished by the requirement of authentication for requests to this endpoint.</doc>
                        </param>
                    </request>
                    <response>
                        <representation element="ns1:tweets" mediaType="application/json"/>
                    </response>
                    <ns4:rates>
                        <ns4:rate limit="180" scope="USER" unit="MINUTES" window="15"/>
                        <ns4:rate limit="450" scope="APPLICATION" unit="MINUTES" window="15"/>
                    </ns4:rates>
                    <ns2:categories>
                        <ns2:category>search</ns2:category>
                    </ns2:categories>
                    <ns3:api-versions>
                        <ns3:api-version>1.1</ns3:api-version>
                    </ns3:api-versions>
                    <ns3:see-also>
                        <ns3:see href="/docs/api/1.1/get/users/search">GET users/search</ns3:see>
                        <ns3:see href="/docs/using-search">Using the Twitter Search API</ns3:see>
                        <ns3:see href="/docs/api/1.1/get/geo/search">GET geo/search</ns3:see>
                        <ns3:see href="/docs/finding-tweets-about-places">Finding Tweets about Places</ns3:see>
                    </ns3:see-also>
                    <ns3:tags>
                        <ns3:tag>Search</ns3:tag>
                        <ns3:tag>finding tweets</ns3:tag>
                    </ns3:tags>
                </method>
            </resource>
        </resource>
        <resource path="/geo">
            <resource path="/id">
                <resource path="/{place_id}">
                    <method name="GET">
                        <doc>Returns all the information about a known place.</doc>
                        <request>
                            <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="place_id" required="false" style="template" type="xs:string">
<doc>A place in the world. These IDs can be retrieved from geo/reverse_geocode.</doc>
                            </param>
                        </request>
                        <response>
                            <representation element="ns1:places" mediaType="application/json"/>
                        </response>
                        <ns4:rates>
                            <ns4:rate limit="15" scope="USER" unit="MINUTES" window="15"/>
                        </ns4:rates>
                        <ns2:categories>
                            <ns2:category>geo</ns2:category>
                        </ns2:categories>
                        <ns3:api-versions>
                            <ns3:api-version>1.1</ns3:api-version>
                        </ns3:api-versions>
                        <ns3:see-also>
                            <ns3:see href="/docs/api/1.1/post/geo/place">POST geo/place</ns3:see>
                            <ns3:see href="/docs/api/1.1/get/geo/similar_places">GET geo/similar_places</ns3:see>
                            <ns3:see href="/docs/finding-tweets-about-places">Finding Tweets about Places</ns3:see>
                            <ns3:see href="/docs/about-geo-place-attributes">About Geo Place Attributes</ns3:see>
                        </ns3:see-also>
                    </method>
                </resource>
            </resource>
            <resource path="/reverse_geocode">
                <method name="GET">
                    <doc>Given a latitude and a longitude, searches for up to 20 places that can be used as a place_id when updating a status. This request is an informative call and will deliver generalized results about geography.</doc>
                    <request>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="lat" required="false" style="template" type="xs:string">
                            <doc>The latitude to search around. This parameter will be ignored unless it is inside the range -90.0 to +90.0 (North is positive) inclusive. It will also be ignored if there isn't a corresponding &lt;tt&gt;long&lt;/tt&gt; parameter.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="long" required="false" style="template" type="xs:string">
                            <doc>The longitude to search around. The valid ranges for longitude is -180.0 to +180.0 (East is positive) inclusive. This parameter will be ignored if outside that range, if it is not a number, if &lt;tt&gt;geo_enabled&lt;/tt&gt; is disabled, or if there not a corresponding &lt;tt&gt;lat&lt;/tt&gt; parameter.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="accuracy" required="false" style="query" type="xs:string">
                            <doc>A hint on the "region" in which to search. If a number, then this is a radius in meters, but it can also take a string that is suffixed with ft to specify feet. If this is not passed in, then it is assumed to be &lt;tt&gt;0m&lt;/tt&gt;. If coming from a device, in practice, this value is whatever accuracy the device has measuring its location (whether it be coming from a GPS, WiFi triangulation, etc.).</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="granularity" required="false" style="query" type="xs:string">
                            <doc>This is the minimal granularity of place types to return and must be one of: &lt;tt&gt;poi&lt;/tt&gt;, &lt;tt&gt;neighborhood&lt;/tt&gt;, &lt;tt&gt;city&lt;/tt&gt;, &lt;tt&gt;admin&lt;/tt&gt; or &lt;tt&gt;country&lt;/tt&gt;. If no granularity is provided for the request &lt;tt&gt;neighborhood&lt;/tt&gt; is assumed.&lt;br /&gt; Setting this to &lt;tt&gt;city&lt;/tt&gt;, for example, will find places which have a type of &lt;tt&gt;city&lt;/tt&gt;, &lt;tt&gt;admin&lt;/tt&gt; or &lt;tt&gt;country&lt;/tt&gt;.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="max_results" required="false" style="query" type="xs:int">
                            <doc>A hint as to the number of results to return. This does not guarantee that the number of results returned will equal max_results, but instead informs how many "nearby" results to return. Ideally, only pass in the number of places you intend to display to the user here.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="callback" required="false" style="query" type="xs:string">
                            <doc>If supplied, the response will use the JSONP format with a callback of the given name.</doc>
                        </param>
                    </request>
                    <response>
                        <representation element="ns1:places" mediaType="application/json"/>
                    </response>
                    <ns4:rates>
                        <ns4:rate limit="15" scope="USER" unit="MINUTES" window="15"/>
                    </ns4:rates>
                    <ns2:categories>
                        <ns2:category>geo</ns2:category>
                    </ns2:categories>
                    <ns3:api-versions>
                        <ns3:api-version>1.1</ns3:api-version>
                    </ns3:api-versions>
                    <ns3:see-also>
                        <ns3:see href="/docs/api/1.1/get/geo/id/%3Aplace_id">GET geo/id/:place_id</ns3:see>
                        <ns3:see href="/docs/api/1.1/get/geo/search">GET geo/search</ns3:see>
                        <ns3:see href="/docs/api/1.1/get/geo/similar_places">GET geo/similar_places</ns3:see>
                        <ns3:see href="/docs/finding-tweets-about-places">Finding Tweets about Places</ns3:see>
                        <ns3:see href="/docs/about-geo-place-attributes">About Geo Place Attributes</ns3:see>
                    </ns3:see-also>
                </method>
            </resource>
            <resource path="/search">
                <method name="GET">
                    <doc>Search for places that can be attached to a statuses/update. Given a latitude and a longitude pair, an IP address, or a name, this request will return a list of all the valid places that can be used as the place_id when updating a status.</doc>
                    <request>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="lat" required="false" style="query" type="xs:string">
                            <doc>The latitude to search around. This parameter will be ignored unless it is inside the range -90.0 to +90.0 (North is positive) inclusive. It will also be ignored if there isn't a corresponding &lt;tt&gt;long&lt;/tt&gt; parameter.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="long" required="false" style="query" type="xs:string">
                            <doc>The longitude to search around. The valid ranges for longitude is -180.0 to +180.0 (East is positive) inclusive. This parameter will be ignored if outside that range, if it is not a number, if &lt;tt&gt;geo_enabled&lt;/tt&gt; is disabled, or if there not a corresponding &lt;tt&gt;lat&lt;/tt&gt; parameter.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="query" required="false" style="query" type="xs:string">
                            <doc>Free-form text to match against while executing a geo-based query, best suited for finding nearby locations by name. Remember to URL encode the query.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="ip" required="false" style="query" type="xs:string">
                            <doc>An IP address. Used when attempting to fix geolocation based off of the user's IP address.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="granularity" required="false" style="query" type="xs:string">
                            <doc>This is the minimal granularity of place types to return and must be one of: &lt;tt&gt;poi&lt;/tt&gt;, &lt;tt&gt;neighborhood&lt;/tt&gt;, &lt;tt&gt;city&lt;/tt&gt;, &lt;tt&gt;admin&lt;/tt&gt; or &lt;tt&gt;country&lt;/tt&gt;. If no granularity is provided for the request &lt;tt&gt;neighborhood&lt;/tt&gt; is assumed.&lt;br /&gt; Setting this to &lt;tt&gt;city&lt;/tt&gt;, for example, will find places which have a type of &lt;tt&gt;city&lt;/tt&gt;, &lt;tt&gt;admin&lt;/tt&gt; or &lt;tt&gt;country&lt;/tt&gt;.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="accuracy" required="false" style="query" type="xs:string">
                            <doc>A hint on the "region" in which to search. If a number, then this is a radius in meters, but it can also take a string that is suffixed with ft to specify feet. If this is not passed in, then it is assumed to be &lt;tt&gt;0m&lt;/tt&gt;. If coming from a device, in practice, this value is whatever accuracy the device has measuring its location (whether it be coming from a GPS, WiFi triangulation, etc.).</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="max_results" required="false" style="query" type="xs:int">
                            <doc>A hint as to the number of results to return. This does not guarantee that the number of results returned will equal max_results, but instead informs how many "nearby" results to return. Ideally, only pass in the number of places you intend to display to the user here.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="contained_within" required="false" style="query" type="xs:string">
                            <doc>This is the &lt;tt&gt;place_id&lt;/tt&gt; which you would like to restrict the search results to. Setting this value means only places within the given &lt;tt&gt;place_id&lt;/tt&gt; will be found.&lt;br /&gt;&lt;br /&gt; Specify a place_id. For example, to scope all results to places within "San Francisco, CA USA", you would specify a &lt;tt&gt;place_id&lt;/tt&gt; of "5a110d312052166f"</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="attribute:street_address" required="false" style="query" type="xs:string">
                            <doc>This parameter searches for places which have this given street address. There are other well-known, and application specific attributes available. Custom attributes are also permitted. Learn more about &lt;a href="https://dev.twitter.com/docs/about-geo-place-attributes"&gt;Place Attributes&lt;/a&gt;.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="callback" required="false" style="query" type="xs:string">
                            <doc>If supplied, the response will use the JSONP format with a callback of the given name.</doc>
                        </param>
                    </request>
                    <response>
                        <representation element="ns1:places" mediaType="application/json"/>
                    </response>
                    <ns4:rates>
                        <ns4:rate limit="15" scope="USER" unit="MINUTES" window="15"/>
                    </ns4:rates>
                    <ns2:categories>
                        <ns2:category>geo</ns2:category>
                    </ns2:categories>
                    <ns3:api-versions>
                        <ns3:api-version>1.1</ns3:api-version>
                    </ns3:api-versions>
                    <ns3:see-also>
                        <ns3:see href="/docs/api/1.1/get/geo/id/%3Aplace_id">GET geo/id/:place_id</ns3:see>
                        <ns3:see href="/docs/api/1.1/get/geo/reverse_geocode">GET geo/reverse_geocode</ns3:see>
                        <ns3:see href="/docs/finding-tweets-about-places">Finding Tweets about Places</ns3:see>
                        <ns3:see href="/docs/about-geo-place-attributes">About Geo Place Attributes</ns3:see>
                    </ns3:see-also>
                </method>
            </resource>
            <resource path="/similar_places">
                <method name="GET">
                    <doc>Locates places near the given coordinates which are similar in name.</doc>
                    <request>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="lat" required="false" style="template" type="xs:string">
                            <doc>The latitude to search around. This parameter will be ignored unless it is inside the range -90.0 to +90.0 (North is positive) inclusive. It will also be ignored if there isn't a corresponding &lt;tt&gt;long&lt;/tt&gt; parameter.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="long" required="false" style="template" type="xs:string">
                            <doc>The longitude to search around. The valid ranges for longitude is -180.0 to +180.0 (East is positive) inclusive. This parameter will be ignored if outside that range, if it is not a number, if &lt;tt&gt;geo_enabled&lt;/tt&gt; is disabled, or if there not a corresponding &lt;tt&gt;lat&lt;/tt&gt; parameter.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="name" required="false" style="template" type="xs:string">
                            <doc>The name a place is known as.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="contained_within" required="false" style="query" type="xs:string">
                            <doc>This is the &lt;tt&gt;place_id&lt;/tt&gt; which you would like to restrict the search results to. Setting this value means only places within the given &lt;tt&gt;place_id&lt;/tt&gt; will be found.&lt;br /&gt;&lt;br /&gt; Specify a place_id. For example, to scope all results to places within "San Francisco, CA USA", you would specify a &lt;tt&gt;place_id&lt;/tt&gt; of "5a110d312052166f"</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="attribute:street_address" required="false" style="query" type="xs:string">
                            <doc>This parameter searches for places which have this given street address. There are other well-known, and application specific attributes available. Custom attributes are also permitted. Learn more about &lt;a href="https://dev.twitter.com/docs/about-geo-place-attributes"&gt;Place Attributes&lt;/a&gt;.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="callback" required="false" style="query" type="xs:string">
                            <doc>If supplied, the response will use the JSONP format with a callback of the given name.</doc>
                        </param>
                    </request>
                    <response>
                        <representation element="ns1:places" mediaType="application/json"/>
                    </response>
                    <ns4:rates>
                        <ns4:rate limit="15" scope="USER" unit="MINUTES" window="15"/>
                    </ns4:rates>
                    <ns2:categories>
                        <ns2:category>geo</ns2:category>
                    </ns2:categories>
                    <ns3:api-versions>
                        <ns3:api-version>1.1</ns3:api-version>
                    </ns3:api-versions>
                    <ns3:see-also>
                        <ns3:see href="/docs/finding-tweets-about-places">Finding Tweets about Places</ns3:see>
                        <ns3:see href="/docs/api/1.1/get/geo/id/%3Aplace_id">GET geo/id/:place_id</ns3:see>
                        <ns3:see href="/docs/api/1.1/get/geo/search">GET geo/search</ns3:see>
                        <ns3:see href="/docs/api/1.1/post/geo/place">POST geo/place</ns3:see>
                        <ns3:see href="/docs/about-geo-place-attributes">About Geo Place Attributes</ns3:see>
                    </ns3:see-also>
                    <ns3:tags>
                        <ns3:tag>Places &amp;amp; Geo</ns3:tag>
                    </ns3:tags>
                </method>
            </resource>
            <resource path="/place">
                <method name="POST">
                    <doc>As of December 2nd, 2013, this endpoint is deprecated and retired and no longer functions. Place creation was used infrequently by third party applications and is generally no longer supported on Twitter. Requests will return with status 410 (Gone) with error code 251.</doc>
                    <request>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="name" required="false" style="template" type="xs:string">
                            <doc>The name a place is known as.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="contained_within" required="false" style="template" type="xs:string">
                            <doc>The &lt;tt&gt;place_id&lt;/tt&gt; within which the new place can be found. Try and be as close as possible with the containing place. For example, for a room in a building, set the &lt;tt&gt;contained_within&lt;/tt&gt; as the building &lt;tt&gt;place_id&lt;/tt&gt;.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="token" required="false" style="template" type="xs:string">
                            <doc>The token found in the response from geo/similar_places.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="lat" required="false" style="template" type="xs:string">
                            <doc>The latitude the place is located at. This parameter will be ignored unless it is inside the range -90.0 to +90.0 (North is positive) inclusive. It will also be ignored if there isn't a corresponding &lt;tt&gt;long&lt;/tt&gt; parameter.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="long" required="false" style="template" type="xs:string">
                            <doc>The longitude the place is located at. The valid ranges for longitude is -180.0 to +180.0 (East is positive) inclusive. This parameter will be ignored if outside that range, if it is not a number, if &lt;tt&gt;geo_enabled&lt;/tt&gt; is disabled, or if there not a corresponding &lt;tt&gt;lat&lt;/tt&gt; parameter.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="attribute:street_address" required="false" style="query" type="xs:string">
                            <doc>This parameter searches for places which have this given street address. There are other well-known, and application specific attributes available. Custom attributes are also permitted. Learn more &lt;a href="https://dev.twitter.com/docs/about-geo-place-attributes"&gt;About Geo Place Attributes&lt;/a&gt;.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="callback" required="false" style="query" type="xs:string">
                            <doc>If supplied, the response will use the JSONP format with a callback of the given name.</doc>
                        </param>
                    </request>
                    <response>
                        <representation element="ns1:places" mediaType="application/json"/>
                    </response>
                    <ns2:categories>
                        <ns2:category>geo</ns2:category>
                    </ns2:categories>
                    <ns3:api-versions>
                        <ns3:api-version>1.1</ns3:api-version>
                    </ns3:api-versions>
                    <ns3:see-also>
                        <ns3:see href="/docs/api/1.1/get/geo/similar_places">GET geo/similar_places</ns3:see>
                        <ns3:see href="/docs/api/1.1/get/geo/search">GET geo/search</ns3:see>
                        <ns3:see href="/docs/finding-tweets-about-places">Finding Tweets about Places</ns3:see>
                        <ns3:see href="/docs/about-geo-place-attributes">About Geo Place Attributes</ns3:see>
                    </ns3:see-also>
                </method>
            </resource>
        </resource>
        <resource path="/lists">
            <resource path="/list">
                <method name="GET">
                    <doc>Returns all lists the authenticating or specified user subscribes to, including their own. The user is specified using the user_id or screen_name parameters. If no user is given, the authenticating user is used.  This method used to be GET lists in version 1.0 of the API and has been renamed for consistency with other call.</doc>
                    <request>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="user_id" required="false" style="query" type="xs:int">
                            <doc>The ID of the user for whom to return results for. Helpful for disambiguating when a valid user ID is also a valid screen name.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="screen_name" required="false" style="query" type="xs:string">
                            <doc>The screen name of the user for whom to return results for. Helpful for disambiguating when a valid screen name is also a user ID.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="reverse" required="false" style="query" type="xs:boolean">
                            <doc>Set this to &lt;tt&gt;true&lt;/tt&gt; if you would like owned lists to be returned first.  See description above for information on how this parameter works.</doc>
                        </param>
                    </request>
                    <response>
                        <representation mediaType="application/json"/>
                    </response>
                    <ns4:rates>
                        <ns4:rate limit="15" scope="USER" unit="MINUTES" window="15"/>
                        <ns4:rate limit="15" scope="APPLICATION" unit="MINUTES" window="15"/>
                    </ns4:rates>
                    <ns2:categories>
                        <ns2:category>lists</ns2:category>
                    </ns2:categories>
                    <ns3:api-versions>
                        <ns3:api-version>1.1</ns3:api-version>
                    </ns3:api-versions>
                    <ns3:see-also>
                        <ns3:see href="/docs/api/get-userlistsmemberships">GET :user/lists/memberships</ns3:see>
                        <ns3:see href="/docs/api/get-userlistssubscriptions">GET :user/lists/subscriptions</ns3:see>
                    </ns3:see-also>
                </method>
            </resource>
            <resource path="/members">
                <method name="GET">
                    <doc>Returns the members of the specified list. Private list members will only be shown if the authenticated user owns the specified list.</doc>
                    <request>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="list_id" required="false" style="template" type="xs:string">
                            <doc>The numerical &lt;tt&gt;id&lt;/tt&gt; of the list.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="slug" required="false" style="template" type="xs:string">
                            <doc>You can identify a list by its slug instead of its numerical id. If you decide to do so, note that you'll also have to specify the list owner using the &lt;tt&gt;owner_id&lt;/tt&gt; or &lt;tt&gt;owner_screen_name&lt;/tt&gt; parameters.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="owner_screen_name" required="false" style="query" type="xs:string">
                            <doc>The screen name of the user who owns the list being requested by a &lt;tt&gt;slug&lt;/tt&gt;.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="owner_id" required="false" style="query" type="xs:string">
                            <doc>The user ID of the user who owns the list being requested by a &lt;tt&gt;slug&lt;/tt&gt;.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="cursor" style="query" type="xs:string">
                            <doc>Causes the collection of list members to be broken into "pages" of somewhat consistent size. If no cursor is provided, a value of &lt;tt&gt;-1&lt;/tt&gt; will be assumed, which is the first "page."&lt;br /&gt;&lt;br /&gt; &#13;
The response from the API will include a &lt;tt&gt;previous_cursor&lt;/tt&gt; and &lt;tt&gt;next_cursor&lt;/tt&gt; to allow paging back and forth. See &lt;a href="https://dev.twitter.com/docs/misc/cursoring"&gt;Using cursors to navigate collections&lt;/a&gt; for more information.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="include_entities" required="false" style="query" type="xs:boolean">
                            <doc>The &lt;tt&gt;entities&lt;/tt&gt; node will be disincluded when set to &lt;tt&gt;false&lt;/tt&gt;.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="skip_status" required="false" style="query" type="xs:string">
                            <doc>When set to either &lt;tt&gt;true&lt;/tt&gt;, &lt;tt&gt;t&lt;/tt&gt; or &lt;tt&gt;1&lt;/tt&gt; statuses will not be included in the returned user objects.</doc>
                        </param>
                    </request>
                    <response>
                        <representation element="ns1:users" mediaType="application/json"/>
                    </response>
                    <ns4:rates>
                        <ns4:rate limit="180" scope="USER" unit="MINUTES" window="15"/>
                        <ns4:rate limit="15" scope="APPLICATION" unit="MINUTES" window="15"/>
                    </ns4:rates>
                    <ns2:categories>
                        <ns2:category>lists</ns2:category>
                    </ns2:categories>
                    <ns3:api-versions>
                        <ns3:api-version>1.1</ns3:api-version>
                    </ns3:api-versions>
                    <ns3:see-also>
                        <ns3:see href="/docs/api/1.1/get/lists/members/show">GET lists/members/show</ns3:see>
                    </ns3:see-also>
                </method>
                <resource path="/show">
                    <method name="GET">
                        <doc>Check if the specified user is a member of the specified list.</doc>
                        <request>
                            <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="list_id" required="false" style="template" type="xs:string">
<doc>The numerical &lt;tt&gt;id&lt;/tt&gt; of the list.</doc>
                            </param>
                            <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="slug" required="false" style="template" type="xs:string">
<doc>You can identify a list by its slug instead of its numerical id. If you decide to do so, note that you'll also have to specify the list owner using the &lt;tt&gt;owner_id&lt;/tt&gt; or &lt;tt&gt;owner_screen_name&lt;/tt&gt; parameters.</doc>
                            </param>
                            <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="user_id" required="false" style="template" type="xs:string">
<doc>The ID of the user for whom to return results for. Helpful for disambiguating when a valid user ID is also a valid screen name.</doc>
                            </param>
                            <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="screen_name" required="false" style="template" type="xs:string">
<doc>The screen name of the user for whom to return results for. Helpful for disambiguating when a valid screen name is also a user ID.</doc>
                            </param>
                            <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="owner_screen_name" required="false" style="query" type="xs:string">
<doc>The screen name of the user who owns the list being requested by a &lt;tt&gt;slug&lt;/tt&gt;.</doc>
                            </param>
                            <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="owner_id" required="false" style="query" type="xs:string">
<doc>The user ID of the user who owns the list being requested by a &lt;tt&gt;slug&lt;/tt&gt;.</doc>
                            </param>
                            <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="include_entities" required="false" style="query" type="xs:string">
<doc>When set to either &lt;tt&gt;true&lt;/tt&gt;, &lt;tt&gt;t&lt;/tt&gt; or &lt;tt&gt;1&lt;/tt&gt;, each tweet will include a node called "entities". This node offers a variety of metadata about the tweet in a discreet structure, including: user_mentions, urls, and hashtags. While entities are opt-in on timelines at present, they will be made a default component of output in the future. See &lt;strong&gt;&lt;u&gt;&lt;a href="/pages/tweet_entities"&gt;Tweet Entities&lt;/a&gt;&lt;/u&gt;&lt;/strong&gt; for more details.</doc>
                            </param>
                            <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="skip_status" required="false" style="query" type="xs:string">
<doc>When set to either &lt;tt&gt;true&lt;/tt&gt;, &lt;tt&gt;t&lt;/tt&gt; or &lt;tt&gt;1&lt;/tt&gt; statuses will not be included in the returned user objects.</doc>
                            </param>
                        </request>
                        <response>
                            <representation element="ns1:users" mediaType="application/json"/>
                        </response>
                        <ns4:rates>
                            <ns4:rate limit="15" scope="USER" unit="MINUTES" window="15"/>
                            <ns4:rate limit="15" scope="APPLICATION" unit="MINUTES" window="15"/>
                        </ns4:rates>
                        <ns2:categories>
                            <ns2:category>lists</ns2:category>
                        </ns2:categories>
                        <ns3:api-versions>
                            <ns3:api-version>1.1</ns3:api-version>
                        </ns3:api-versions>
                        <ns3:see-also>
                            <ns3:see href="/docs/api/1/get/lists/subscribers">GET lists/subscribers</ns3:see>
                            <ns3:see href="/docs/api/1/get/lists/subscribers/show">GET lists/subscribers/show</ns3:see>
                        </ns3:see-also>
                    </method>
                </resource>
                <resource path="/create">
                    <method name="POST">
                        <doc>Add a member to a list. The authenticated user must own the list to be able to add members to it. Note that lists can&amp;#039;t have more than 500 members.</doc>
                        <request>
                            <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="list_id" required="false" style="template" type="xs:string">
<doc>The numerical &lt;tt&gt;id&lt;/tt&gt; of the list.</doc>
                            </param>
                            <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="slug" required="false" style="template" type="xs:string">
<doc>You can identify a list by its slug instead of its numerical id. If you decide to do so, note that you'll also have to specify the list owner using the &lt;tt&gt;owner_id&lt;/tt&gt; or &lt;tt&gt;owner_screen_name&lt;/tt&gt; parameters.</doc>
                            </param>
                            <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="user_id" required="false" style="template" type="xs:string">
<doc>The ID of the user for whom to return results for. Helpful for disambiguating when a valid user ID is also a valid screen name.</doc>
                            </param>
                            <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="screen_name" required="false" style="template" type="xs:string">
<doc>The screen name of the user for whom to return results for. Helpful for disambiguating when a valid screen name is also a user ID.</doc>
                            </param>
                            <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="owner_screen_name" required="false" style="query" type="xs:string">
<doc>The screen name of the user who owns the list being requested by a &lt;tt&gt;slug&lt;/tt&gt;.</doc>
                            </param>
                            <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="owner_id" required="false" style="query" type="xs:string">
<doc>The user ID of the user who owns the list being requested by a &lt;tt&gt;slug&lt;/tt&gt;.</doc>
                            </param>
                        </request>
                        <response>
                            <representation element="ns1:users" mediaType="application/json"/>
                        </response>
                        <ns2:categories>
                            <ns2:category>lists</ns2:category>
                        </ns2:categories>
                        <ns3:api-versions>
                            <ns3:api-version>1.1</ns3:api-version>
                        </ns3:api-versions>
                        <ns3:see-also>
                            <ns3:see href="/docs/api/1/post/lists/members/create_all">POST lists/members/create_all</ns3:see>
                        </ns3:see-also>
                    </method>
                </resource>
                <resource path="/create_all">
                    <method name="POST">
                        <doc>Adds multiple members to a list, by specifying a comma-separated list of member ids or screen names. The authenticated user must own the list to be able to add members to it. Note that lists can&amp;#039;t have more than 5,000 members, and you are limited to adding up to 100 members to a list at a time with this method.</doc>
                        <request>
                            <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="list_id" required="false" style="template" type="xs:string">
<doc>The numerical &lt;tt&gt;id&lt;/tt&gt; of the list.</doc>
                            </param>
                            <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="slug" required="false" style="template" type="xs:string">
<doc>You can identify a list by its slug instead of its numerical id. If you decide to do so, note that you'll also have to specify the list owner using the &lt;tt&gt;owner_id&lt;/tt&gt; or &lt;tt&gt;owner_screen_name&lt;/tt&gt; parameters.</doc>
                            </param>
                            <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="user_id" required="false" style="query" type="xs:string">
<doc>A comma separated list of user IDs, up to 100 are allowed in a single request.</doc>
                            </param>
                            <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="screen_name" required="false" style="query" type="xs:string">
<doc>A comma separated list of screen names, up to 100 are allowed in a single request.</doc>
                            </param>
                            <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="owner_screen_name" required="false" style="query" type="xs:string">
<doc>The screen name of the user who owns the list being requested by a &lt;tt&gt;slug&lt;/tt&gt;.</doc>
                            </param>
                            <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="owner_id" required="false" style="query" type="xs:string">
<doc>The user ID of the user who owns the list being requested by a &lt;tt&gt;slug&lt;/tt&gt;.</doc>
                            </param>
                        </request>
                        <response>
                            <representation element="ns1:users" mediaType="application/json"/>
                        </response>
                        <ns2:categories>
                            <ns2:category>lists</ns2:category>
                        </ns2:categories>
                        <ns3:api-versions>
                            <ns3:api-version>1.1</ns3:api-version>
                        </ns3:api-versions>
                        <ns3:see-also>
                            <ns3:see href="/docs/api/1/post/lists/members/destroy">POST lists/members/destroy</ns3:see>
                            <ns3:see href="/docs/api/1/get/lists/memberships">GET lists/memberships</ns3:see>
                            <ns3:see href="/docs/api/1/post/lists/members/destroy_all">POST lists/members/destroy_all</ns3:see>
                        </ns3:see-also>
                    </method>
                </resource>
                <resource path="/destroy">
                    <method name="POST">
                        <doc>Removes the specified member from the list. The authenticated user must be the list&amp;#039;s owner to remove members from the list.</doc>
                        <request>
                            <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="list_id" required="false" style="query" type="xs:string">
<doc>The numerical &lt;tt&gt;id&lt;/tt&gt; of the list.</doc>
                            </param>
                            <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="slug" required="false" style="query" type="xs:string">
<doc>You can identify a list by its slug instead of its numerical id. If you decide to do so, note that you'll also have to specify the list owner using the &lt;tt&gt;owner_id&lt;/tt&gt; or &lt;tt&gt;owner_screen_name&lt;/tt&gt; parameters.</doc>
                            </param>
                            <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="user_id" required="false" style="query" type="xs:string">
<doc>The ID of the user to remove from the list. Helpful for disambiguating when a valid user ID is also a valid screen name.</doc>
                            </param>
                            <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="screen_name" required="false" style="query" type="xs:string">
<doc>The screen name of the user for whom to remove from the list. Helpful for disambiguating when a valid screen name is also a user ID.</doc>
                            </param>
                            <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="owner_screen_name" required="false" style="query" type="xs:string">
<doc>The screen name of the user who owns the list being requested by a &lt;tt&gt;slug&lt;/tt&gt;.</doc>
                            </param>
                            <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="owner_id" required="false" style="query" type="xs:string">
<doc>The user ID of the user who owns the list being requested by a &lt;tt&gt;slug&lt;/tt&gt;.</doc>
                            </param>
                        </request>
                        <response>
                            <representation mediaType="application/json"/>
                        </response>
                        <ns2:categories>
                            <ns2:category>lists</ns2:category>
                        </ns2:categories>
                        <ns3:api-versions>
                            <ns3:api-version>1.1</ns3:api-version>
                        </ns3:api-versions>
                    </method>
                </resource>
                <resource path="/destroy_all">
                    <method name="POST">
                        <doc>Removes multiple members from a list, by specifying a comma-separated list of member ids or screen names. The authenticated user must own the list to be able to remove members from it. Note that lists can&amp;#039;t have more than 500 members, and you are limited to removing up to 100 members to a list at a time with this method.</doc>
                        <request>
                            <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="list_id" required="false" style="template" type="xs:string">
<doc>The numerical &lt;tt&gt;id&lt;/tt&gt; of the list.</doc>
                            </param>
                            <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="slug" required="false" style="template" type="xs:string">
<doc>You can identify a list by its slug instead of its numerical id. If you decide to do so, note that you'll also have to specify the list owner using the &lt;tt&gt;owner_id&lt;/tt&gt; or &lt;tt&gt;owner_screen_name&lt;/tt&gt; parameters.</doc>
                            </param>
                            <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="user_id" required="false" style="query" type="xs:string">
<doc>A comma separated list of user IDs, up to 100 are allowed in a single request.</doc>
                            </param>
                            <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="screen_name" required="false" style="query" type="xs:string">
<doc>A comma separated list of screen names, up to 100 are allowed in a single request.</doc>
                            </param>
                            <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="owner_screen_name" required="false" style="query" type="xs:string">
<doc>The screen name of the user who owns the list being requested by a &lt;tt&gt;slug&lt;/tt&gt;.</doc>
                            </param>
                            <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="owner_id" required="false" style="query" type="xs:string">
<doc>The user ID of the user who owns the list being requested by a &lt;tt&gt;slug&lt;/tt&gt;.</doc>
                            </param>
                        </request>
                        <response>
                            <representation mediaType="application/json"/>
                        </response>
                        <ns2:categories>
                            <ns2:category>lists</ns2:category>
                        </ns2:categories>
                        <ns3:api-versions>
                            <ns3:api-version>1.1</ns3:api-version>
                        </ns3:api-versions>
                        <ns3:see-also>
                            <ns3:see href="/docs/api/1/post/lists/members/create_all">POST lists/members/create_all</ns3:see>
                            <ns3:see href="/docs/api/1/post/lists/members/destroy">POST lists/members/destroy</ns3:see>
                        </ns3:see-also>
                        <ns3:tags>
                            <ns3:tag>List Members</ns3:tag>
                            <ns3:tag>list management</ns3:tag>
                        </ns3:tags>
                    </method>
                </resource>
            </resource>
            <resource path="/memberships">
                <method name="GET">
                    <doc>Returns the lists the specified user has been added to. If user_id or screen_name are not provided the memberships for the authenticating user are returned.</doc>
                    <request>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="user_id" required="false" style="query" type="xs:string">
                            <doc>The ID of the user for whom to return results for. Helpful for disambiguating when a valid user ID is also a valid screen name.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="screen_name" required="false" style="query" type="xs:string">
                            <doc>The screen name of the user for whom to return results for. Helpful for disambiguating when a valid screen name is also a user ID.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="cursor" required="false" style="query" type="xs:string">
                            <doc>Breaks the results into pages. Provide a value of &lt;tt&gt;-1&lt;/tt&gt; to begin paging. Provide values as returned in the response body's &lt;tt&gt;next_cursor&lt;/tt&gt; and &lt;tt&gt;previous_cursor&lt;/tt&gt; attributes to page back and forth in the list. It is recommended to always use cursors when the method supports them.  See &lt;a href="https://dev.twitter.com/docs/misc/cursoring"&gt;Using cursors to navigate collections&lt;/a&gt; for more information.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="filter_to_owned_lists" required="false" style="query" type="xs:string">
                            <doc>When set to &lt;tt&gt;true&lt;/tt&gt;, &lt;tt&gt;t&lt;/tt&gt; or &lt;tt&gt;1&lt;/tt&gt;, will return just lists the authenticating user owns, and the user represented by &lt;tt&gt;user_id&lt;/tt&gt; or &lt;tt&gt;screen_name&lt;/tt&gt; is a member of.</doc>
                        </param>
                    </request>
                    <response>
                        <representation mediaType="application/json"/>
                    </response>
                    <ns4:rates>
                        <ns4:rate limit="15" scope="USER" unit="MINUTES" window="15"/>
                        <ns4:rate limit="15" scope="APPLICATION" unit="MINUTES" window="15"/>
                    </ns4:rates>
                    <ns2:categories>
                        <ns2:category>lists</ns2:category>
                    </ns2:categories>
                    <ns3:api-versions>
                        <ns3:api-version>1.1</ns3:api-version>
                    </ns3:api-versions>
                    <ns3:see-also>
                        <ns3:see href="/docs/api/1.1/get/lists/statuses">GET lists/statuses</ns3:see>
                        <ns3:see href="/docs/api/1.1/get/lists/list">GET lists/list</ns3:see>
                        <ns3:see href="/docs/api/1.1/get/lists/memberships">GET lists/memberships</ns3:see>
                        <ns3:see href="/docs/api/1.1/get/lists/ownerships">GET lists/ownerships</ns3:see>
                        <ns3:see href="/docs/api/1.1/get/lists/subscriptions">GET lists/subscriptions</ns3:see>
                    </ns3:see-also>
                </method>
            </resource>
            <resource path="/ownerships">
                <method name="GET">
                    <doc>Returns the lists owned by the specified Twitter user. Private lists will only be shown if the authenticated user is also the owner of the lists.</doc>
                    <request>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="user_id" required="false" style="query" type="xs:string">
                            <doc>The ID of the user for whom to return results for.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="screen_name" required="false" style="query" type="xs:string">
                            <doc>The screen name of the user for whom to return results for.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="count" required="false" style="query" type="xs:int">
                            <doc>The amount of results to return per page. Defaults to 20. No more than 1000 results will ever be returned in a single page.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="cursor" required="false" style="query" type="xs:string">
                            <doc>Breaks the results into pages. Provide a value of &lt;tt&gt;-1&lt;/tt&gt; to begin paging. Provide values as returned in the response body's &lt;tt&gt;next_cursor&lt;/tt&gt; and &lt;tt&gt;previous_cursor&lt;/tt&gt; attributes to page back and forth in the list. It is recommended to always use cursors when the method supports them.  See &lt;a href="https://dev.twitter.com/docs/misc/cursoring"&gt;Using cursors to navigate collections&lt;/a&gt; for more information.</doc>
                        </param>
                    </request>
                    <response>
                        <representation mediaType="application/json"/>
                    </response>
                    <ns4:rates>
                        <ns4:rate limit="15" scope="USER" unit="MINUTES" window="15"/>
                        <ns4:rate limit="15" scope="APPLICATION" unit="MINUTES" window="15"/>
                    </ns4:rates>
                    <ns2:categories>
                        <ns2:category>lists</ns2:category>
                    </ns2:categories>
                    <ns3:api-versions>
                        <ns3:api-version>1.1</ns3:api-version>
                    </ns3:api-versions>
                    <ns3:see-also>
                        <ns3:see href="/docs/api/1.1/get/lists/memberships">GET lists/memberships</ns3:see>
                        <ns3:see href="/docs/api/1.1/get/lists/list">GET lists/list</ns3:see>
                        <ns3:see href="/docs/api/1.1/get/lists/subscriptions">GET lists/subscriptions</ns3:see>
                        <ns3:see href="/docs/api/1.1/get/lists/statuses">GET lists/statuses</ns3:see>
                    </ns3:see-also>
                    <ns3:tags>
                        <ns3:tag>finding lists</ns3:tag>
                        <ns3:tag>list management</ns3:tag>
                    </ns3:tags>
                </method>
            </resource>
            <resource path="/show">
                <method name="GET">
                    <doc>Returns the specified list. Private lists will only be shown if the authenticated user owns the specified list.</doc>
                    <request>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="list_id" required="false" style="template" type="xs:string">
                            <doc>The numerical &lt;tt&gt;id&lt;/tt&gt; of the list.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="slug" required="false" style="template" type="xs:string">
                            <doc>You can identify a list by its slug instead of its numerical id. If you decide to do so, note that you'll also have to specify the list owner using the &lt;tt&gt;owner_id&lt;/tt&gt; or &lt;tt&gt;owner_screen_name&lt;/tt&gt; parameters.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="owner_screen_name" required="false" style="query" type="xs:string">
                            <doc>The screen name of the user who owns the list being requested by a &lt;tt&gt;slug&lt;/tt&gt;.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="owner_id" required="false" style="query" type="xs:string">
                            <doc>The user ID of the user who owns the list being requested by a &lt;tt&gt;slug&lt;/tt&gt;.</doc>
                        </param>
                    </request>
                    <response>
                        <representation mediaType="application/json"/>
                    </response>
                    <ns4:rates>
                        <ns4:rate limit="15" scope="USER" unit="MINUTES" window="15"/>
                        <ns4:rate limit="15" scope="APPLICATION" unit="MINUTES" window="15"/>
                    </ns4:rates>
                    <ns2:categories>
                        <ns2:category>lists</ns2:category>
                    </ns2:categories>
                    <ns3:api-versions>
                        <ns3:api-version>1.1</ns3:api-version>
                    </ns3:api-versions>
                    <ns3:see-also>
                        <ns3:see href="/docs/api/1/get/lists/all">GET lists/all</ns3:see>
                        <ns3:see href="/docs/api/1/get/lists">GET lists</ns3:see>
                    </ns3:see-also>
                </method>
            </resource>
            <resource path="/statuses">
                <method name="GET">
                    <doc>Returns a timeline of tweets authored by members of the specified list. Retweets are included by default. Use the include_rts=false parameter to omit retweets. Embedded Timelines is a great way to embed list timelines on your website.</doc>
                    <request>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="list_id" required="false" style="template" type="xs:string">
                            <doc>The numerical &lt;tt&gt;id&lt;/tt&gt; of the list.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="slug" required="false" style="template" type="xs:string">
                            <doc>You can identify a list by its slug instead of its numerical id. If you decide to do so, note that you'll also have to specify the list owner using the &lt;tt&gt;owner_id&lt;/tt&gt; or &lt;tt&gt;owner_screen_name&lt;/tt&gt; parameters.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="owner_screen_name" required="false" style="query" type="xs:string">
                            <doc>The screen name of the user who owns the list being requested by a &lt;tt&gt;slug&lt;/tt&gt;.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="owner_id" required="false" style="query" type="xs:string">
                            <doc>The user ID of the user who owns the list being requested by a &lt;tt&gt;slug&lt;/tt&gt;.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="since_id" required="false" style="query" type="xs:string">
                            <doc>Returns results with an ID greater than (that is, more recent than) the specified ID. There are limits to the number of Tweets which can be accessed through the API. If the limit of Tweets has occured since the since_id, the since_id will be forced to the oldest ID available.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="max_id" required="false" style="query" type="xs:string">
                            <doc>Returns results with an ID less than (that is, older than) or equal to the specified ID.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="count" required="false" style="query" type="xs:int">
                            <doc>Specifies the number of results to retrieve per "page."</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="include_entities" required="false" style="query" type="xs:string">
                            <doc>Entities are ON by default in API 1.1, each tweet includes a node called "entities". This node offers a variety of metadata about the tweet in a discreet structure, including: user_mentions, urls, and hashtags. You can omit entities from the result by using &lt;tt&gt;include_entities=false&lt;/tt&gt;</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="include_rts" required="false" style="query" type="xs:string">
                            <doc>When set to either &lt;tt&gt;true&lt;/tt&gt;, &lt;tt&gt;t&lt;/tt&gt; or &lt;tt&gt;1&lt;/tt&gt;, the list timeline will contain native retweets (if they exist) in addition to the standard stream of tweets. The output format of retweeted tweets is identical to the representation you see in home_timeline.</doc>
                        </param>
                    </request>
                    <response>
                        <representation element="ns1:tweets" mediaType="application/json"/>
                    </response>
                    <ns4:rates>
                        <ns4:rate limit="180" scope="USER" unit="MINUTES" window="15"/>
                        <ns4:rate limit="180" scope="APPLICATION" unit="MINUTES" window="15"/>
                    </ns4:rates>
                    <ns2:categories>
                        <ns2:category>lists</ns2:category>
                    </ns2:categories>
                    <ns3:api-versions>
                        <ns3:api-version>1.1</ns3:api-version>
                    </ns3:api-versions>
                    <ns3:see-also>
                        <ns3:see href="/docs/api/1.1/get/lists/list">GET lists/list</ns3:see>
                        <ns3:see href="/docs/api/1.1/get/statuses/home_timeline">GET statuses/home_timeline</ns3:see>
                        <ns3:see href="/docs/api/1.1/get/lists/subscriptions">GET lists/subscriptions</ns3:see>
                        <ns3:see href="/docs/api/1.1/get/lists/memberships">GET lists/memberships</ns3:see>
                        <ns3:see href="/docs/api/1.1/get/lists/ownerships">GET lists/ownerships</ns3:see>
                        <ns3:see href="/docs/working-with-timelines">Working with Timelines</ns3:see>
                    </ns3:see-also>
                </method>
            </resource>
            <resource path="/subscribers">
                <method name="GET">
                    <doc>Returns the subscribers of the specified list. Private list subscribers will only be shown if the authenticated user owns the specified list.</doc>
                    <request>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="list_id" required="false" style="template" type="xs:string">
                            <doc>The numerical &lt;tt&gt;id&lt;/tt&gt; of the list.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="slug" required="false" style="template" type="xs:string">
                            <doc>You can identify a list by its slug instead of its numerical id. If you decide to do so, note that you'll also have to specify the list owner using the &lt;tt&gt;owner_id&lt;/tt&gt; or &lt;tt&gt;owner_screen_name&lt;/tt&gt; parameters.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="owner_screen_name" required="false" style="query" type="xs:string">
                            <doc>The screen name of the user who owns the list being requested by a &lt;tt&gt;slug&lt;/tt&gt;.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="owner_id" required="false" style="query" type="xs:string">
                            <doc>The user ID of the user who owns the list being requested by a &lt;tt&gt;slug&lt;/tt&gt;.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="cursor" required="false" style="query" type="xs:string">
                            <doc>Breaks the results into pages. A single page contains 20 lists. Provide a value of &lt;tt&gt;-1&lt;/tt&gt; to begin paging. Provide values as returned in the response body's &lt;tt&gt;next_cursor&lt;/tt&gt; and &lt;tt&gt;previous_cursor&lt;/tt&gt; attributes to page back and forth in the list.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="include_entities" required="false" style="query" type="xs:string">
                            <doc>When set to either &lt;tt&gt;true&lt;/tt&gt;, &lt;tt&gt;t&lt;/tt&gt; or &lt;tt&gt;1&lt;/tt&gt;, each tweet will include a node called "entities". This node offers a variety of metadata about the tweet in a discreet structure, including: user_mentions, urls, and hashtags. While entities are opt-in on timelines at present, they will be made a default component of output in the future. See &lt;strong&gt;&lt;u&gt;&lt;a href="/pages/tweet_entities"&gt;Tweet Entities&lt;/a&gt;&lt;/u&gt;&lt;/strong&gt; for more details.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="skip_status" required="false" style="query" type="xs:string">
                            <doc>When set to either &lt;tt&gt;true&lt;/tt&gt;, &lt;tt&gt;t&lt;/tt&gt; or &lt;tt&gt;1&lt;/tt&gt; statuses will not be included in the returned user objects.</doc>
                        </param>
                    </request>
                    <response>
                        <representation element="ns1:users" mediaType="application/json"/>
                    </response>
                    <ns4:rates>
                        <ns4:rate limit="180" scope="USER" unit="MINUTES" window="15"/>
                        <ns4:rate limit="15" scope="APPLICATION" unit="MINUTES" window="15"/>
                    </ns4:rates>
                    <ns2:categories>
                        <ns2:category>lists</ns2:category>
                    </ns2:categories>
                    <ns3:api-versions>
                        <ns3:api-version>1.1</ns3:api-version>
                    </ns3:api-versions>
                    <ns3:see-also>
                        <ns3:see href="/docs/api/1/get/lists/memberships">GET lists/memberships</ns3:see>
                        <ns3:see href="/docs/api/1/get/lists/statuses">GET lists/statuses</ns3:see>
                    </ns3:see-also>
                </method>
                <resource path="/show">
                    <method name="GET">
                        <doc>Check if the specified user is a subscriber of the specified list. Returns the user if they are subscriber.</doc>
                        <request>
                            <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="owner_screen_name" required="false" style="query" type="xs:string">
<doc>The screen name of the user who owns the list being requested by a &lt;tt&gt;slug&lt;/tt&gt;.</doc>
                            </param>
                            <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="owner_id" required="false" style="query" type="xs:string">
<doc>The user ID of the user who owns the list being requested by a &lt;tt&gt;slug&lt;/tt&gt;.</doc>
                            </param>
                            <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="list_id" required="false" style="template" type="xs:string">
<doc>The numerical &lt;tt&gt;id&lt;/tt&gt; of the list.</doc>
                            </param>
                            <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="slug" required="false" style="template" type="xs:string">
<doc>You can identify a list by its slug instead of its numerical id. If you decide to do so, note that you'll also have to specify the list owner using the &lt;tt&gt;owner_id&lt;/tt&gt; or &lt;tt&gt;owner_screen_name&lt;/tt&gt; parameters.</doc>
                            </param>
                            <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="user_id" required="false" style="template" type="xs:string">
<doc>The ID of the user for whom to return results for. Helpful for disambiguating when a valid user ID is also a valid screen name.</doc>
                            </param>
                            <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="screen_name" required="false" style="template" type="xs:string">
<doc>The screen name of the user for whom to return results for. Helpful for disambiguating when a valid screen name is also a user ID.</doc>
                            </param>
                            <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="include_entities" required="false" style="query" type="xs:string">
<doc>When set to either &lt;tt&gt;true&lt;/tt&gt;, &lt;tt&gt;t&lt;/tt&gt; or &lt;tt&gt;1&lt;/tt&gt;, each tweet will include a node called "entities". This node offers a variety of metadata about the tweet in a discreet structure, including: user_mentions, urls, and hashtags. While entities are opt-in on timelines at present, they will be made a default component of output in the future. See &lt;strong&gt;&lt;u&gt;&lt;a href="/pages/tweet_entities"&gt;Tweet Entities&lt;/a&gt;&lt;/u&gt;&lt;/strong&gt; for more details.</doc>
                            </param>
                            <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="skip_status" required="false" style="query" type="xs:string">
<doc>When set to either &lt;tt&gt;true&lt;/tt&gt;, &lt;tt&gt;t&lt;/tt&gt; or &lt;tt&gt;1&lt;/tt&gt; statuses will not be included in the returned user objects.</doc>
                            </param>
                        </request>
                        <response>
                            <representation element="ns1:users" mediaType="application/json"/>
                        </response>
                        <ns4:rates>
                            <ns4:rate limit="15" scope="USER" unit="MINUTES" window="15"/>
                            <ns4:rate limit="15" scope="APPLICATION" unit="MINUTES" window="15"/>
                        </ns4:rates>
                        <ns2:categories>
                            <ns2:category>lists</ns2:category>
                        </ns2:categories>
                        <ns3:api-versions>
                            <ns3:api-version>1.1</ns3:api-version>
                        </ns3:api-versions>
                        <ns3:see-also>
                            <ns3:see href="/docs/api/1/get/lists/subscribers">GET lists/subscribers</ns3:see>
                            <ns3:see href="/docs/api/1/get/lists/memberships">GET lists/memberships</ns3:see>
                        </ns3:see-also>
                    </method>
                </resource>
                <resource path="/create">
                    <method name="POST">
                        <doc>Subscribes the authenticated user to the specified list.</doc>
                        <request>
                            <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="owner_screen_name" required="false" style="query" type="xs:string">
<doc>The screen name of the user who owns the list being requested by a &lt;tt&gt;slug&lt;/tt&gt;.</doc>
                            </param>
                            <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="owner_id" required="false" style="query" type="xs:string">
<doc>The user ID of the user who owns the list being requested by a &lt;tt&gt;slug&lt;/tt&gt;.</doc>
                            </param>
                            <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="list_id" required="false" style="template" type="xs:string">
<doc>The numerical &lt;tt&gt;id&lt;/tt&gt; of the list.</doc>
                            </param>
                            <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="slug" required="false" style="template" type="xs:string">
<doc>You can identify a list by its slug instead of its numerical id. If you decide to do so, note that you'll also have to specify the list owner using the &lt;tt&gt;owner_id&lt;/tt&gt; or &lt;tt&gt;owner_screen_name&lt;/tt&gt; parameters.</doc>
                            </param>
                        </request>
                        <response>
                            <representation element="ns1:users" mediaType="application/json"/>
                        </response>
                        <ns2:categories>
                            <ns2:category>lists</ns2:category>
                        </ns2:categories>
                        <ns3:api-versions>
                            <ns3:api-version>1.1</ns3:api-version>
                        </ns3:api-versions>
                        <ns3:see-also>
                            <ns3:see href="/docs/api/1/get/lists/subscribers">GET lists/subscribers</ns3:see>
                        </ns3:see-also>
                    </method>
                </resource>
                <resource path="/destroy">
                    <method name="POST">
                        <doc>Unsubscribes the authenticated user from the specified list.</doc>
                        <request>
                            <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="list_id" required="false" style="template" type="xs:string">
<doc>The numerical &lt;tt&gt;id&lt;/tt&gt; of the list.</doc>
                            </param>
                            <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="slug" required="false" style="template" type="xs:string">
<doc>You can identify a list by its slug instead of its numerical id. If you decide to do so, note that you'll also have to specify the list owner using the &lt;tt&gt;owner_id&lt;/tt&gt; or &lt;tt&gt;owner_screen_name&lt;/tt&gt; parameters.</doc>
                            </param>
                            <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="owner_screen_name" required="false" style="query" type="xs:string">
<doc>The screen name of the user who owns the list being requested by a &lt;tt&gt;slug&lt;/tt&gt;.</doc>
                            </param>
                            <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="owner_id" required="false" style="query" type="xs:string">
<doc>The user ID of the user who owns the list being requested by a &lt;tt&gt;slug&lt;/tt&gt;.</doc>
                            </param>
                        </request>
                        <response>
                            <representation mediaType="application/json"/>
                        </response>
                        <ns2:categories>
                            <ns2:category>lists</ns2:category>
                        </ns2:categories>
                        <ns3:api-versions>
                            <ns3:api-version>1.1</ns3:api-version>
                        </ns3:api-versions>
                        <ns3:see-also>
                            <ns3:see href="/docs/api/1/post/lists/subscribers/create">POST lists/subscribers/create</ns3:see>
                        </ns3:see-also>
                    </method>
                </resource>
            </resource>
            <resource path="/subscriptions">
                <method name="GET">
                    <doc>Obtain a collection of the lists the specified user is subscribed to, 20 lists per page by default.  Does not include the user&amp;#039;s own lists.</doc>
                    <request>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="user_id" required="false" style="query" type="xs:string">
                            <doc>The ID of the user for whom to return results for. Helpful for disambiguating when a valid user ID is also a valid screen name.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="screen_name" required="false" style="query" type="xs:string">
                            <doc>The screen name of the user for whom to return results for. Helpful for disambiguating when a valid screen name is also a user ID.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="count" required="false" style="query" type="xs:int">
                            <doc>The amount of results to return per page. Defaults to 20. No more than 1000 results will ever be returned in a single page.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="cursor" required="false" style="query" type="xs:string">
                            <doc>Breaks the results into pages. Provide a value of &lt;tt&gt;-1&lt;/tt&gt; to begin paging. Provide values as returned in the response body's &lt;tt&gt;next_cursor&lt;/tt&gt; and &lt;tt&gt;previous_cursor&lt;/tt&gt; attributes to page back and forth in the list. It is recommended to always use cursors when the method supports them.  See &lt;a href="https://dev.twitter.com/docs/misc/cursoring"&gt;Using cursors to navigate collections&lt;/a&gt; for more information.</doc>
                        </param>
                    </request>
                    <response>
                        <representation mediaType="application/json"/>
                    </response>
                    <ns4:rates>
                        <ns4:rate limit="15" scope="USER" unit="MINUTES" window="15"/>
                        <ns4:rate limit="15" scope="APPLICATION" unit="MINUTES" window="15"/>
                    </ns4:rates>
                    <ns2:categories>
                        <ns2:category>lists</ns2:category>
                    </ns2:categories>
                    <ns3:api-versions>
                        <ns3:api-version>1.1</ns3:api-version>
                    </ns3:api-versions>
                    <ns3:see-also>
                        <ns3:see href="/docs/api/1.1/get/lists/memberships">GET lists/memberships</ns3:see>
                        <ns3:see href="/docs/api/1.1/get/lists/list">GET lists/list</ns3:see>
                        <ns3:see href="/docs/api/1.1/get/lists/ownerships">GET lists/ownerships</ns3:see>
                        <ns3:see href="/docs/api/1.1/get/lists/statuses">GET lists/statuses</ns3:see>
                    </ns3:see-also>
                    <ns3:tags>
                        <ns3:tag>Lists</ns3:tag>
                    </ns3:tags>
                </method>
            </resource>
            <resource path="/create">
                <method name="POST">
                    <doc>Creates a new list for the authenticated user. Note that you can&amp;#039;t create more than 20 lists per account.</doc>
                    <request>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="name" required="false" style="template" type="xs:string">
                            <doc>The name for the list.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="mode" required="false" style="query" type="xs:string">
                            <doc>Whether your list is public or private. Values can be &lt;tt&gt;public&lt;/tt&gt; or &lt;tt&gt;private&lt;/tt&gt;. If no mode is specified the list will be public.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="description" required="false" style="query" type="xs:string">
                            <doc>The description to give the list.</doc>
                        </param>
                    </request>
                    <response>
                        <representation mediaType="application/json"/>
                    </response>
                    <ns2:categories>
                        <ns2:category>lists</ns2:category>
                    </ns2:categories>
                    <ns3:api-versions>
                        <ns3:api-version>1.1</ns3:api-version>
                    </ns3:api-versions>
                    <ns3:see-also>
                        <ns3:see href="/docs/api/1/post/lists/update">POST lists/update</ns3:see>
                    </ns3:see-also>
                </method>
            </resource>
            <resource path="/destroy">
                <method name="POST">
                    <doc>Deletes the specified list. The authenticated user must own the list to be able to destroy it.</doc>
                    <request>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="owner_screen_name" required="false" style="query" type="xs:string">
                            <doc>The screen name of the user who owns the list being requested by a &lt;tt&gt;slug&lt;/tt&gt;.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="owner_id" required="false" style="query" type="xs:string">
                            <doc>The user ID of the user who owns the list being requested by a &lt;tt&gt;slug&lt;/tt&gt;.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="list_id" required="false" style="template" type="xs:string">
                            <doc>The numerical &lt;tt&gt;id&lt;/tt&gt; of the list.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="slug" required="false" style="template" type="xs:string">
                            <doc>You can identify a list by its slug instead of its numerical id. If you decide to do so, note that you'll also have to specify the list owner using the &lt;tt&gt;owner_id&lt;/tt&gt; or &lt;tt&gt;owner_screen_name&lt;/tt&gt; parameters.</doc>
                        </param>
                    </request>
                    <response>
                        <representation mediaType="application/json"/>
                    </response>
                    <ns2:categories>
                        <ns2:category>lists</ns2:category>
                    </ns2:categories>
                    <ns3:api-versions>
                        <ns3:api-version>1.1</ns3:api-version>
                    </ns3:api-versions>
                    <ns3:see-also>
                        <ns3:see href="/docs/api/1/get/lists/all">GET lists/all</ns3:see>
                    </ns3:see-also>
                </method>
            </resource>
            <resource path="/update">
                <method name="POST">
                    <doc>Updates the specified list. The authenticated user must own the list to be able to update it.</doc>
                    <request>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="list_id" required="false" style="template" type="xs:string">
                            <doc>The numerical &lt;tt&gt;id&lt;/tt&gt; of the list.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="slug" required="false" style="template" type="xs:string">
                            <doc>You can identify a list by its slug instead of its numerical id. If you decide to do so, note that you'll also have to specify the list owner using the &lt;tt&gt;owner_id&lt;/tt&gt; or &lt;tt&gt;owner_screen_name&lt;/tt&gt; parameters.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="name" required="false" style="query" type="xs:string">
                            <doc>The name for the list.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="mode" required="false" style="query" type="xs:string">
                            <doc>Whether your list is public or private. Values can be &lt;tt&gt;public&lt;/tt&gt; or &lt;tt&gt;private&lt;/tt&gt;. If no mode is specified the list will be public.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="description" required="false" style="query" type="xs:string">
                            <doc>The description to give the list.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="owner_screen_name" required="false" style="query" type="xs:string">
                            <doc>The screen name of the user who owns the list being requested by a &lt;tt&gt;slug&lt;/tt&gt;.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="owner_id" required="false" style="query" type="xs:string">
                            <doc>The user ID of the user who owns the list being requested by a &lt;tt&gt;slug&lt;/tt&gt;.</doc>
                        </param>
                    </request>
                    <response>
                        <representation mediaType="application/json"/>
                    </response>
                    <ns2:categories>
                        <ns2:category>lists</ns2:category>
                    </ns2:categories>
                    <ns3:api-versions>
                        <ns3:api-version>1.1</ns3:api-version>
                    </ns3:api-versions>
                    <ns3:see-also>
                        <ns3:see href="/docs/api/1/post/lists/destroy">POST lists/destroy</ns3:see>
                    </ns3:see-also>
                </method>
            </resource>
        </resource>
        <resource path="/site"/>
        <resource path="/blocks">
            <resource path="/ids">
                <method name="GET">
                    <doc>Returns an array of numeric user ids the authenticating user is blocking. Important On October 15, 2012 this method will become cursored by default, altering the default response format. See Using cursors to navigate collections for more details on how cursoring works.</doc>
                    <request>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="stringify_ids" required="false" style="query" type="xs:boolean">
                            <doc>Many programming environments will not consume our ids due to their size. Provide this option to have ids returned as strings instead. Read more about &lt;a href="https://dev.twitter.com/docs/twitter-ids-json-and-snowflake"&gt;Twitter IDs, JSON and Snowflake&lt;/a&gt;.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="cursor" style="query" type="xs:string">
                            <doc>Causes the list of IDs to be broken into pages of no more than 5000 IDs at a time. The number of IDs returned is not guaranteed to be 5000 as suspended users are filtered out after connections are queried. If no cursor is provided, a value of &lt;tt&gt;-1&lt;/tt&gt; will be assumed, which is the first "page."&lt;br /&gt;&lt;br /&gt; &#13;
The response from the API will include a &lt;tt&gt;previous_cursor&lt;/tt&gt; and &lt;tt&gt;next_cursor&lt;/tt&gt; to allow paging back and forth. See &lt;a href="https://dev.twitter.com/docs/misc/cursoring"&gt;Using cursors to navigate collections&lt;/a&gt; for more information.</doc>
                        </param>
                    </request>
                    <response>
                        <representation mediaType="application/json"/>
                    </response>
                    <ns4:rates>
                        <ns4:rate limit="15" scope="USER" unit="MINUTES" window="15"/>
                    </ns4:rates>
                    <ns2:categories>
                        <ns2:category>blocks</ns2:category>
                    </ns2:categories>
                    <ns3:api-versions>
                        <ns3:api-version>1.1</ns3:api-version>
                    </ns3:api-versions>
                    <ns3:see-also>
                        <ns3:see href="/docs/api/1.1/get/blocks/list">GET blocks/list</ns3:see>
                    </ns3:see-also>
                </method>
            </resource>
            <resource path="/list">
                <method name="GET">
                    <doc>Returns a collection of user objects that the authenticating user is blocking. Important On October 15, 2012 this method will become cursored by default, altering the default response format. See Using cursors to navigate collections for more details on how cursoring works.</doc>
                    <request>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="include_entities" required="false" style="query" type="xs:boolean">
                            <doc>The &lt;tt&gt;entities&lt;/tt&gt; node will not be included when set to &lt;tt&gt;false&lt;/tt&gt;.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="skip_status" required="false" style="query" type="xs:string">
                            <doc>When set to either &lt;tt&gt;true&lt;/tt&gt;, &lt;tt&gt;t&lt;/tt&gt; or &lt;tt&gt;1&lt;/tt&gt; statuses will not be included in the returned user objects.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="cursor" style="query" type="xs:string">
                            <doc>Causes the list of blocked users to be broken into pages of no more than 5000 IDs at a time. The number of IDs returned is not guaranteed to be 5000 as suspended users are filtered out after connections are queried. If no cursor is provided, a value of &lt;tt&gt;-1&lt;/tt&gt; will be assumed, which is the first "page."&lt;br /&gt;&lt;br /&gt; &#13;
The response from the API will include a &lt;tt&gt;previous_cursor&lt;/tt&gt; and &lt;tt&gt;next_cursor&lt;/tt&gt; to allow paging back and forth. See &lt;a href="https://dev.twitter.com/docs/misc/cursoring"&gt;Using cursors to navigate collections&lt;/a&gt; for more information.</doc>
                        </param>
                    </request>
                    <response>
                        <representation mediaType="application/json"/>
                    </response>
                    <ns4:rates>
                        <ns4:rate limit="15" scope="USER" unit="MINUTES" window="15"/>
                    </ns4:rates>
                    <ns2:categories>
                        <ns2:category>blocks</ns2:category>
                    </ns2:categories>
                    <ns3:api-versions>
                        <ns3:api-version>1.1</ns3:api-version>
                    </ns3:api-versions>
                    <ns3:see-also>
                        <ns3:see href="/docs/api/1.1/get/blocks/ids">GET blocks/ids</ns3:see>
                        <ns3:see href="/docs/misc/cursoring">Using cursors to navigate collections</ns3:see>
                    </ns3:see-also>
                </method>
            </resource>
            <resource path="/create">
                <method name="POST">
                    <doc>Blocks the specified user from following the authenticating user. In addition the blocked user will not show in the authenticating users mentions or timeline (unless retweeted by another user). If a follow or friend relationship exists it is destroyed.</doc>
                    <request>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="screen_name" required="false" style="query" type="xs:string">
                            <doc>The screen name of the potentially blocked user. Helpful for disambiguating when a valid screen name is also a user ID.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="user_id" required="false" style="query" type="xs:int">
                            <doc>The ID of the potentially blocked user. Helpful for disambiguating when a valid user ID is also a valid screen name.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="include_entities" required="false" style="query" type="xs:boolean">
                            <doc>The &lt;tt&gt;entities&lt;/tt&gt; node will not be included when set to &lt;tt&gt;false&lt;/tt&gt;.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="skip_status" required="false" style="query" type="xs:string">
                            <doc>When set to either &lt;tt&gt;true&lt;/tt&gt;, &lt;tt&gt;t&lt;/tt&gt; or &lt;tt&gt;1&lt;/tt&gt; statuses will not be included in the returned user objects.</doc>
                        </param>
                    </request>
                    <response>
                        <representation mediaType="application/json"/>
                    </response>
                    <ns2:categories>
                        <ns2:category>blocks</ns2:category>
                    </ns2:categories>
                    <ns3:api-versions>
                        <ns3:api-version>1.1</ns3:api-version>
                    </ns3:api-versions>
                </method>
            </resource>
            <resource path="/destroy">
                <method name="POST">
                    <doc>Un-blocks the user specified in the ID parameter for the authenticating user. Returns the un-blocked user in the requested format when successful.  If relationships existed before the block was instated, they will not be restored.</doc>
                    <request>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="screen_name" required="false" style="query" type="xs:string">
                            <doc>The screen name of the potentially blocked user. Helpful for disambiguating when a valid screen name is also a user ID.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="user_id" required="false" style="query" type="xs:int">
                            <doc>The ID of the potentially blocked user. Helpful for disambiguating when a valid user ID is also a valid screen name.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="include_entities" required="false" style="query" type="xs:boolean">
                            <doc>The &lt;tt&gt;entities&lt;/tt&gt; node will not be included when set to &lt;tt&gt;false&lt;/tt&gt;.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="skip_status" required="false" style="query" type="xs:string">
                            <doc>When set to either &lt;tt&gt;true&lt;/tt&gt;, &lt;tt&gt;t&lt;/tt&gt; or &lt;tt&gt;1&lt;/tt&gt; statuses will not be included in the returned user objects.</doc>
                        </param>
                    </request>
                    <response>
                        <representation mediaType="application/json"/>
                    </response>
                    <ns2:categories>
                        <ns2:category>blocks</ns2:category>
                    </ns2:categories>
                    <ns3:api-versions>
                        <ns3:api-version>1.1</ns3:api-version>
                    </ns3:api-versions>
                </method>
            </resource>
        </resource>
        <resource path="/help">
            <resource path="/configuration">
                <method name="GET">
                    <doc>Returns the current configuration used by Twitter including twitter.com slugs which are not usernames, maximum photo resolutions, and t.co URL lengths.  It is recommended applications request this endpoint when they are loaded, but no more than once a day.</doc>
                    <request/>
                    <response>
                        <representation mediaType="application/json"/>
                    </response>
                    <ns4:rates>
                        <ns4:rate limit="15" scope="USER" unit="MINUTES" window="15"/>
                        <ns4:rate limit="15" scope="APPLICATION" unit="MINUTES" window="15"/>
                    </ns4:rates>
                    <ns2:categories>
                        <ns2:category>help</ns2:category>
                    </ns2:categories>
                    <ns3:api-versions>
                        <ns3:api-version>1.1</ns3:api-version>
                    </ns3:api-versions>
                    <ns3:see-also>
                        <ns3:see href="/docs/api/1.1/get/help/privacy">GET help/privacy</ns3:see>
                        <ns3:see href="/docs/api/1.1/get/help/languages">GET help/languages</ns3:see>
                        <ns3:see href="/docs/api/1.1/get/help/tos">GET help/tos</ns3:see>
                    </ns3:see-also>
                </method>
            </resource>
            <resource path="/languages">
                <method name="GET">
                    <doc>Returns the list of languages supported by Twitter along with their ISO 639-1 code. The ISO 639-1 code is the two letter value to use if you include lang with any of your requests.</doc>
                    <request/>
                    <response>
                        <representation mediaType="application/json"/>
                    </response>
                    <ns4:rates>
                        <ns4:rate limit="15" scope="USER" unit="MINUTES" window="15"/>
                        <ns4:rate limit="15" scope="APPLICATION" unit="MINUTES" window="15"/>
                    </ns4:rates>
                    <ns2:categories>
                        <ns2:category>help</ns2:category>
                    </ns2:categories>
                    <ns3:api-versions>
                        <ns3:api-version>1.1</ns3:api-version>
                    </ns3:api-versions>
                    <ns3:see-also>
                        <ns3:see href="/docs/api/1.1/get/help/configuration">GET help/configuration</ns3:see>
                        <ns3:see href="/docs/api/1.1/get/help/privacy">GET help/privacy</ns3:see>
                        <ns3:see href="/docs/api/1.1/get/help/tos">GET help/tos</ns3:see>
                    </ns3:see-also>
                </method>
            </resource>
            <resource path="/privacy">
                <method name="GET">
                    <doc>Returns Twitter&amp;#039;s Privacy Policy.</doc>
                    <request/>
                    <response>
                        <representation mediaType="application/json"/>
                    </response>
                    <ns4:rates>
                        <ns4:rate limit="15" scope="USER" unit="MINUTES" window="15"/>
                        <ns4:rate limit="15" scope="APPLICATION" unit="MINUTES" window="15"/>
                    </ns4:rates>
                    <ns2:categories>
                        <ns2:category>help</ns2:category>
                    </ns2:categories>
                    <ns3:api-versions>
                        <ns3:api-version>1.1</ns3:api-version>
                    </ns3:api-versions>
                    <ns3:see-also>
                        <ns3:see href="/docs/api/1.1/get/help/configuration">GET help/configuration</ns3:see>
                        <ns3:see href="/docs/api/1.1/get/help/languages">GET help/languages</ns3:see>
                        <ns3:see href="/docs/api/1.1/get/help/tos">GET help/tos</ns3:see>
                    </ns3:see-also>
                </method>
            </resource>
            <resource path="/tos">
                <method name="GET">
                    <doc>Returns the Twitter Terms of Service in the requested format. These are not the same as the Developer Rules of the Road.</doc>
                    <request/>
                    <response>
                        <representation mediaType="application/json"/>
                    </response>
                    <ns4:rates>
                        <ns4:rate limit="15" scope="USER" unit="MINUTES" window="15"/>
                        <ns4:rate limit="15" scope="APPLICATION" unit="MINUTES" window="15"/>
                    </ns4:rates>
                    <ns2:categories>
                        <ns2:category>help</ns2:category>
                    </ns2:categories>
                    <ns3:api-versions>
                        <ns3:api-version>1.1</ns3:api-version>
                    </ns3:api-versions>
                    <ns3:see-also>
                        <ns3:see href="/docs/api/1.1/get/help/configuration">GET help/configuration</ns3:see>
                        <ns3:see href="/docs/api/1.1/get/help/languages">GET help/languages</ns3:see>
                        <ns3:see href="/docs/api/1.1/get/help/privacy">GET help/privacy</ns3:see>
                    </ns3:see-also>
                </method>
            </resource>
        </resource>
        <resource path="/friends">
            <resource path="/ids">
                <method name="GET">
                    <doc>Returns a cursored collection of user IDs for every user the specified user is following (otherwise known as their &amp;quot;friends&amp;quot;).</doc>
                    <request>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="user_id" required="false" style="query" type="xs:int">
                            <doc>The ID of the user for whom to return results for.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="screen_name" required="false" style="query" type="xs:string">
                            <doc>The screen name of the user for whom to return results for.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="cursor" style="query" type="xs:string">
                            <doc>Causes the list of connections to be broken into pages of no more than 5000 IDs at a time. The number of IDs returned is not guaranteed to be 5000 as suspended users are filtered out after connections are queried. If no cursor is provided, a value of &lt;tt&gt;-1&lt;/tt&gt; will be assumed, which is the first "page."&lt;br /&gt;&lt;br /&gt; &#13;
The response from the API will include a &lt;tt&gt;previous_cursor&lt;/tt&gt; and &lt;tt&gt;next_cursor&lt;/tt&gt; to allow paging back and forth. See &lt;a href="https://dev.twitter.com/docs/misc/cursoring"&gt;Using cursors to navigate collections&lt;/a&gt; for more information.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="stringify_ids" required="false" style="query" type="xs:boolean">
                            <doc>Many programming environments will not consume our Tweet ids due to their size. Provide this option to have ids returned as strings instead. More about &lt;a href="https://dev.twitter.com/docs/twitter-ids-json-and-snowflake"&gt;Twitter IDs, JSON and Snowflake&lt;/a&gt;.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="count" required="false" style="query" type="xs:int">
                            <doc>Specifies the number of IDs attempt retrieval of, up to a maximum of 5,000 per distinct request. The value of &lt;tt&gt;count&lt;/tt&gt; is best thought of as a limit to the number of results to return. When using the count parameter with this method, it is wise to use a consistent count value across all requests to the same user's collection. Usage of this parameter is encouraged in environments where all 5,000 IDs constitutes too large of a response.</doc>
                        </param>
                    </request>
                    <response>
                        <representation element="ns1:users" mediaType="application/json"/>
                    </response>
                    <ns4:rates>
                        <ns4:rate limit="15" scope="USER" unit="MINUTES" window="15"/>
                        <ns4:rate limit="15" scope="APPLICATION" unit="MINUTES" window="15"/>
                    </ns4:rates>
                    <ns2:categories>
                        <ns2:category>friends</ns2:category>
                    </ns2:categories>
                    <ns3:api-versions>
                        <ns3:api-version>1.1</ns3:api-version>
                    </ns3:api-versions>
                    <ns3:see-also>
                        <ns3:see href="/docs/api/1.1/get/followers/ids">GET followers/ids</ns3:see>
                        <ns3:see href="/docs/api/1.1/get/followers/list">GET followers/list</ns3:see>
                        <ns3:see href="/docs/api/1.1/get/friends/list">GET friends/list</ns3:see>
                        <ns3:see href="/docs/misc/cursoring">Using cursors to navigate collections</ns3:see>
                    </ns3:see-also>
                    <ns3:tags>
                        <ns3:tag>Bulk Operations</ns3:tag>
                        <ns3:tag>finding users</ns3:tag>
                    </ns3:tags>
                </method>
            </resource>
            <resource path="/list">
                <method name="GET">
                    <doc>Returns a cursored collection of user objects for every user the specified user is following (otherwise known as their &amp;quot;friends&amp;quot;).</doc>
                    <request>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="user_id" required="false" style="query" type="xs:int">
                            <doc>The ID of the user for whom to return results for.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="screen_name" required="false" style="query" type="xs:string">
                            <doc>The screen name of the user for whom to return results for.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="cursor" style="query" type="xs:string">
                            <doc>Causes the results to be broken into pages. If no cursor is provided, a value of &lt;tt&gt;-1&lt;/tt&gt; will be assumed, which is the first "page."&lt;br /&gt;&lt;br /&gt; &#13;
The response from the API will include a &lt;tt&gt;previous_cursor&lt;/tt&gt; and &lt;tt&gt;next_cursor&lt;/tt&gt; to allow paging back and forth. See &lt;a href="https://dev.twitter.com/docs/misc/cursoring"&gt;Using cursors to navigate collections&lt;/a&gt; for more information.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="count" required="false" style="query" type="xs:int">
                            <doc>The number of users to return per page, up to a maximum of 200. Defaults to 20.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="skip_status" required="false" style="query" type="xs:boolean">
                            <doc>When set to either &lt;tt&gt;true&lt;/tt&gt;, &lt;tt&gt;t&lt;/tt&gt; or &lt;tt&gt;1&lt;/tt&gt; statuses will not be included in the returned user objects.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="include_user_entities" required="false" style="query" type="xs:boolean">
                            <doc>The user object &lt;tt&gt;entities&lt;/tt&gt; node will be disincluded when set to &lt;tt&gt;false&lt;/tt&gt;.</doc>
                        </param>
                    </request>
                    <response>
                        <representation element="ns1:users" mediaType="application/json"/>
                    </response>
                    <ns4:rates>
                        <ns4:rate limit="15" scope="USER" unit="MINUTES" window="15"/>
                        <ns4:rate limit="30" scope="APPLICATION" unit="MINUTES" window="15"/>
                    </ns4:rates>
                    <ns2:categories>
                        <ns2:category>friends</ns2:category>
                    </ns2:categories>
                    <ns3:api-versions>
                        <ns3:api-version>1.1</ns3:api-version>
                    </ns3:api-versions>
                    <ns3:see-also>
                        <ns3:see href="/docs/api/1.1/get/friends/ids">GET friends/ids</ns3:see>
                        <ns3:see href="/docs/api/1.1/get/followers/ids">GET followers/ids</ns3:see>
                    </ns3:see-also>
                    <ns3:tags>
                        <ns3:tag>Bulk Operations</ns3:tag>
                        <ns3:tag>finding users</ns3:tag>
                    </ns3:tags>
                </method>
            </resource>
        </resource>
        <resource path="/account">
            <resource path="/settings">
                <method name="GET">
                    <doc>Returns settings (including current trend, geo and sleep time information) for the authenticating user.</doc>
                    <request/>
                    <response>
                        <representation mediaType="application/json"/>
                    </response>
                    <ns4:rates>
                        <ns4:rate limit="15" scope="USER" unit="MINUTES" window="15"/>
                    </ns4:rates>
                    <ns2:categories>
                        <ns2:category>account</ns2:category>
                    </ns2:categories>
                    <ns3:api-versions>
                        <ns3:api-version>1.1</ns3:api-version>
                    </ns3:api-versions>
                </method>
                <method name="POST">
                    <doc>Updates the authenticating user&amp;#039;s settings.</doc>
                    <request>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="trend_location_woeid" required="false" style="query" type="xs:int">
                            <doc>The Yahoo! Where On Earth ID to use as the user's default trend location. Global information is available by using 1 as the WOEID. The woeid must be one of the locations returned by &lt;a href="https://dev.twitter.com/docs/api/1/get/trends/available"&gt;GET trends/available&lt;/a&gt;.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="sleep_time_enabled" required="false" style="query" type="xs:boolean">
                            <doc>When set to &lt;tt&gt;true&lt;/tt&gt;, &lt;tt&gt;t&lt;/tt&gt; or &lt;tt&gt;1&lt;/tt&gt;, will enable sleep time for the user. Sleep time is the time when push or SMS notifications should not be sent to the user.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="start_sleep_time" required="false" style="query" type="xs:int">
                            <doc>The hour that sleep time should begin if it is enabled. The value for this parameter should be provided in &lt;a href="http://en.wikipedia.org/wiki/ISO_8601" target="_blank"&gt;ISO8601&lt;/a&gt; format (i.e. 00-23). The time is considered to be in the same timezone as the user's &lt;tt&gt;time_zone&lt;/tt&gt; setting.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="end_sleep_time" required="false" style="query" type="xs:int">
                            <doc>The hour that sleep time should end if it is enabled. The value for this parameter should be provided in &lt;a href="http://en.wikipedia.org/wiki/ISO_8601" target="_blank"&gt;ISO8601&lt;/a&gt; format (i.e. 00-23). The time is considered to be in the same timezone as the user's &lt;tt&gt;time_zone&lt;/tt&gt; setting.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="time_zone" required="false" style="query" type="xs:string">
                            <doc>The timezone dates and times should be displayed in for the user. The timezone must be one of the &lt;a target="_blank" href="http://api.rubyonrails.org/classes/ActiveSupport/TimeZone.html"&gt;Rails TimeZone&lt;/a&gt; names.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="lang" required="false" style="query" type="xs:string">
                            <doc>The language which Twitter should render in for this user. The language must be specified by the appropriate two letter ISO 639-1 representation. Currently supported languages are provided by &lt;a href="https://dev.twitter.com/docs/api/1/get/help/languages"&gt;GET help/languages&lt;/a&gt;.&#13;</doc>
                        </param>
                    </request>
                    <response>
                        <representation mediaType="application/json"/>
                    </response>
                    <ns3:api-versions>
                        <ns3:api-version>1.1</ns3:api-version>
                    </ns3:api-versions>
                    <ns3:see-also>
                        <ns3:see href="/docs/api/1.1/get/account/settings">GET account/settings</ns3:see>
                    </ns3:see-also>
                </method>
            </resource>
            <resource path="/verify_credentials">
                <method name="GET">
                    <doc>Returns an HTTP 200 OK response code and a representation of the requesting user if authentication was successful; returns a 401 status code and an error message if not. Use this method to test if supplied user credentials are valid.</doc>
                    <request>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="include_entities" required="false" style="query" type="xs:boolean">
                            <doc>The &lt;tt&gt;entities&lt;/tt&gt; node will not be included when set to &lt;tt&gt;false&lt;/tt&gt;.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="skip_status" required="false" style="query" type="xs:boolean">
                            <doc>When set to either &lt;tt&gt;true&lt;/tt&gt;, &lt;tt&gt;t&lt;/tt&gt; or &lt;tt&gt;1&lt;/tt&gt; statuses will not be included in the returned user objects.</doc>
                        </param>
                    </request>
                    <response>
                        <representation element="ns1:users" mediaType="application/json"/>
                    </response>
                    <ns4:rates>
                        <ns4:rate limit="15" scope="USER" unit="MINUTES" window="15"/>
                    </ns4:rates>
                    <ns2:categories>
                        <ns2:category>account</ns2:category>
                    </ns2:categories>
                    <ns3:api-versions>
                        <ns3:api-version>1.1</ns3:api-version>
                    </ns3:api-versions>
                    <ns3:see-also>
                        <ns3:see href="/docs/api/1.1/get/account/settings">GET account/settings</ns3:see>
                    </ns3:see-also>
                </method>
            </resource>
            <resource path="/remove_profile_banner">
                <method name="POST">
                    <doc>Removes the uploaded profile banner for the authenticating user. Returns HTTP 200 upon success.</doc>
                    <request/>
                    <response>
                        <representation mediaType="application/json"/>
                    </response>
                    <ns3:api-versions>
                        <ns3:api-version>1.1</ns3:api-version>
                    </ns3:api-versions>
                    <ns3:see-also>
                        <ns3:see href="/docs/user-profile-images-and-banners">User Profile Images and Banners</ns3:see>
                        <ns3:see href="/docs/api/1.1/post/account/update_profile_banner">POST account/update_profile_banner</ns3:see>
                        <ns3:see href="/docs/api/1.1/get/users/profile_banner">GET users/profile_banner</ns3:see>
                    </ns3:see-also>
                </method>
            </resource>
            <resource path="/update_delivery_device">
                <method name="POST">
                    <doc>Sets which device Twitter delivers updates to for the authenticating user. Sending none as the device parameter will disable SMS updates.</doc>
                    <request>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="device" required="false" style="template" type="xs:string">
                            <doc>Must be one of: &lt;tt&gt;sms&lt;/tt&gt;, &lt;tt&gt;none&lt;/tt&gt;.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="include_entities" required="false" style="query" type="xs:boolean">
                            <doc>When set to either &lt;tt&gt;true&lt;/tt&gt;, &lt;tt&gt;t&lt;/tt&gt; or &lt;tt&gt;1&lt;/tt&gt;, each tweet will include a node called "entities,". This node offers a variety of metadata about the tweet in a discreet structure, including: user_mentions, urls, and hashtags. While entities are opt-in on timelines at present, they will be made a default component of output in the future. See &lt;strong&gt;&lt;u&gt;&lt;a href="/pages/tweet_entities"&gt;Tweet Entities&lt;/a&gt;&lt;/u&gt;&lt;/strong&gt; for more detail on entities.</doc>
                        </param>
                    </request>
                    <response>
                        <representation mediaType="application/json"/>
                    </response>
                    <ns2:categories>
                        <ns2:category>account</ns2:category>
                    </ns2:categories>
                    <ns3:api-versions>
                        <ns3:api-version>1.1</ns3:api-version>
                    </ns3:api-versions>
                </method>
            </resource>
            <resource path="/update_profile">
                <method name="POST">
                    <doc>Sets values that users are able to set under the &amp;quot;Account&amp;quot; tab of their settings page. Only the parameters specified will be updated.</doc>
                    <request>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="name" required="false" style="query" type="xs:string">
                            <doc>Full name associated with the profile. Maximum of 20 characters.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="url" required="false" style="query" type="xs:string">
                            <doc>URL associated with the profile. Will be prepended with "http://" if not present. Maximum of 100 characters.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="location" required="false" style="query" type="xs:string">
                            <doc>The city or country describing where the user of the account is located. The contents are not normalized or geocoded in any way. Maximum of 30 characters.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="description" required="false" style="query" type="xs:string">
                            <doc>A description of the user owning the account. Maximum of 160 characters.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="include_entities" required="false" style="query" type="xs:boolean">
                            <doc>The &lt;tt&gt;entities&lt;/tt&gt; node will not be included when set to &lt;tt&gt;false&lt;/tt&gt;.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="skip_status" required="false" style="query" type="xs:string">
                            <doc>When set to either &lt;tt&gt;true&lt;/tt&gt;, &lt;tt&gt;t&lt;/tt&gt; or &lt;tt&gt;1&lt;/tt&gt; statuses will not be included in the returned user objects.</doc>
                        </param>
                    </request>
                    <response>
                        <representation mediaType="application/json"/>
                    </response>
                    <ns2:categories>
                        <ns2:category>account</ns2:category>
                    </ns2:categories>
                    <ns3:api-versions>
                        <ns3:api-version>1.1</ns3:api-version>
                    </ns3:api-versions>
                </method>
            </resource>
            <resource path="/update_profile_background_image">
                <method name="POST">
                    <doc>Updates the authenticating user&amp;#039;s profile background image. This method can also be used to enable or disable the profile background image.  Although each parameter is marked as optional, at least one of image, tile or use must be provided when making this request.</doc>
                    <request>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="image" required="false" style="query" type="xs:string">
                            <doc>The background image for the profile, base64-encoded. Must be a valid GIF, JPG, or PNG image of less than 800 kilobytes in size. Images with width larger than 2048 pixels will be forcibly scaled down. The image must be provided as raw multipart data, not a URL.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="tile" required="false" style="query" type="xs:string">
                            <doc>Whether or not to tile the background image. If set to &lt;tt&gt;true&lt;/tt&gt;, &lt;tt&gt;t&lt;/tt&gt; or &lt;tt&gt;1&lt;/tt&gt; the background image will be displayed tiled. The image will not be tiled otherwise.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="include_entities" required="false" style="query" type="xs:boolean">
                            <doc>The &lt;tt&gt;entities&lt;/tt&gt; node will not be included when set to &lt;tt&gt;false&lt;/tt&gt;.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="skip_status" required="false" style="query" type="xs:string">
                            <doc>When set to either &lt;tt&gt;true&lt;/tt&gt;, &lt;tt&gt;t&lt;/tt&gt; or &lt;tt&gt;1&lt;/tt&gt; statuses will not be included in the returned user objects.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="use" required="false" style="query" type="xs:string">
                            <doc>Determines whether to display the profile background image or not. When set to &lt;tt&gt;true&lt;/tt&gt;, &lt;tt&gt;t&lt;/tt&gt; or &lt;tt&gt;1&lt;/tt&gt; the background image will be displayed if an image is being uploaded with the request, or has been uploaded previously. An error will be returned if you try to &lt;tt&gt;use&lt;/tt&gt; a background image when one is not being uploaded or does not exist. If this parameter is defined but set to anything other than &lt;tt&gt;true&lt;/tt&gt;, &lt;tt&gt;t&lt;/tt&gt; or &lt;tt&gt;1&lt;/tt&gt;, the background image will stop being used.</doc>
                        </param>
                    </request>
                    <response>
                        <representation mediaType="application/json"/>
                    </response>
                    <ns2:categories>
                        <ns2:category>account</ns2:category>
                    </ns2:categories>
                    <ns3:api-versions>
                        <ns3:api-version>1.1</ns3:api-version>
                    </ns3:api-versions>
                </method>
            </resource>
            <resource path="/update_profile_banner">
                <method name="POST">
                    <doc>Uploads a profile banner on behalf of the authenticating user. For best results, upload an</doc>
                    <request>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="banner" required="false" style="template" type="xs:string">
                            <doc>The Base64-encoded or raw image data being uploaded as the user's new profile banner.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="width" required="false" style="query" type="xs:string">
                            <doc>The width of the preferred section of the image being uploaded in pixels. Use with &lt;tt&gt;height&lt;/tt&gt;, &lt;tt&gt;offset_left&lt;/tt&gt;, and &lt;tt&gt;offset_top&lt;/tt&gt; to select the desired region of the image to use.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="height" required="false" style="query" type="xs:string">
                            <doc>The height of the preferred section of the image being uploaded in pixels. Use with &lt;tt&gt;width&lt;/tt&gt;, &lt;tt&gt;offset_left&lt;/tt&gt;, and &lt;tt&gt;offset_top&lt;/tt&gt; to select the desired region of the image to use.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="offset_left" required="false" style="query" type="xs:string">
                            <doc>The number of pixels by which to offset the uploaded image from the left. Use with &lt;tt&gt;height&lt;/tt&gt;, &lt;tt&gt;width&lt;/tt&gt;, and &lt;tt&gt;offset_top&lt;/tt&gt; to select the desired region of the image to use.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="offset_top" required="false" style="query" type="xs:string">
                            <doc>The number of pixels by which to offset the uploaded image from the top. Use with &lt;tt&gt;height&lt;/tt&gt;, &lt;tt&gt;width&lt;/tt&gt;, and &lt;tt&gt;offset_left&lt;/tt&gt; to select the desired region of the image to use.</doc>
                        </param>
                    </request>
                    <response>
                        <representation mediaType="application/json"/>
                    </response>
                    <ns3:api-versions>
                        <ns3:api-version>1.1</ns3:api-version>
                    </ns3:api-versions>
                    <ns3:see-also>
                        <ns3:see href="/docs/api/1.1/post/account/remove_profile_banner">POST account/remove_profile_banner</ns3:see>
                        <ns3:see href="/docs/api/1.1/post/account/update_profile_background_image">POST account/update_profile_background_image</ns3:see>
                        <ns3:see href="/docs/user-profile-images-and-banners">User Profile Images and Banners</ns3:see>
                    </ns3:see-also>
                    <ns3:tags>
                        <ns3:tag>profile banner</ns3:tag>
                        <ns3:tag>profiles</ns3:tag>
                    </ns3:tags>
                </method>
            </resource>
            <resource path="/update_profile_colors">
                <method name="POST">
                    <doc>Sets one or more hex values that control the color scheme of the authenticating user&amp;#039;s profile page on twitter.com. Each parameter&amp;#039;s value must be a valid hexidecimal value, and may be either three or six characters (ex: #fff or #ffffff).</doc>
                    <request>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="profile_background_color" required="false" style="query" type="xs:string">
                            <doc>Profile background color.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="profile_link_color" required="false" style="query" type="xs:string">
                            <doc>Profile link color.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="profile_sidebar_border_color" required="false" style="query" type="xs:string">
                            <doc>Profile sidebar's border color.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="profile_sidebar_fill_color" required="false" style="query" type="xs:string">
                            <doc>Profile sidebar's background color.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="profile_text_color" required="false" style="query" type="xs:int">
                            <doc>Profile text color.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="include_entities" required="false" style="query" type="xs:boolean">
                            <doc>The &lt;tt&gt;entities&lt;/tt&gt; node will not be included when set to &lt;tt&gt;false&lt;/tt&gt;.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="skip_status" required="false" style="query" type="xs:string">
                            <doc>When set to either &lt;tt&gt;true&lt;/tt&gt;, &lt;tt&gt;t&lt;/tt&gt; or &lt;tt&gt;1&lt;/tt&gt; statuses will not be included in the returned user objects.</doc>
                        </param>
                    </request>
                    <response>
                        <representation mediaType="application/json"/>
                    </response>
                    <ns2:categories>
                        <ns2:category>account</ns2:category>
                    </ns2:categories>
                    <ns3:api-versions>
                        <ns3:api-version>1.1</ns3:api-version>
                    </ns3:api-versions>
                </method>
            </resource>
            <resource path="/update_profile_image">
                <method name="POST">
                    <doc>Updates the authenticating user&amp;#039;s profile image. Note that this method expects raw multipart data, not a URL to an image. This method asynchronously processes the uploaded file before updating the user&amp;#039;s profile image URL.</doc>
                    <request>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="image" required="false" style="template" type="xs:string">
                            <doc>The avatar image for the profile, base64-encoded. Must be a valid GIF, JPG, or PNG image of less than 700 kilobytes in size. Images with width larger than 500 pixels will be scaled down. Animated GIFs will be converted to a static GIF of the first frame, removing the animation.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="include_entities" required="false" style="query" type="xs:boolean">
                            <doc>The &lt;tt&gt;entities&lt;/tt&gt; node will not be included when set to &lt;tt&gt;false&lt;/tt&gt;.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="skip_status" required="false" style="query" type="xs:string">
                            <doc>When set to either &lt;tt&gt;true&lt;/tt&gt;, &lt;tt&gt;t&lt;/tt&gt; or &lt;tt&gt;1&lt;/tt&gt; statuses will not be included in the returned user objects.</doc>
                        </param>
                    </request>
                    <response>
                        <representation mediaType="application/json"/>
                    </response>
                    <ns2:categories>
                        <ns2:category>account</ns2:category>
                    </ns2:categories>
                    <ns3:api-versions>
                        <ns3:api-version>1.1</ns3:api-version>
                    </ns3:api-versions>
                    <ns3:see-also>
                        <ns3:see href="/docs/user-profile-images-and-banners">User Profile Images and Banners</ns3:see>
                        <ns3:see href="/docs/api/1.1/get/users/lookup">GET users/lookup</ns3:see>
                    </ns3:see-also>
                </method>
            </resource>
        </resource>
        <resource path="/favorites">
            <resource path="/list">
                <method name="GET">
                    <doc>Returns the 20 most recent Tweets favorited by the authenticating or specified user.</doc>
                    <request>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="user_id" required="false" style="query" type="xs:int">
                            <doc>The ID of the user for whom to return results for.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="screen_name" required="false" style="query" type="xs:string">
                            <doc>The screen name of the user for whom to return results for.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="count" required="false" style="query" type="xs:int">
                            <doc>Specifies the number of records to retrieve. Must be less than or equal to 200.  Defaults to 20.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="since_id" required="false" style="query" type="xs:int">
                            <doc>Returns results with an ID greater than (that is, more recent than) the specified ID. There are limits to the number of Tweets which can be accessed through the API. If the limit of Tweets has occured since the since_id, the since_id will be forced to the oldest ID available.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="max_id" required="false" style="query" type="xs:int">
                            <doc>Returns results with an ID less than (that is, older than) or equal to the specified ID.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="include_entities" required="false" style="query" type="xs:boolean">
                            <doc>The &lt;tt&gt;entities&lt;/tt&gt; node will be omitted when set to &lt;tt&gt;false&lt;/tt&gt;.</doc>
                        </param>
                    </request>
                    <response>
                        <representation element="ns1:tweets" mediaType="application/json"/>
                    </response>
                    <ns4:rates>
                        <ns4:rate limit="15" scope="USER" unit="MINUTES" window="15"/>
                        <ns4:rate limit="15" scope="APPLICATION" unit="MINUTES" window="15"/>
                    </ns4:rates>
                    <ns2:categories>
                        <ns2:category>favorites</ns2:category>
                    </ns2:categories>
                    <ns3:api-versions>
                        <ns3:api-version>1.1</ns3:api-version>
                    </ns3:api-versions>
                    <ns3:see-also>
                        <ns3:see href="/docs/working-with-timelines">Working with Timelines</ns3:see>
                        <ns3:see href="/docs/api/1.1/post/favorites/create">POST favorites/create</ns3:see>
                        <ns3:see href="/docs/api/1.1/post/favorites/destroy">POST favorites/destroy</ns3:see>
                    </ns3:see-also>
                    <ns3:tags>
                        <ns3:tag>Favorites</ns3:tag>
                    </ns3:tags>
                </method>
            </resource>
            <resource path="/create">
                <method name="POST">
                    <doc>Favorites the status specified in the ID parameter as the authenticating user. Returns the favorite status when successful. This process invoked by this method is asynchronous. The immediately returned status may not indicate the resultant favorited status of the tweet.</doc>
                    <request>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="id" required="false" style="template" type="xs:int">
                            <doc>The numerical ID of the desired status.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="include_entities" required="false" style="query" type="xs:boolean">
                            <doc>The &lt;tt&gt;entities&lt;/tt&gt; node will be omitted when set to &lt;tt&gt;false&lt;/tt&gt;.</doc>
                        </param>
                    </request>
                    <response>
                        <representation element="ns1:tweets" mediaType="application/json"/>
                    </response>
                    <ns2:categories>
                        <ns2:category>statuses</ns2:category>
                    </ns2:categories>
                    <ns3:api-versions>
                        <ns3:api-version>1.1</ns3:api-version>
                    </ns3:api-versions>
                    <ns3:see-also>
                        <ns3:see href="/docs/api/1.1/post/favorites/destroy">POST favorites/destroy</ns3:see>
                        <ns3:see href="/docs/api/1.1/get/favorites/list">GET favorites/list</ns3:see>
                    </ns3:see-also>
                </method>
            </resource>
            <resource path="/destroy">
                <method name="POST">
                    <doc>Un-favorites the status specified in the ID parameter as the authenticating user. Returns the un-favorited status in the requested format when successful. This process invoked by this method is asynchronous. The immediately returned status may not indicate the resultant favorited status of the tweet.</doc>
                    <request>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="id" required="false" style="template" type="xs:int">
                            <doc>The numerical ID of the desired status.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="include_entities" required="false" style="query" type="xs:boolean">
                            <doc>The &lt;tt&gt;entities&lt;/tt&gt; node will be omitted when set to &lt;tt&gt;false&lt;/tt&gt;.</doc>
                        </param>
                    </request>
                    <response>
                        <representation element="ns1:tweets" mediaType="application/json"/>
                    </response>
                    <ns2:categories>
                        <ns2:category>statuses</ns2:category>
                    </ns2:categories>
                    <ns3:api-versions>
                        <ns3:api-version>1.1</ns3:api-version>
                    </ns3:api-versions>
                    <ns3:see-also>
                        <ns3:see href="/docs/api/1.1/get/favorites/list">GET favorites/list</ns3:see>
                        <ns3:see href="/docs/api/1.1/post/favorites/create">POST favorites/create</ns3:see>
                    </ns3:see-also>
                </method>
            </resource>
        </resource>
        <resource path="/users">
            <resource path="/contributees">
                <method name="GET">
                    <doc>Returns a collection of users that the specified user can &amp;quot;contribute&amp;quot; to.</doc>
                    <request>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="user_id" required="false" style="query" type="xs:string">
                            <doc>The ID of the user for whom to return results for. Helpful for disambiguating when a valid user ID is also a valid screen name.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="screen_name" required="false" style="query" type="xs:string">
                            <doc>The screen name of the user for whom to return results for.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="include_entities" required="false" style="query" type="xs:boolean">
                            <doc>The &lt;tt&gt;entities&lt;/tt&gt; node will be disincluded when set to &lt;tt&gt;false&lt;/tt&gt;.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="skip_status" required="false" style="query" type="xs:string">
                            <doc>When set to either &lt;tt&gt;true&lt;/tt&gt;, &lt;tt&gt;t&lt;/tt&gt; or &lt;tt&gt;1&lt;/tt&gt; statuses will not be included in the returned user objects.</doc>
                        </param>
                    </request>
                    <response>
                        <representation element="ns1:users" mediaType="application/json"/>
                    </response>
                    <ns4:rates>
                        <ns4:rate limit="15" scope="USER" unit="MINUTES" window="15"/>
                    </ns4:rates>
                    <ns2:categories>
                        <ns2:category>users</ns2:category>
                    </ns2:categories>
                    <ns3:api-versions>
                        <ns3:api-version>1.1</ns3:api-version>
                    </ns3:api-versions>
                    <ns3:see-also>
                        <ns3:see href="/docs/api/1.1/get/users/lookup">GET users/lookup</ns3:see>
                        <ns3:see href="/docs/api/1.1/get/users/contributors">GET users/contributors</ns3:see>
                    </ns3:see-also>
                    <ns3:tags>
                        <ns3:tag>contributors</ns3:tag>
                    </ns3:tags>
                </method>
            </resource>
            <resource path="/contributors">
                <method name="GET">
                    <doc>Returns a collection of users who can contribute to the specified account.</doc>
                    <request>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="user_id" required="false" style="query" type="xs:string">
                            <doc>The ID of the user for whom to return results for.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="screen_name" required="false" style="query" type="xs:string">
                            <doc>The screen name of the user for whom to return results for.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="include_entities" required="false" style="query" type="xs:boolean">
                            <doc>The &lt;tt&gt;entities&lt;/tt&gt; node will be disincluded when set to &lt;tt&gt;false&lt;/tt&gt;.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="skip_status" required="false" style="query" type="xs:string">
                            <doc>When set to either &lt;tt&gt;true&lt;/tt&gt;, &lt;tt&gt;t&lt;/tt&gt; or &lt;tt&gt;1&lt;/tt&gt; statuses will not be included in the returned user objects.</doc>
                        </param>
                    </request>
                    <response>
                        <representation element="ns1:users" mediaType="application/json"/>
                    </response>
                    <ns4:rates>
                        <ns4:rate limit="15" scope="USER" unit="MINUTES" window="15"/>
                    </ns4:rates>
                    <ns2:categories>
                        <ns2:category>users</ns2:category>
                    </ns2:categories>
                    <ns3:api-versions>
                        <ns3:api-version>1.1</ns3:api-version>
                    </ns3:api-versions>
                    <ns3:see-also>
                        <ns3:see href="/docs/api/1.1/get/users/contributees">GET users/contributees</ns3:see>
                    </ns3:see-also>
                    <ns3:tags>
                        <ns3:tag>contributors</ns3:tag>
                    </ns3:tags>
                </method>
            </resource>
            <resource path="/lookup">
                <method name="GET">
                    <doc>Returns fully-hydrated user objects for up to 100 users per request, as specified by comma-separated values passed to the user_id and/or screen_name parameters.</doc>
                    <request>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="screen_name" required="false" style="query" type="xs:string">
                            <doc>A comma separated list of screen names, up to 100 are allowed in a single request. You are strongly encouraged to use a POST for larger (up to 100 screen names) requests.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="user_id" required="false" style="query" type="xs:string">
                            <doc>A comma separated list of user IDs, up to 100 are allowed in a single request.  You are strongly encouraged to use a POST for larger requests.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="include_entities" required="false" style="query" type="xs:boolean">
                            <doc>The &lt;tt&gt;entities&lt;/tt&gt; node that may appear within embedded statuses will be disincluded when set to &lt;tt&gt;false&lt;/tt&gt;.</doc>
                        </param>
                    </request>
                    <response>
                        <representation element="ns1:users" mediaType="application/json"/>
                    </response>
                    <ns4:rates>
                        <ns4:rate limit="180" scope="USER" unit="MINUTES" window="15"/>
                        <ns4:rate limit="60" scope="APPLICATION" unit="MINUTES" window="15"/>
                    </ns4:rates>
                    <ns2:categories>
                        <ns2:category>users</ns2:category>
                    </ns2:categories>
                    <ns3:api-versions>
                        <ns3:api-version>1.1</ns3:api-version>
                    </ns3:api-versions>
                    <ns3:see-also>
                        <ns3:see href="/docs/api/1.1/get/users/search">GET users/search</ns3:see>
                        <ns3:see href="/docs/api/1.1/get/users/show">GET users/show</ns3:see>
                    </ns3:see-also>
                    <ns3:tags>
                        <ns3:tag>Bulk Operations</ns3:tag>
                        <ns3:tag>finding users</ns3:tag>
                    </ns3:tags>
                </method>
            </resource>
            <resource path="/profile_banner">
                <method name="GET">
                    <doc>Returns a map of the available size variations of the specified user&amp;#039;s profile banner. If the user has not uploaded a profile banner, a HTTP 404 will be served instead. This method can be used instead of string manipulation on the profile_banner_url returned in user objects as described in User Profile Images and Banners.</doc>
                    <request>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="user_id" required="false" style="query" type="xs:int">
                            <doc>The ID of the user for whom to return results for. Helpful for disambiguating when a valid user ID is also a valid screen name.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="screen_name" required="false" style="query" type="xs:string">
                            <doc>The screen name of the user for whom to return results for. Helpful for disambiguating when a valid screen name is also a user ID.</doc>
                        </param>
                    </request>
                    <response>
                        <representation mediaType="application/json"/>
                    </response>
                    <ns4:rates>
                        <ns4:rate limit="180" scope="USER" unit="MINUTES" window="15"/>
                    </ns4:rates>
                    <ns2:categories>
                        <ns2:category>users</ns2:category>
                    </ns2:categories>
                    <ns3:api-versions>
                        <ns3:api-version>1.1</ns3:api-version>
                    </ns3:api-versions>
                    <ns3:see-also>
                        <ns3:see href="/docs/api/1.1/post/account/remove_profile_banner">POST account/remove_profile_banner</ns3:see>
                        <ns3:see href="/docs/api/1.1/post/account/update_profile_banner">POST account/update_profile_banner</ns3:see>
                        <ns3:see href="/docs/user-profile-images-and-banners">User Profile Images and Banners</ns3:see>
                    </ns3:see-also>
                    <ns3:tags>
                        <ns3:tag>profile banner</ns3:tag>
                        <ns3:tag>profiles</ns3:tag>
                    </ns3:tags>
                </method>
            </resource>
            <resource path="/search">
                <method name="GET">
                    <doc>Provides a simple, relevance-based search interface to public user accounts on Twitter. Try querying by topical interest, full name, company name, location, or other criteria. Exact match searches are not supported.</doc>
                    <request>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="q" required="false" style="template" type="xs:string">
                            <doc>The search query to run against people search.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="page" required="false" style="query" type="xs:int">
                            <doc>Specifies the page of results to retrieve.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="count" required="false" style="query" type="xs:int">
                            <doc>The number of potential user results to retrieve per page. This value has a maximum of 20.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="include_entities" required="false" style="query" type="xs:boolean">
                            <doc>The &lt;tt&gt;entities&lt;/tt&gt; node will be disincluded from embedded tweet objects when set to &lt;tt&gt;false&lt;/tt&gt;.</doc>
                        </param>
                    </request>
                    <response>
                        <representation element="ns1:users" mediaType="application/json"/>
                    </response>
                    <ns4:rates>
                        <ns4:rate limit="180" scope="USER" unit="MINUTES" window="15"/>
                    </ns4:rates>
                    <ns2:categories>
                        <ns2:category>users</ns2:category>
                    </ns2:categories>
                    <ns3:api-versions>
                        <ns3:api-version>1.1</ns3:api-version>
                    </ns3:api-versions>
                    <ns3:see-also>
                        <ns3:see href="/docs/api/1.1/get/users/lookup">GET users/lookup</ns3:see>
                        <ns3:see href="/docs/api/1.1/get/users/show">GET users/show</ns3:see>
                        <ns3:see href="/docs/api/1.1/get/search/tweets">GET search/tweets</ns3:see>
                    </ns3:see-also>
                    <ns3:tags>
                        <ns3:tag>Search</ns3:tag>
                        <ns3:tag>finding users</ns3:tag>
                    </ns3:tags>
                </method>
            </resource>
            <resource path="/show">
                <method name="GET">
                    <doc>Returns a variety of information about the user specified by the required user_id or screen_name parameter. The author&amp;#039;s most recent Tweet will be returned inline when possible.</doc>
                    <request>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="user_id" required="false" style="template" type="xs:int">
                            <doc>The ID of the user for whom to return results for. Either an id or screen_name is required for this method.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="screen_name" required="false" style="template" type="xs:string">
                            <doc>The screen name of the user for whom to return results for. Either a id or screen_name is required for this method.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="include_entities" required="false" style="query" type="xs:boolean">
                            <doc>The &lt;tt&gt;entities&lt;/tt&gt; node will be disincluded when set to &lt;tt&gt;false&lt;/tt&gt;.</doc>
                        </param>
                    </request>
                    <response>
                        <representation element="ns1:users" mediaType="application/json"/>
                    </response>
                    <ns4:rates>
                        <ns4:rate limit="180" scope="USER" unit="MINUTES" window="15"/>
                        <ns4:rate limit="180" scope="APPLICATION" unit="MINUTES" window="15"/>
                    </ns4:rates>
                    <ns2:categories>
                        <ns2:category>users</ns2:category>
                    </ns2:categories>
                    <ns3:api-versions>
                        <ns3:api-version>1.1</ns3:api-version>
                    </ns3:api-versions>
                    <ns3:see-also>
                        <ns3:see href="/docs/api/1.1/get/friends/ids">GET friends/ids</ns3:see>
                        <ns3:see href="/docs/api/1.1/get/followers/ids">GET followers/ids</ns3:see>
                        <ns3:see href="/docs/api/1.1/get/users/lookup">GET users/lookup</ns3:see>
                        <ns3:see href="/docs/api/1.1/get/users/search">GET users/search</ns3:see>
                        <ns3:see href="/docs/user-profile-images-and-banners">User Profile Images and Banners</ns3:see>
                    </ns3:see-also>
                    <ns3:tags>
                        <ns3:tag>finding users</ns3:tag>
                    </ns3:tags>
                </method>
            </resource>
            <resource path="/suggestions">
                <method name="GET">
                    <doc>Access to Twitter&amp;#039;s suggested user list. This returns the list of suggested user categories. The category can be used in GET users/suggestions/:slug to get the users in that category.</doc>
                    <request>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="lang" required="false" style="query" type="xs:string">
                            <doc>Restricts the suggested categories to the requested language. The language must be specified by the appropriate two letter ISO 639-1 representation. Currently supported languages are provided by the &lt;a href="https://dev.twitter.com/docs/api/1.1/get/help/languages"&gt;GET help/languages&lt;/a&gt; API request. Unsupported language codes will receive English (en) results. If you use &lt;tt&gt;lang&lt;/tt&gt; in this request, ensure you also include it when requesting the &lt;a href="https://dev.twitter.com/docs/api/1.1/get/users/suggestions/%3Aslug"&gt;GET users/suggestions/:slug&lt;/a&gt; list.</doc>
                        </param>
                    </request>
                    <response>
                        <representation mediaType="application/json"/>
                    </response>
                    <ns4:rates>
                        <ns4:rate limit="15" scope="USER" unit="MINUTES" window="15"/>
                        <ns4:rate limit="15" scope="APPLICATION" unit="MINUTES" window="15"/>
                    </ns4:rates>
                    <ns2:categories>
                        <ns2:category>users</ns2:category>
                    </ns2:categories>
                    <ns3:api-versions>
                        <ns3:api-version>1.1</ns3:api-version>
                    </ns3:api-versions>
                    <ns3:see-also>
                        <ns3:see href="/docs/api/1.1/get/users/suggestions/%3Aslug">GET users/suggestions/:slug</ns3:see>
                        <ns3:see href="/docs/api/1.1/get/users/suggestions/%3Aslug/members">GET users/suggestions/:slug/members</ns3:see>
                    </ns3:see-also>
                    <ns3:tags>
                        <ns3:tag>finding users</ns3:tag>
                    </ns3:tags>
                </method>
                <resource path="/{slug}">
                    <method name="GET">
                        <doc>Access the users in a given category of the Twitter suggested user list. It is recommended that applications cache this data for no more than one hour.</doc>
                        <request>
                            <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="slug" required="false" style="template" type="xs:string">
<doc>The short name of list or a category</doc>
                            </param>
                            <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="lang" required="false" style="query" type="xs:string">
<doc>Restricts the suggested categories to the requested language. The language must be specified by the appropriate two letter ISO 639-1 representation. Currently supported languages are provided by the &lt;a href="https://dev.twitter.com/docs/api/1.1/get/help/languages"&gt;GET help/languages&lt;/a&gt; API request. Unsupported language codes will receive English (en) results. If you use &lt;tt&gt;lang&lt;/tt&gt; in this request, ensure you also include it when requesting the &lt;a href="https://dev.twitter.com/docs/api/1.1/get/users/suggestions/%3Aslug" class="active"&gt;GET users/suggestions/:slug&lt;/a&gt; list.</doc>
                            </param>
                        </request>
                        <response>
                            <representation mediaType="application/json"/>
                        </response>
                        <ns4:rates>
                            <ns4:rate limit="15" scope="USER" unit="MINUTES" window="15"/>
                            <ns4:rate limit="15" scope="APPLICATION" unit="MINUTES" window="15"/>
                        </ns4:rates>
                        <ns2:categories>
                            <ns2:category>users</ns2:category>
                        </ns2:categories>
                        <ns3:api-versions>
                            <ns3:api-version>1.1</ns3:api-version>
                        </ns3:api-versions>
                        <ns3:see-also>
                            <ns3:see href="/docs/api/1.1/get/users/suggestions">GET users/suggestions</ns3:see>
                            <ns3:see href="/docs/api/1.1/get/users/suggestions/%3Aslug">GET users/suggestions/:slug</ns3:see>
                        </ns3:see-also>
                        <ns3:tags>
                            <ns3:tag>finding users</ns3:tag>
                        </ns3:tags>
                    </method>
                </resource>
                <resource path="/{slug}">
                    <resource path="/members">
                        <method name="GET">
                            <doc>Access the users in a given category of the Twitter suggested user list and return their most recent status if they are not a protected user.</doc>
                            <request>
<param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="slug" required="false" style="template" type="xs:string">
    <doc>The short name of list or a category</doc>
</param>
                            </request>
                            <response>
<representation element="ns1:users" mediaType="application/json"/>
                            </response>
                            <ns4:rates>
<ns4:rate limit="15" scope="USER" unit="MINUTES" window="15"/>
<ns4:rate limit="15" scope="APPLICATION" unit="MINUTES" window="15"/>
                            </ns4:rates>
                            <ns2:categories>
<ns2:category>users</ns2:category>
                            </ns2:categories>
                            <ns3:api-versions>
<ns3:api-version>1.1</ns3:api-version>
                            </ns3:api-versions>
                            <ns3:see-also>
<ns3:see href="/docs/api/1.1/get/users/suggestions/%3Aslug">GET users/suggestions/:slug</ns3:see>
<ns3:see href="/docs/api/1.1/get/users/suggestions">GET users/suggestions</ns3:see>
                            </ns3:see-also>
                            <ns3:tags>
<ns3:tag>finding users</ns3:tag>
                            </ns3:tags>
                        </method>
                    </resource>
                </resource>
            </resource>
            <resource path="/report_spam">
                <method name="POST">
                    <doc>Report the specified user as a spam account to Twitter. Additionally performs the equivalent of POST blocks/create on behalf of the authenticated user.</doc>
                    <request>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="screen_name" required="false" style="query" type="xs:string">
                            <doc>The ID or screen_name of the user you want to report as a spammer. Helpful for disambiguating when a valid screen name is also a user ID.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="user_id" required="false" style="query" type="xs:int">
                            <doc>The ID of the user you want to report as a spammer. Helpful for disambiguating when a valid user ID is also a valid screen name.</doc>
                        </param>
                    </request>
                    <response>
                        <representation element="ns1:users" mediaType="application/json"/>
                    </response>
                    <ns2:categories>
                        <ns2:category>users</ns2:category>
                    </ns2:categories>
                    <ns3:api-versions>
                        <ns3:api-version>1.1</ns3:api-version>
                    </ns3:api-versions>
                    <ns3:see-also>
                        <ns3:see href="/docs/support">Support</ns3:see>
                    </ns3:see-also>
                </method>
            </resource>
        </resource>
        <resource path="/application">
            <resource path="/rate_limit_status">
                <method name="GET">
                    <doc>Returns the current rate limits for methods belonging to the specified resource families.</doc>
                    <request>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="resources" required="false" style="query" type="xs:string">
                            <doc>A comma-separated list of resource families you want to know the current rate limit disposition for. For best performance, only specify the resource families pertinent to your application.</doc>
                        </param>
                    </request>
                    <response>
                        <representation mediaType="application/json"/>
                    </response>
                    <ns4:rates>
                        <ns4:rate limit="180" scope="USER" unit="MINUTES" window="15"/>
                        <ns4:rate limit="180" scope="APPLICATION" unit="MINUTES" window="15"/>
                    </ns4:rates>
                    <ns2:categories>
                        <ns2:category>application</ns2:category>
                    </ns2:categories>
                    <ns3:api-versions>
                        <ns3:api-version>1.1</ns3:api-version>
                    </ns3:api-versions>
                    <ns3:see-also>
                        <ns3:see href="/docs/rate-limiting/1.1">REST API Rate Limiting in v1.1</ns3:see>
                        <ns3:see href="/docs/auth/application-only-auth">Application-only authentication</ns3:see>
                    </ns3:see-also>
                    <ns3:tags>
                        <ns3:tag>Rate Limits</ns3:tag>
                        <ns3:tag>rate limiting</ns3:tag>
                    </ns3:tags>
                </method>
            </resource>
        </resource>
        <resource path="/direct_messages">
            <resource path="/sent">
                <method name="GET">
                    <doc>Returns the 20 most recent direct messages sent by the authenticating user. Includes detailed information about the sender and recipient user. You can request up to 200 direct messages per call, up to a maximum of 800 outgoing DMs. Important: This method requires an access token with RWD (read, write &amp;amp; direct message) permissions.</doc>
                    <request>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="since_id" required="false" style="query" type="xs:int">
                            <doc>Returns results with an ID greater than (that is, more recent than) the specified ID. There are limits to the number of Tweets which can be accessed through the API. If the limit of Tweets has occured since the since_id, the since_id will be forced to the oldest ID available.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="max_id" required="false" style="query" type="xs:int">
                            <doc>Returns results with an ID less than (that is, older than) or equal to the specified ID.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="count" required="false" style="query" type="xs:int">
                            <doc>Specifies the number of records to retrieve. Must be less than or equal to 200.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="page" required="false" style="query" type="xs:int">
                            <doc>Specifies the page of results to retrieve.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="include_entities" required="false" style="query" type="xs:boolean">
                            <doc>The &lt;tt&gt;entities&lt;/tt&gt; node will not be included when set to &lt;tt&gt;false&lt;/tt&gt;.</doc>
                        </param>
                    </request>
                    <response>
                        <representation element="ns1:tweets" mediaType="application/json"/>
                    </response>
                    <ns4:rates>
                        <ns4:rate limit="15" scope="USER" unit="MINUTES" window="15"/>
                    </ns4:rates>
                    <ns2:categories>
                        <ns2:category>direct_messages</ns2:category>
                    </ns2:categories>
                    <ns3:api-versions>
                        <ns3:api-version>1.1</ns3:api-version>
                    </ns3:api-versions>
                </method>
            </resource>
            <resource path="/show">
                <method name="GET">
                    <doc>Returns a single direct message, specified by an id parameter. Like the /1.1/direct_messages.format request, this method will include the user objects of the sender and recipient.  Important: This method requires an access token with RWD (read, write &amp;amp; direct message) permissions. Consult The Application Permission Model for more information.</doc>
                    <request>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="id" required="false" style="template" type="xs:int">
                            <doc>The ID of the direct message.</doc>
                        </param>
                    </request>
                    <response>
                        <representation mediaType="application/json"/>
                    </response>
                    <ns4:rates>
                        <ns4:rate limit="15" scope="USER" unit="MINUTES" window="15"/>
                    </ns4:rates>
                    <ns2:categories>
                        <ns2:category>direct_messages</ns2:category>
                    </ns2:categories>
                    <ns3:api-versions>
                        <ns3:api-version>1.1</ns3:api-version>
                    </ns3:api-versions>
                    <ns3:see-also>
                        <ns3:see href="/docs/api/1.1/get/direct_messages">GET direct_messages</ns3:see>
                        <ns3:see href="/docs/api/1.1/get/direct_messages/sent">GET direct_messages/sent</ns3:see>
                    </ns3:see-also>
                    <ns3:tags>
                        <ns3:tag>Direct Messages</ns3:tag>
                    </ns3:tags>
                </method>
            </resource>
            <resource path="/destroy">
                <method name="POST">
                    <doc>Destroys the direct message specified in the required ID parameter. The authenticating user must be the recipient of the specified direct message.   Important: This method requires an access token with RWD (read, write &amp;amp; direct message) permissions. Consult The Application Permission Model for more information.</doc>
                    <request>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="id" required="false" style="template" type="xs:int">
                            <doc>The ID of the direct message to delete.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="include_entities" required="false" style="query" type="xs:boolean">
                            <doc>The &lt;tt&gt;entities&lt;/tt&gt; node will not be included when set to &lt;tt&gt;false&lt;/tt&gt;.</doc>
                        </param>
                    </request>
                    <response>
                        <representation element="ns1:tweets" mediaType="application/json"/>
                    </response>
                    <ns2:categories>
                        <ns2:category>direct_messages</ns2:category>
                    </ns2:categories>
                    <ns3:api-versions>
                        <ns3:api-version>1.1</ns3:api-version>
                    </ns3:api-versions>
                </method>
            </resource>
            <resource path="/new">
                <method name="POST">
                    <doc>Sends a new direct message to the specified user from the authenticating user. Requires both the user and text parameters and must be a POST. Returns the sent message in the requested format if successful.</doc>
                    <request>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="user_id" required="false" style="query" type="xs:int">
                            <doc>The ID of the user who should receive the direct message. Helpful for disambiguating when a valid user ID is also a valid screen name.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="screen_name" required="false" style="query" type="xs:string">
                            <doc>The screen name of the user who should receive the direct message. Helpful for disambiguating when a valid screen name is also a user ID.</doc>
                        </param>
                        <param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="text" required="false" style="template" type="xs:string">
                            <doc>The text of your direct message. Be sure to URL encode as necessary, and keep the message under 140 characters.</doc>
                        </param>
                    </request>
                    <response>
                        <representation element="ns1:tweets" mediaType="application/json"/>
                    </response>
                    <ns2:categories>
                        <ns2:category>direct_messages</ns2:category>
                    </ns2:categories>
                    <ns3:api-versions>
                        <ns3:api-version>1.1</ns3:api-version>
                    </ns3:api-versions>
                </method>
            </resource>
        </resource>
    </resources>
</application>